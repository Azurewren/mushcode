@@ COMMUNICATIONS - BASIC
+help/add Basic=[u(cobj,help-dynamic)]/HLP`BASIC
+help/category Basic=Communications
&HLP`BASIC [u(cobj,help-dynamic)]=These are basic communications methods that show only to the local room.%R%R[ansi(hc,Concepts)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,speech)] - <speech> is always text. By default\, it's considered. 'spoken.' Also note that Speech beginning with a " will always be interpreted as 'spoken\,' speech beginning with a : is 'posed' and will show as '<yourname> <speech>'\, and speech beginning with a ; is 'semiposed' and will show as '<yourname><speech>'. use \%R to make a LINEBREAK and \%T to do a TAB/INDENT.%R[ansi(h,IC)] - In-character. Part of roleplay. The actions of your character.%R[ansi(h,OOC)] - Out of character. Not part of the game's story or actions of your character.)]%R%R[ansi(hc,Basic Commands)]%RThese are IC in most rooms!%R[align(5 [sub(u(width,%#),6)],,[ansi(h,say <text>)] - Sends a message to the local room.%R[ansi(h,:<text>)] - Poses/emotes to the room.%R[ansi(h,;<text>)] - Semiposes to the room.%R[ansi(h,@emit <text>)] - Emits text to the room without a beginning name. Mostly used for roleplay.%R[ansi(h,think <text>)] - Only you see this text. A personal 'echo.' Useful for testing formatting and colors\, etc.)]%R%RInterested in coloring your text? Check out [u(pueblize,ansi(h,help ansi\(\)),help ansi\(\))]. You must enclose uses of ansi() in brackets\, such as \[ansi()\]. It's also helpful to enclose your actual text in curly braces \{\} if you're going to include commas in it. An example: \[ansi(hr,\{behold, this text is red\})\] results in [ansi(hr,{behold, this text is red})]%R%RLooking for more advanced formatting tricks? You might be interested in [u(pueblize,ansi(h,help center\(\)))]\, [u(pueblize,ansi(h,help ljust\(\)))]\, [u(pueblize,ansi(h,help rjust\(\)))]\, [u(pueblize,ansi(h,help space\(\)))]\, and [u(pueblize,ansi(h,help repeat\(\)))]

@@ CHARACTEr - @SEX
+help/add Character/@sex=[ansi(h,@sex me=<gender>)]%R%RThis command is used to set your gender. Setting it to Male or Female (or at least M or F) will make some commands use gender-based pronouns.

@@ SHELP - BUILDING
+shelp/add Building/+builder=[u(cobj,help-dynamic)]/SHLP`+BUILDER
&SHLP`+BUILDER [u(cobj,help-dynamic)]=Builder Characters are special characters used to enlarge the grid. They may use @dig, @open, @link, and similar commands freely.%R%R[ansi(hc,Builder Powers)]%RThese are granted to a builder by the +builder command:%R[align(5 [sub(u(width,%#),6)],,{[ansi(h,builder)] - enables the @dig, @open, @link, and similar commands.%R[ansi(h,link_anywhere\, open_anywhere)] - allows builders to manage exit destinations and link them to the grid.%R[ansi(h,no_quota)] - Builders may create unlimited objects.%R[ansi(h,no_pay)] - Builders can create objects without needing the hardcoded CPU currency.%R[ansi(h,pick_dbref)] - Builders may recycle old DBREF numbers for new objects.})]%R%RWIZARDS enjoy these powers automatically except for no_pay which is rarely needed except for code-heavy projects.%R%R[ansi(hc,Commands)]%R[align(5 [sub(u(width,%#),6)],,{[ansi(h,+builder)] - Lists all current Builder characters by DBREF, name, granted powers, and number of objects owned.%R[ansi(h,+builder <player>)] - Shows everything <player> has made - whether they are or are not a Builder.%R[ansi(h,+builder/add <name>)] - Promotes a PC to Builder status.%R[ansi(h,+builder/rem <name>)] - Revokes a Builder's priveleges.})]%R%RNote that rooms, exits, objects, and other things created by (owned by) a character are DESTROYED if that character is deleted. For this reason it is best to simply @newpass unused builders, or alternatively @chown their objects to a buildstaffer character or similar 'safe' location. @chowning can be done easily and conveniently using the following method from a WIZARD character meant to hold the code:%R%R[ansi(h,lit(@dolist lsearch(*buildername)=@chown/preserve %i0=me))]%R%RIf the player is suspected of shenanigans, use the following instead:%R[ansi(h,lit(@dolist lsearch(*buildername)={@halt %i0;@chown %i0=me;@wipe %i0=STARTUP;@wipe %i0=ACONNECT;@set %i0=NO_COMMAND;@restart %i0}))]

+shelp/add Building/Room Features=[u(cobj,help-dynamic)]/SHLP`ROOMFEATURES
&SHLP`ROOMFEATURES [u(cobj,help-dynamic)]=Exits with an alias that consists of part of its name will have that part displayed in colored <>. For example, making an exit named North with the alias n will result in a <N>orth. The alias shortcut color is stored in the attribute VAR`ALIASCOLOR on the ancestor room. Setting one on a local room overrides it.%R%RExits sort and display alphabetically. They can have an 'ORDER' attribute that has a number in it which overrides this sorting based on the number, however if ANY Exit in the room has such an attribute then ALL must have it.

@@ TECHNICAL - +CONFIG
+help/add +config=[u(cobj,help-dynamic)]/HLP`+CONFIG
+help/category +config=Technical
&HLP`+CONFIG [u(cobj,help-dynamic)]=The [ansi(hc,+config)] system allows players to use their own private settings ranging from colors to personal alerts. This  their own private color scheme for many features on this game, such as the BBS display or custom colors that they see in place of defaults for many things. Options are set account-wide if you are bound to one.%R[ansi(hc,See Also:)] [u(pueblize,help ansi())]%R%R[ansi(hc,Managing +config)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+config)] - List all Available options by category and current values.%R[ansi(h,+config <category>/<option>=<value>)] - Sets an option. Set to nothing to clear/reset to default.%R[ansi(h,+config/name <player>=<color>)] - Change what color you see a character's name as in speech.[if(isdbref(u(cobj,gms)),%R[ansi(h,+config/group <group>=<color>)] - Change what color you see a group as.)][if(isdbref(u(cobj,channel)),%R[ansi(h,+config/channel <channel>=<color>)] - Change what color you see a channel as.)]%R%RValidation is performed on entries\, so don't worry about anything exploding.)]%R%R[ansi(hc,Types)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,BOOL)] - 1 for True/Enabled\, 0 for False/Disabled.%R[ansi(h,DURATION)] - A length of time as accepted by stringsecs function. Example: 5d 10m for 5 days and 10 minutes.%R[ansi(h,COLOR)] - A Color code as accepted by the ansi\(\) function.%R[ansi(h,TZ)] - A Timezone. Check help timezones. These are CASE SENSITIVE so beware.)]

+shelp/add +gameconfig=[u(cobj,help-dynamic)]/SHLP`+GAMECONFIG
+shelp/category +gameconfig=Administration
&SHLP`+GAMECONFIG [u(cobj,help-dynamic)]=The [ansi(hc,+gameconfig)] system allows staff to set global configuration options and settings\, ranging from the availability of certain systems to what colors are used for system messages.%R[ansi(hc,See Also:)] [u(pueblize,help ansi())]%R%R[ansi(hc,Managing +gameconfig)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+gameconfig)] - List all Available options by category and current values.%R[ansi(h,+gameconfig <category>/<option>=<value>)] - Sets an option. Set to nothing to clear/reset to default.%R[ansi(h,+gameconfig/get <category>/<option>)] - Retrieve plain text of value.)]%R%R[ansi(hc,Types)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,BOOL)] - 1 for True/Enabled\, 0 for False/Disabled.%R[ansi(h,DURATION)] - A length of time as accepted by stringsecs function. Example: 5d 10m for 5 days and 10 minutes.%R[ansi(h,COLOR)] - A Color code as accepted by the ansi\(\) function.%R[ansi(h,TZ)] - A Timezone. Check help timezones. These are CASE SENSITIVE so beware.%R[ansi(h,POSINT)] - Positive Integer. Whole number greater than 0.%R[ansi(h,WORD)] - Any text at all. Make sure it fits the option.%R[ansi(h,LIST)] - A list of words separated by the | character. For instance: Word1|Word2|Word3.)]

+help/add Room Objects=[u(cobj,help-dynamic)]/HLP`ROOMOBJ
+help/category Room Objects=Technical
&HLP`ROOMOBJ [u(cobj,help-dynamic)]=Players are allowed - and encouraged - to create their own rooms. Most rooms on the game were created using @dig, making them full-fledged Rooms. @dig however, requires admin powers to use, because of how easily it can mess up the game's rooms if misused. However, there is another way to create what are essentially 'rooms.'%R%RPlayers may make Objects, place these in a room, give them a room description and allow others to enter them. They work in almost all ways like a true Room, save that they can be personalized, restricted, and so on. The following is a basic tutorial on how these work.%R%RCONCEPT EXPLANATION: Targeting objects and DBrefs. All things - rooms, players, exits, and so on - have a DBREF, or 'Database Reference.' It is like an ID code. When you use commands such as 'look <name>' PennMUSH checks to see if there is anything of that name in the same location as you. You could, in theory, also use look #800 to look at object #800. Such things are interchangeable for code purposes. Some words can be used to substitute things-- such as 'me' or 'here.' 'me' will always be YOUR dbref, which is why &short-desc me=<your short desc> works. here will refer to your current location. For the purposes of this tutorial, <target> will refer to the object's name or DBREF (if you are outside it or have it in your inventory) or using here (if you are inside it.)%R%R[ansi(h,@create <name>)] - this will make an object and place it in your inventory.%R[ansi(h,@nuke <name or DBREF>)] - this will destroy an object. Using just once will mark it for destruction, which can be undone with [ansi(h,@undestroy <name or dbref>)] if it is typed quickly. Using twice will annihilate object. This cannot be undone.%R%R[ansi(h,@set <target>=ENTER_OK)] - this will set a flag on the object that will allow other people to enter it. Using !ENTER_OK instead will remove the flag. (You may always enter your own objects.)%R%R[ansi(h,inventory)] - this will show what's in your inventory.%R[ansi(h,drop <target>)] - this will remove an object from your inventory and place it in the room.%R[ansi(h,get <target>)] - this will retrieve an object, if you have permission.%R[ansi(h,@lock/Basic <target>=me)] - this will prevent other players from picking up and walking off with your object.%R[ansi(h,\(\IMPORTANT: see +help +key for more advanced tricks!))]%R%R[ansi(h,@desc <target>=<text here>)] - the same as @describe'ing yourself. This will be what others see if they look at or are inside the object. You may also use @idesc for 'internal description,' in which case @desc will be seen by those looking at the object, rather than being both the external description and a room description.%R%R[ansi(h,&IC <target>=1)] - this will enable +pot to work in an object.%R%RYou may only have a few objects in existence at once. If you have lost track of them:%R[ansi(h,@search)] - this will show all objects you own and their DBREFs.%R[ansi(h,@tel <target>=me)] - this will retrieve an object.%R%RUsing them:%R[ansi(h,enter <target>)] - this will enter an object as though it were a room.%R[ansi(h,leave <target>)] - This will leave the object.