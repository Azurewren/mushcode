@@ DEPENDENCIES - CORE

th u(NEWCOBJ,Radio Management System <RADIO>,radio,,,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)

&CMD`+RADIO`PENNMUSH [u(cobj,radio)]=$^(?s)(?\:\+)?(?\:radio|freq)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+RADIO`MAIN
@set [u(cobj,radio)]/CMD`+RADIO`PENNMUSH=regexp
&CMD`+RADIO`RHOSTMUSH [u(cobj,radio)]=$^(?s)(?\:\+)?(?\:radio|freq)(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+RADIO`MAIN
@set [u(cobj,radio)]/CMD`+RADIO`RHOSTMUSH=regexp
&CMD`+RADIO`MAIN [u(cobj,radio)]=@attach %!/INC`GETSWITCH=%1;@include %!/INC`[u(strfirstof,%q<switch>,MAIN)]=%2,%3
@set [u(cobj,radio)]/CMD`+RADIO`[switch(v(game),PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&CMD`+RADIOSHORT`PENNMUSH [u(cobj,radio)]=$^(?s)\.(\w+)(?\:/(\S+)?)?(?\: +(.*))?$:@attach %!/CMD`+RADIOSHORT`MAIN
@set [u(cobj,radio)]/CMD`+RADIOSHORT`PENNMUSH=regexp
&CMD`+RADIOSHORT`RHOSTMUSH [u(cobj,radio)]=$^(?s)\.(\\w+)(?\:/(\\S+)?)?(?\: +(.*))?$:@attach %!/CMD`+RADIOSHORT`MAIN
@set [u(cobj,radio)]/CMD`+RADIOSHORT`RHOSTMUSH=regexp
&CMD`+RADIOSHORT`MAIN [u(cobj,radio)]=@attach %!/INC`GETSWITCH=%2;@include %!/INC`[u(strfirstof,%q<switch>,MAIN)]=%1,%3
@set [u(cobj,radio)]/CMD`+RADIOSHORT`[switch(v(game),PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&SYSTEM`NAME [u(cobj,radio)]=RADIO

&SWITCHES`PLAYER [u(cobj,radio)]=INIT|RENAME|TOGGLE|FREQ|KEY|WIPE|RECALL|CODENAME|NOSPOOF|TITLE|NSRECALL|WHO|COLOR|GAG|UNGAG
&SWITCHES`ADMIN [u(cobj,radio)]=LISTFREQ|MONITOR|EMIT

&INC`INIT [u(cobj,radio)]=@attach %!/INC`SLOTNAMECHECK;@stop hasattr(%#/D`RADIO`%0)=@attach %!/INC`MSG=ERROR: That slot already exists!;@attach %!/INC`FREQCHECK=%1;&D`RADIO`%0 %#=%1;&D`RADIO`%0`NAME %#=%0;@attach %!/INC`MSG=Slot '%0' initialized and tuned to Frequency '%1'.;@attach %!/INC`CHECKSLOT;@attach %!/INC`ENABLE=u(objid,%#),%1

&INC`FREQCHECK [u(cobj,radio)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: No frequency entered for the new Radio slot!;@check strlen(%0)=@attach %!/INC`MSG=ERROR: Frequency Field empty.;@check regmatchi(%0,\[0-9\]+\\.\[0-9\]+)=@attach %!/INC`MSG=ERROR: Frequencies must be in the form of (number).(number), example 105.32;@check valid(name,FREQ: %0)=@attach %!/INC`MSG=ERROR: '%0' is not a valid frequency name.

&INC`MAIN [u(cobj,radio)]=@select/inline strlen(%0)=0,{@attach %!/INC`LIST},{@attach u(jail)/INC`JAILCHECK;@attach %!/INC`CHECKSLOT;@check strlen(get(%#/%q<slot>))=@attach %!/INC`MSG=ERROR: That Slot has no Frequency set!;@check match(get(%q<log>/MEMBERS),u(objid,%#))=@attach %!/INC`MSG=That Slot is turned off.;@stop match(u(getstat,%#,D`RADIO,GAG),%q<log>)=@attach %!/INC`MSG=ERROR: Slot is gagged.;@attach %!/INC`BROADCAST}

&INC`LIST [u(cobj,radio)]=@pemit %#=u(header,Your Radio Config);@pemit %#=ansi(u(color,%#,RADIO,COLUMN_NAMES),align(14 8 19 18 11 3,Name,Freq,Codename,Title,Encrypt,Sta));@pemit %#=u(separator);@dolist/inline u(sortattr,u(lattr,%#/D`RADIO`*))={th u(setq,log,u(FUN`FINDFREQ,get(%#/##)));@pemit %#=align(14 8 19 18 11 3,default(%#/%i0`NAME,last(##,`)),get(%#/##),get(%#/##`CODENAME),get(%#/##`TITLE),default(%#/##`KEY,--None--),if(match(get(%q<log>/MEMBERS),u(objid,%#)),On,Off))};@pemit %#=u(header)

&INC`SLOTNAMECHECK [u(cobj,radio)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: No Slot entered to Initialize.;@check regmatchi(%0,^\\w+$)=@attach %!/INC`MSG=ERROR: Slots may only use letters\, numbers\, and underscores. (case insensitive.);@check valid(attrname,D`RADIO`%0)=@attach %!/INC`MSG=ERROR: Slot name is too long.

&INC`CHECKSLOT [u(cobj,radio)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: No Slot entered to use.;@attach %!/INC`PARTIAL=%0,iter(lattr(%#/D`RADIO`*),last(%i0,`),%b,|),|,found,Radio Slot;@check hasattr(%#/D`RADIO`%q<found>)=@attach %!/INC`MSG=ERROR: No slot by that name.;th u(setq,slot,D`RADIO`%q<found>);th u(setq,slotname,default(%#/D`RADIO`%q<found>`NAME,ucstr(%q<found>)));th u(setq,freq,get(%#/%q<slot>));@select/inline isdbref(u(setr,log,u(FUN`FINDFREQ,%q<freq>)))=0,{@tel [u(setr,freq,create(FREQ: %q<freq>))]=[u(cobj,radio)]}

&FUN`FINDFREQ [u(cobj,radio)]=u(FIND_IN,u(cobj,radio),FREQ: %0)

&INC`FREQ [u(cobj,radio)]=@attach %!/INC`CHECKSLOT;@attach %!/INC`FREQCHECK=%1;@attach %!/INC`DISABLE=u(objid,%#),%q<freq>;&D`RADIO`%0 %#=%1;@attach %!/INC`ENABLE=u(objid,%#),%1;@attach %!/INC`MSG=You tune Radio Slot [ucstr(%0)] to %1.

&INC`COLOR [u(cobj,radio)]=@attach %!/INC`CHECKSLOT;@select/inline t(strlen(%1))=1,{@attach %!/INC`VALID`COLOR=%1;@attach %!/INC`MSG=You color Radio Slot [ucstr(%0)] to [ansi(%q<color>,ucstr(%0))];&%q<slot>`COLOR %#=%q<color>},0,{@attach %!/INC`MSG=You clear Radio Slot [ucstr(%0)]'s Color setting.;&%q<slot>`COLOR %#}

&INC`RENAME [u(cobj,radio)]=@attach %!/INC`CHECKSLOT;@attach %!/INC`SLOTNAMECHECK=%1;@select/inline strmatch(%0,%1)=0,{@attach %!/INC`MVTREE=%#,%q<slot>,%#,D`RADIO`%1};&D`RADIO`%1`NAME %#=%1;@attach %!/INC`MSG=You rename Slot '%0' to '%1';@mvattr %#/RADIO_%0=%#/RADIO_%1

&INC`CODENAME [u(cobj,radio)]=@attach %!/INC`CHECKSLOT;@select/inline strlen(%1)=0,{@attach %!/INC`MSG=Radio Slot %q<slotname>'s Codename has been Cleared!;&%q<slot>`CODENAME %#},{th u(setq,codename,trim(%1));@stop u(charsearch,%q<codename>,%r %t)=@attach %!/INC`MSG=ERROR: Codenames may not contain linebreaks or tabs.;@stop gt(strlen(%q<codename>),u(PLAYER_NAME_LEN))=@attach %!/INC`MSG=ERROR: Codename is beyond the allowed [u(PLAYER_NAME_LEN)] characters.;@stop words(setdiff(switch(v(game),PennMUSH,lsearch(all,eplayer,\[strlen(wildgrepi(##,D`RADIO`*`CODENAME,%q<codename>))\]),RhostMUSH,EPLAYER=\[strlen(u(wildgrepi,##,D`RADIO`*`CODENAME,%q<codename>))\]),%#))=@attach %!/INC`MSG=ERROR: Another player is already using that Codename.;@stop pmatch(%q<codename>)=@attach %!/INC`MSG=ERROR: Codenames may not match any player's name or alias.;@attach %!/INC`MSG=Your Codename on Radio Slot %q<slotname> is now: %q<codename>;&%q<slot>`CODENAME %#=%q<codename>}

&INC`TITLE [u(cobj,radio)]=@attach %!/INC`CHECKSLOT;@select/inline strlen(%1)=0,{@attach %!/INC`MSG=Radio Slot %q<slotname>'s Title has been Cleared!;&@attach %!/WIPE=%#,%q<slot>`TITLE},{@stop u(charsearch,%1,%r %t)=@attach %!/INC`MSG=ERROR: Titles may not contain linebreaks or tabs.;@stop gt(strlen(%1),u(PLAYER_NAME_LEN))=@attach %!/INC`MSG=That radio title is too long!;@attach %!/INC`MSG=Your Title on Radio Slot %q<slotname> is now: %1;&%q<slot>`TITLE %#=%1}

&INC`KEY [u(cobj,radio)]=@attach %!/INC`CHECKSLOT;@select/inline strlen(%1)=0,{@attach %!/INC`MSG=Radio Slot %q<slotname>'s Encryption Key has been Cleared!;&%q<slot>`KEY %#},{@attach %!/INC`MSG=Radio Slot %q<slotname>'s Encryption Key is now: %1;&%q<slot>`KEY %#=%1}

&INC`TOGGLE [u(cobj,radio)]=@attach %!/INC`CHECKSLOT;@select/inline t(match(get(%q<log>/MEMBERS),u(objid,%#)))=1,{@attach %!/INC`MSG=You switch off %q<slotname>.;@attach %!/INC`DISABLE=u(objid,%#),%q<freq>},0,{@attach %!/INC`MSG=You switch on %q<slotname>.;@attach %!/INC`ENABLE=u(objid,%#),%q<freq>}

&INC`GAG [u(cobj,radio)]=@attach %!/INC`CHECKSLOT;@stop match(u(getstat,%#,D`RADIO,GAG),%q<log>)=@attach %!/INC`MSG=Already gagging %q<slotname>.;@attach %!/INC`MSG=Frequency gagged.;@attach %!/INC`DISABLE`GAG=u(objid,%#),%q<freq>

&INC`UNGAG [u(cobj,radio)]=@attach %!/INC`CHECKSLOT;@check match(u(getstat,%#,D`RADIO,GAG),%q<log>)=@attach %!/INC`MSG=Not gagging %q<slotname>.;@attach %!/INC`MSG=Frequency ungagged.;@attach %!/INC`ENABLE`GAG=u(objid,%#),%q<freq>

&INC`MONITOR [u(cobj,radio)]=@select/inline t(u(getstat,%#,D`RADIO,Monitor))=1,{@attach %!/INC`MSG=You switch off Monitoring.;th u(setstat,%#,D`RADIO,Monitor,0)},0,{@attach %!/INC`MSG=You switch on Monitoring.;th u(setstat,%#,D`RADIO,Monitor,1)}

&INC`NOSPOOF [u(cobj,radio)]=@select/inline t(u(getstat,%#,D`RADIO,Nospoof))=1,{@attach %!/INC`MSG=You switch off Nospoof mode.;th u(setstat,%#,D`RADIO,Nospoof,0)},0,{@attach %!/INC`MSG=You switch on Nospoof.;th u(setstat,%#,D`RADIO,Nospoof,1)}

&INC`WIPE [u(cobj,radio)]=@attach %!/INC`CHECKSLOT;@attach %!/INC`VERIFY={WARNING: This will clean all data from Radio Slot %q<slotname>. This action cannot be undone. Type the same command again within ten seconds to verify.},RADIO WIPE %q<slot>;@attach %!/INC`DISABLE=u(objid,%#),%q<freq>;@attach %!/WIPE=%#,%q<slot>;@attach %!/WIPE=%#,RADIO_[last(%q<slot>,`)];@attach %!/INC`MSG=Radio Slot %q<slotname> wiped!

&INC`EMIT [u(cobj,radio)]=@select/inline regmatchi(%0,^\\d+\.\\d+$)=0,{@attach %!/INC`CHECKSLOT},1,{th u(setq,freq,%0)};@attach %!/INC`BROADCAST=%0,%1,1

&INC`ENABLE [u(cobj,radio)]=@select/inline isdbref(u(setr,log,u(FUN`FINDFREQ,%1)))=0,{@tel [u(setr,log,create(FREQ: %1))]=[u(cobj,radio)]};&MEMBERS %q<log>=setunion(get(%q<log>/MEMBERS),%0)
&INC`DISABLE [u(cobj,radio)]=@select/inline isdbref(u(setr,log,u(FUN`FINDFREQ,%1)))=0,{@tel [u(setr,log,create(FREQ: %1))]=[u(cobj,radio)]};&MEMBERS %q<log>=setdiff(get(%q<log>/MEMBERS),%0)

&INC`ENABLE`GAG [u(cobj,radio)]=@select/inline isdbref(u(setr,log,u(FUN`FINDFREQ,%1)))=0,{@tel [u(setr,log,create(FREQ: %1))]=[u(cobj,radio)]};&GAGGED %q<log>=setdiff(get(%q<log>/GAGGED),%0);th u(setstat,%0,D`RADIO,GAG,setdiff(u(getstat,%0,D`RADIO,Gag),%q<log>))

&INC`DISABLE`GAG [u(cobj,radio)]=@select/inline isdbref(u(setr,log,u(FUN`FINDFREQ,%1)))=0,{@tel [u(setr,log,create(FREQ: %1))]=[u(cobj,radio)]};&GAGGED %q<log>=setunion(get(%q<log>/GAGGED),%0);th u(setstat,%0,D`RADIO,GAG,setunion(u(getstat,%0,D`RADIO,Gag),%q<log>))

&INC`BROADCAST [u(cobj,radio)]=@check strlen(%1)=@attach %!/INC`MSG=ERROR: Nothing entered to say!;@stop strmatch(left(%1,1),|)=@attach %!/INC`MSG=ERROR: The Emit feature is disabled.;@check strlen(%q<freq>)=@attach %!/INC`MSG=ERROR: Frequency invalid.;th u(setq,targets,setdiff(setinter(u(setr,who,u(lwhoid)),setdiff(get(if(%2,u(setr,log,u(FUN`FINDFREQ,%q<freq>)),%q<log>)/MEMBERS),get(%q<log>/GAGGED))),u(setr,monitor,u(filter,MONITOR,%q<who>))));@select/inline v(game)=PennMUSH,{@message %q<targets>=<unset>,%!/FUN`FORMATBROADCAST,%#,##,%q<freq>,%1,get(%#/%q<slot>`KEY),get(%#/%q<slot>`CODENAME),get(%#/%q<slot>`TITLE),%2;@message setunion(%q<monitor>,if(%2,%#))=<unset>,%!/FUN`FORMATMONITOR,%#,##,%q<freq>,%1,get(%#/%q<slot>`KEY),get(%#/%q<slot>`CODENAME),get(%#/%q<slot>`TITLE),%2},RhostMUSH,{@pemit/list %q<targets>=udefault(%!/FUN`FORMATBROADCAST,<unset>,%#,##,%q<freq>,%1,get(%#/%q<slot>`KEY),get(%#/%q<slot>`CODENAME),get(%#/%q<slot>`TITLE),%2);@pemit/list setunion(%q<monitor>,if(%2,%#))=udefault(%!/FUN`FORMATBROADCAST,<unset>,%#,##,%q<freq>,%1,get(%#/%q<slot>`KEY),get(%#/%q<slot>`CODENAME),get(%#/%q<slot>`TITLE),%2)};@attach %!/INC`LOGRADIO=%#,%q<freq>,%1,get(%#/%q<slot>`KEY),get(%#/%q<slot>`CODENAME),get(%#/%q<slot>`TITLE),%2;@select/inline cand(%2,not(match(%q<monitor>,u(objid,%#))))=1,{@attach %!/INC`MSG=WARNING: Your Emit was sent to %q<freq>, but you must either set a slot to that frequency or toggle [pueblize(+radio/monitor,+radio/monitor)] to hear replies!}
@@ %0 - Enactor, %1 - recipient, %2 - frequency, %3 - message, %4 - key, %5 - codename, %6 - title, %7 -  emit mode

&FIL`MONITOR [u(cobj,radio)]=u(getstat,%0,D`RADIO,Monitor)

&INC`WHO [u(cobj,radio)]=@attach %!/INC`CHECKSLOT;@check words(u(setr,listen,u(sortname,setdiff(setinter(u(setr,who,u(lwhoid)),get(%q<log>/MEMBERS)),u(setr,monitor,u(filter,MONITOR,%q<who>)),,))))=@attach %!/INC`MSG=Nobody is listening to %q<freq>.;@attach %!/INC`MSG=Listeners for %q<slotname> are: [u(itemize,iter(%q<listen>,u(moniker,%i0),,|),|,and,\,)]

&FUN`FORMATBROADCAST [u(cobj,radio)]=u(setq,recpslot,first(grepi(%1,D`RADIO`*,%2)))[u(setq,default,ansi(hr,-<)[ansi(hw,RADIO:)] [ansi(u(strfirstof,get(%1/%q<recpslot>`COLOR),hw),u(%!/FUN`FREQNAME,%1,%2))][ansi(hr,>-)]%B[u(setr,fullmsg,[if(%7,colornames(%3,%1,lwho(%1),RADIO),if(strlen(%6),trim(%6)%B)[u(speech,%0,u(setr,mesg,decrypt(encrypt(%3,%4),get(%1/[first(grepi(%1,D`RADIO`*,%2))]`KEY))),%1,if(cand(strlen(%5),cor(u(getstat,%1,D`RADIO,NoSpoof),%8)),\([u(moniker,name(%0))]\) %5),RADIO,lwho())])])])][u(strfirstof,ulocal(%1/RADIO_[last(%q<recpslot>,`)],switch(1,t(%7),|,strmatch(%3,:*),:,strmatch(%3,;*),;,"),u(%!/FUN`FREQNAME,%1,%2),switch(1,strmatch(%q<mesg>,:*),after(%q<mesg>,:),strmatch(%q<mesg>,;*),after(%q<mesg>,;),%q<mesg>),if(%7,Someone,u(moniker,%0)),%6,%q<default>,%q<fullmsg>,%5,%2),%q<default>)]

&FUN`FORMATMONITOR [u(cobj,radio)]=ansi(hr,-<)[ansi(hw,RADIO MONITOR: %2)][ansi(hr,>-)]%B[if(%7,ansi(h,name(%0)) EMIT: [u(colornames,%1,%3,RADIO,lwho(%!),%0)],if(strlen(%6),trim(%6)%B)[u(speech,%0,%3,%1,if(strlen(%5),\([u(moniker,%0)]\) %5,u(moniker,%0)),RADIO,lwho())])]

&INC`LOGRADIO [u(cobj,radio)]=@select/inline isdbref(u(setr,log,u(FUN`FINDFREQ,%1)))=0,{@tel [u(setr,log,create(FREQ: %1))]=[u(cobj,radio)]};&LASTMSG %q<log>=secs();th u(setq,logattr,u(setr,logattr,R`[u(nextslot,%q<log>,R)]));th u(attrib_set,%q<log>,%q<logattr>,%2);th u(attrib_set,%q<log>,%q<logattr>`ON,secs());th u(attrib_set,%q<log>,%q<logattr>`KEY,%3);th u(attrib_set,%q<log>,%q<logattr>`CODENAME,%4);th u(attrib_set,%q<log>,%q<logattr>`AS,name(%0));th u(attrib_set,%q<log>,%q<logattr>`BY,u(objid,%0));th u(attrib_set,%q<log>,%q<logattr>`EMIT,%6);th u(attrib_set,%q<log>,%q<logattr>`TITLE,%5);@select/inline gt(u(setr,count,u(nattr,%q<log>/R`*)),100)=1,{@dolist/inline elements(u(sortattr,u(lattr,%q<log>/R`*)),lnum(1,sub(%q<count>,100)))=@attach %!/WIPE=%q<log>,##}

&INC`LISTFREQ [u(cobj,radio)]=@check words(u(setr,freqs,u(sortlast,u(filter,LASTRADIO,lthings(u(cobj,radio))))))=@attach %!/INC`MSG=No Freqs are in use.;@pemit %#=u(header,Active Radio Frequencies);@pemit %#=ansi(u(color,%#,RADIO,COLUMN_NAMES),align(10 40 20,Freq,Players,Keys))%R[u(separator)];@dolist %q<freqs>={@pemit %#=align(10 40 20,u(setr,freq,trim(after(name(u(setr,db,##)),:))),u(itemize,iter(u(sortname,setunion(iter(u(lattr,%q<db>/R`*),get(%q<db>/%i0`BY)),get(%q<db>/%i0`MEMBERS),,)),u(moniker,%i0)\([if(match(get(%q<db>/MEMBERS),u(objid,%i0)),On,Off)]\),%b,|),|,and,\,),u(itemize,setunion(iter(u(wildgrepi,%q<db>,R`*`KEY,?*),get(%q<db>/%i0),%B,|),,|,|),|,and,\,));@select/inline #@=1,{@pemit %#=u(header)}}

&FIL`LASTRADIO [u(cobj,radio)]=lt(sub(secs(),get(%0/LASTMSG)),u(stringsecs,20d))

&SORTLAST [u(cobj,mco)]=u(SORTLAST`[v(game)],%0,if(strlen(%1),%1,%B),if(strlen(%2),%2,%B))
&SORTLAST`PENNMUSH [u(cobj,mco)]=sort(%0,idle,%1,%2)
&SORTLAST`RHOSTMUSH [u(cobj,mco)]=sortby(#lambda/[lit([ncomp(get(%0/LASTMSG),get(%1/LASTMSG))])],%0,%1,%2)

&FUN`FREQNAME [u(cobj,radio)]=u(strfirstof,get(%0/[first(u(wildgrepi,%0,D`RADIO`*,%1))]`NAME),%1)

&INC`NSRECALL [u(cobj,radio)]=@attach %!/INC`RECALL=%0,%1,1

&INC`RECALL [u(cobj,radio)]=@select/inline regmatchi(%0,^\\d+\\.\\d+$)=1,{th u(setq,freq,%0)},0,{@attach %!/INC`CHECKSLOT;@check strlen(%q<freq>)=@attach %!/INC`MSG=ERROR: That Radio Slot has no Frequency set.};@check u(setr,log,u(FUN`FINDFREQ,%q<freq>))=@attach %!/INC`MSG=Nothing has been Logged.;@check words(u(setr,list,u(sortattr,u(lattr,%q<log>/R`*))))=@attach %!/INC`MSG=Nothing to Recall.;@select/inline %1=0,{th u(setq,max,ALL)},{@select/inline strlen(%1)=0,{th u(setq,max,0)},{@check cand(gt(%1,-1),isint(u(setr,max,%1)))=@attach %!/INC`MSG=ERROR: Line Recall must be an integer 0 or greater.}};@pemit %#=u(header,Frequency: %q<slotname> - %q<freq>);@dolist u(setr,showlist,switch(%q<max>,ALL,%q<list>,0,revwords(elements(revwords(%q<list>),lnum(1,15))),revwords(elements(revwords(%q<list>),lnum(1,%q<max>)))))={@pemit %#=(On [u(fancytime,get(%q<log>/%i0`ON),%#)])%B[u(FUN`FORMAT[if(u(getstat,%#,D`RADIO,Monitor),MONITOR,BROADCAST)],get(%q<log>/%i0`BY),%#,%q<freq>,get(%q<log>/%i0),get(%q<log>/%i0`KEY),get(%q<log>/%i0`CODENAME),get(%q<log>/%i0`TITLE),get(%q<log>/%i0`EMIT),%2)];@select/inline #@=words(%q<showlist>),{@pemit %#=u(header)}}

@@ %0 - Enactor, %1 - recipient, %2 - frequency, %3 - message, %4 - key, %5 - alias

&STARTUP [u(cobj,radio)]=@trigger %!/LOOP`CLEANRADIO

&PLAYER`DISCONNECT`UNGAGRADIO [u(cobj,radio)]=@stop %1;@dolist/inline u(getstat,%0,D`RADIO,GAG)={&GAGGED [u(setr,log,u(FUN`FINDFREQ,%i0))]=setdiff(get(%q<log>/GAGGED),%0)};th u(delstat,%0,D`RADIO,GAG)

&LOOP`CLEANRADIO [u(cobj,radio)]=@dolist lthings(u(cobj,radio))={@wait #@=@trigger %!/LOOP`CLEANLOGS`DB=##};@wait u(game_config,radio,interval)=@trigger me/TRG`CLEANLOGS
&LOOP`CLEANLOGS`DB [u(cobj,radio)]=@dolist/inline u(filter,OLDLOGS,u(lattr,%0/R`*),%b,%b,%0,u(game_Config,radio,timeout))={@attach %!/WIPE=%0,##}
&FIL`OLDLOGS [u(cobj,radio)]=gt(sub(secs(),get(%1/%0`ON)),%2)

&DEFAULT`RADIO [u(cobj,config)]=@@ Empty attrib for Rhost.
&DEFAULT`RADIO`BUFFER [u(cobj,config)]=100
&DESC`RADIO`BUFFER [u(cobj,config)]=Size of channel buffer in lines?
&TYPE`RADIO`BUFFER [u(cobj,config)]=POSINT

&DEFAULT`RADIO`TIMEOUT [u(cobj,config)]=259200
&DESC`RADIO`TIMEOUT [u(cobj,config)]=How long messages are stored?
&TYPE`RADIO`TIMEOUT [u(cobj,config)]=DURATION

&DEFAULT`RADIO`INTERVAL [u(cobj,config)]=259200
&DESC`RADIO`INTERVAL [u(cobj,config)]=Interval between timeout checks?
&TYPE`RADIO`INTERVAL [u(cobj,config)]=DURATION

@@ COMMUNICATIONS - +RADIO
+help/add +radio=[u(cobj,radio)]/HLP`+RADIO
+help/category +radio=Communications
&HLP`+RADIO [u(cobj,radio)]=The Radio System is a customizable series of soft-channels meant to represent in-character radio frequencies, IC chat rooms, and other venues of instant communication.%R[ansi(hc,Aliases:)] +freq, freq, radio%R%R%R[ansi(hc,Radio Concepts)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,slots)] - A radio slot is a collection of settings used to broadcast and receive messages. Slots are identified by unique words \(only alphanumeric characters and hyphens allowed\).%R[ansi(h,encryption keys)] - An encryption key is a password used to scramble \(and unscramble\) radio messages. They are case-sensitive and must match on both ends if set at all!%R[ansi(h,codename)] - A codename is an alternate name others will see you as for that radio slot. Codenames must be unique to a player and can't match player names.%R[ansi(h,frequency)] - a frequency. Must be <number>.<number> format such as 99.5 or 101.1)]%R%R[ansi(hc,Basic Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+radio)] - Display your configured channels.%R[ansi(h,+radio/init <slot>=<frequency>)] - Creates a new Radio Slot and sets it to <frequency>.%R[ansi(h,+radio/freq <slot>=<frequency>)] - set a slot to a frequency.%R[ansi(h,+radio/key <slot>=<encryption key>)] - Sets an encryption key for a radio slot.%R[ansi(h,+radio/rename <slot>=<new name>)] - Assigns a new name to a slot.%R[ansi(h,+radio/codename <slot>=<new codename>)] - Sets your Codename on a Slot. Set to nothing to clear it.%R[ansi(h,+radio/toggle <slot>)] - Turns a slot on or off. Disabled slots can't send or receive messages.%R[ansi(h,+radio/wipe <slot>)] - Erases all of a slot's settings.%R[ansi(h,+radio/title <slot>=<title>)] - Set a title to appear before your name. Keep it short and sweet!%R[ansi(h,+radio/color <slot>=<colorcode>)] - Set a color for a radio frequency. Enter nothing to clear color settings.%R[ansi(h,+radio/nospoof)] - Toggle whether real names are shown next to codenames if a codename's in use.%R[ansi(h,+radio/who <slot>)] - See who's listening to a frequency.%R[ansi(h,.<slot>/<switch> <entry>)] - Equivalent to +radio/<switch> <slot>=<entry> - useful for .<slot>/toggle, etc)]%R%R[ansi(hc,Sending Messages)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+radio <slot>=<speech>)] - Send a message over <slot>'s Frequency.%R[ansi(h,.<slot> <speech>)] - Shortcut for sending messages. Inspired by hardcoded channels. Example: [ansi(h,.broadband hello!)])]%R%R[ansi(hc,Misc)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+radio/recall <slot or freq>=<#>)] - recalls <#> of lines from <slot>'s frequency. Encryption keys needed. If <#> is blank\, defaults to 10 lines. If 0\, shows ALL recorded messages.%R[ansi(h,+radio/nsrecall <slot or freq>=<#>)] - Like /recall\, but as though nospoof were turned on.)]

+help/add +radio/Formatter=[ansi(hc,Formatters)]%R%TJust like @chatformat, @pageformat, and similar hardcoded commands, +radio supports the ability to set custom formatters to change how you receive the message. This is an advanced topic and should not be used unless you're familiar with setting and clearing attributes.%R%TEach Radio slot will check your character for a corresponding RADIO_<slotname> attribute. If you created a slot called Police with +radio/init Police=11.17, you'd need to set an attribute called RADIO_POLICE. example: &RADIO_POLICE me=\%5.%R%TThis attribute is called via a ulocal(). It is passed the following arguments for substitution purposes, just like @chatformat:%R\%0 - The type of the message. " for say, : for pose, ; for semipose, | for an emit.%R\%1 - The frequency name.%R\%2 - The message contents.%R\%3 - The name of the speaker. Will be 'Someone' if it's an Emit.%R\%4 - The speaker's title.%R\%5 - The default message as if no formatter was set.%R\%6 - like \%5 but minus the default header.%R\%7 - The speaker's codename.%R\%8 - The frequency number.%R%TThis attribute WILL be moved if you rename a slot.%R%RTO DELETE A FORMATTER, SIMPLY CLEAR THE ATTRIBUTE. Example:%R%T&RADIO_POLICE me%R%T@wipe me/RADIO_POLICE%R(either will work.)%R%RDeleting the +radio slot will also delete the associated formatter.

+shelp/add +radio=[u(cobj,radio)]/SHLP`+RADIO
+shelp/category +radio=Communications
&SHLP`+RADIO [u(cobj,radio)]=[ansi(hc,Staff Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+radio/listfreq)] - Analyzes logged messages to show all frequencies in use and who is using them. Also shows what encryption keys are in use for those frequencies. It cannot determine what Key is the 'legit' one though.%R[ansi(h,+radio/monitor)] - toggles Monitor mode. While in Monitor mode\, you will receive ALL messages from ALL frequencies\, automatically decrypted.%R[ansi(h,+radio/emit <slot or freq>=<message>)] - Send a sourceless message over a channel. All players will understand it regardless of encryption keys.%R%RMonitor mode will apply when using +radio/recall)]

&MIGRATE`RADIO [u(cobj,migrate)]=@check isdbref(u(setr,radb,u(%q<index>/radb)))=@attach %!/INC`MSG=ERROR: Version 1 'Radio Message Database' could not be located. Cannot continue.;@dolist/inline/nobreak u(lattr,%q<radb>/*)={th setq(freq,get(%q<radb>/%i0));@check regmatchi(%q<freq>,^\\d+\.\\d+$);@tel [u(setr,log,create(FREQ: %q<freq>))]=u(cobj,radio);@cpattr %q<radb>/%i0`MEMBERS=%q<log>/MEMBERS;@cpattr %q<radb>/%i0`GAGGED=%q<log>/GAGGED;@cpattr %q<radb>/%i0`LAST=%q<log>/LASTMSG}

&CONFLICT`RADIO [u(cobj,migrate)]=@set u(coi,rdso)=NO_COMMAND HALT;@tel u(coi,rdso)=u(cobj,oldbox)