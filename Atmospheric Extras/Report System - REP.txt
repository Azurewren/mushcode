@@ DEPENDENCIES - CORE

@switch/inline isdbref(u(rep))=0,{@tel create(Report System <REP>)=config(master_room)}
&rep u(coi)=locate(config(master_room),Report System <REP>,TXxi)
@parent u(rep)=u(coi)
@set u(rep)=WIZARD !NO_COMMAND

@switch/inline isdbref(u(repdb))=0,{@tel create(Report System Database <REPDB>)=u(rep)}
&repdb u(coi)=locate(u(rep),Report System Database <REPDB>,TXxi)
@parent u(repdb)=u(coi)
@set u(repdb)=WIZARD !NO_COMMAND
@power u(repdb)=many_attribs

&CMD`+REPORT u(rep)=$^(?s)(?\:\+)?report(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@include u(ccs)/INC`PARTIAL=%1,setunion(get(u(rep)/VAR`PLAYFLAGS),if(isadmin(%#),get(u(rep)/VAR`ADMINFLAGS)),|,|),|,REPORT,switch,switch;@include u(rep)/INC`[strfirstof(%q<switch>,MAIN)]=trim(%2),trim(%3),trim(before(%2,/)),trim(after(%2,/)),trim(before(%3,/)),trim(after(%3,/))
@set u(rep)/CMD`+REPORT=regexp

&VAR`PLAYFLAGS u(rep)=
&VAR`ADMINFLAGS u(rep)=ADDSECTION|DELSECTION|RENSECTION|ORDSECTION|ADDPARAMETER|DELPARAMETER|RENPARAMETER|ORDPARAMETER|SET

&RFN`HEADER u(rep)=header(%0,,REPORT`BORDER,REPORT`BORDERDOT,REPORT`BORDERTEXT)
&RFN`SUBHEADER u(rep)=subheader(%0,,REPORT`BORDER,REPORT`BORDERDOT,REPORT`BORDERTEXT)
&RFN`SEPARATOR u(rep)=separator(%0,,REPORT`BORDER,REPORT`BORDERDOT,REPORT`BORDERTEXT)
&RFN`MSGHEAD u(rep)=msghead(v(VAR`MSGHEAD))
&VAR`MSGHEAD u(rep)=REPORT

th attrib_set(u(cco-db)/VAR`CATEGORIES,setunion(get(u(cco-db)/VAR`CATEGORIES),REPORT,|,|))
&VAR`CATEGORIES`REPORT u(cco-db)=BORDER|BORDERDOT|BORDERTEXT

&INC`ADDSECTION u(rep)=@assert strlen(%0)=@nspemit %#=u(RFN`MSGHEAD) ERROR: No Section name entered.;@break words(wildgrepi(u(repdb),*,%0))=@nspemit %#=u(RFN`MSGHEAD) ERROR: That name is already in use.;&[nextslot(u(repdb))] u(repdb)=%0;@nscemit/noisy u(cmo`staffrep)={[ansi(h,\[%n\])] New Report Section added: %0};@nspemit %#=u(RFN`MSGHEAD) Added new Report Section: %0

&INC`DELSECTION u(rep)=@include u(rep)/INC`FINDSECTION=%0;@include u(ccs)/INC`VERIFY={ansi(hr,WARNING:) This will delete Report Section %q<section>: [get(u(repdb)/%q<section>)]. All Parameters and change history will be lost. Are you sure? Enter the same command again within 10 seconds to verify.},DELETE REPORT SECTION %q<section>,v(VAR`MSGHEAD);@nscemit/noisy u(cmo`staffrep)={[ansi(h,\[%n\])] Report Section DELETED: %q<section> - [get(u(repdb)/%q<section>)]};@nspemit %#=u(RFN`MSGHEAD) Deleted!;@wipe u(repdb)/%q<section>

&INC`RENSECTION u(rep)=@include u(rep)/INC`FINDSECTION=%0;@assert strlen(%1)=@nspemit %#=u(RFN`MSGHEAD) ERROR: No new Section name entered.;@break words(wildgrepi(u(repdb),*,%1))=@nspemit %#=u(RFN`MSGHEAD) ERROR: That name is already in use.;@nscemit/noisy u(cmo`staffrep)={[ansi(h,\[%n\])] Report Section RENAMED: %q<section> - [get(u(repdb)/%q<section>)] changed to %1};@nspemit %#=u(RFN`MSGHEAD) Renamed!;&%q<section> u(repdb)=%1

&INC`ORDSECTION u(rep)=@include u(rep)/INC`FINDSECTION=%0;@assert strlen(%1)=@nspemit %#=u(RFN`MSGHEAD) ERROR: No Section order value entered.;@assert valnum(%1)=@nspemit %#=u(RFn`MSGHEAD) Section order must be a positive integer.;@nscemit/noisy u(cmo`staffrep)={[ansi(h,\[%n\])] Report Section RE-ORDERED: %q<section> - [get(u(repdb)/%q<section>)] ORDER is now: %1};@nspemit %#=u(RFN`MSGHEAD) Re-ordered!;&%q<section>`ORDER u(repdb)=%1

&INC`FINDSECTION u(rep)=@assert strlen(%0)=@nspemit %#=u(RFN`MSGHEAD) ERROR: No Section targeted.;@assert strlen(setr(section,u(FUN`FINDSECTION,%0)))=@nspemit %#=u(RFN`MSGHEAD) ERROR: Section '%0' not found.;th setq(secname,get(u(repdb)/%q<section>))

&FUN`FINDSECTION u(rep)=strfirstof(first(wildgrepi(u(repdb),*,%0)),first(wildgrepi(u(repdb),*,%0*)))

&INC`ADDPARAMETER u(rep)=@include u(rep)/INC`FINDSECTION=%2;@assert strlen(%3)=@nspemit %#=u(RFN`MSGHEAD) ERROR: No parameter name entered.;@break words(wildgrepi(u(repdb),%q<section>`PARA`*,%0))=@nspemit %#=u(RFN`MSGHEAD) ERROR: That name is already in use.;@assert strlen(%4)=@nspemit %#=u(RFn`MSGHEAD) ERROR: No initial value entered!;@assert strlen(%5)=@nspemit %#=u(RFN`MSGHEAD) ERROR: no initial reason entered!;&[setr(attr,%q<section>`PARA`[setr(parameter,nextslot(u(repdb),%q<section>`PARA))])] u(repdb)=%3;@include u(rep)/INC`NEWENTRY=%q<section>,%q<parameter>,%4,%5,%:;@nscemit/noisy u(cmo`staffrep)={[ansi(h,\[%n\])] Report Section '%q<secname>' has New Parameter '%3' With initial value: %4 BECAUSE %5};@nspemit %#=u(RFN`MSGHEAD) Added new Parameter: %3

&INC`FINDPARAMETER u(rep)=@assert strlen(%0)=@nspemit %#=u(RFN`MSGHEAD) ERROR: No Parameter targeted.;@assert strlen(setr(parameter,u(FUN`FINDPARAMETER,%q<section>,%0)))=@nspemit %#=u(RFN`MSGHEAD) ERROR: Parameter '%0' not found.;th setq(paraname,get(u(repdb)/%q<section>`PARA`%q<parameter>))

&FUN`FINDPARAMETER u(rep)=last(strfirstof(first(wildgrepi(u(repdb),%0`PARA`*,%1)),first(wildgrepi(u(repdb),%0`PARA`*,%1*))),`)

&INC`NEWENTRY u(rep)=&[setr(entry,%0`PARA`%1`ENTRY`[nextslot(u(repdb),%0`PARA`%1`ENTRY)])] u(repdb)=%2;&%q<entry>`REASON u(repdb)=%3;&%q<entry>`ON u(repdb)=secs();&%q<entry>`BY u(repdb)=%4;&%q<entry>`BYNAME u(repdb)=name(%4);&%0`PARA`%1`VALUE u(repdb)=%2;&%0`PARA`%1`REASON u(repdb)=%3;&%0`PARA`%1`ON u(repdb)=secs();&%0`PARA`%1`BY u(repdb)=%4;&%0`PARA`%1`BYNAME u(repdb)=name(%4)

&INC`DELPARAMETER u(rep)=@include u(rep)/INC`FINDSECTION=%2;@include u(rep)/INC`FINDPARAMETER=%3;@include u(ccs)/INC`VERIFY={ansi(hr,WARNING:) This will delete Section '%q<secname>'s Parameter '%q<paraname>'. All change history will be lost. Are you sure? Enter the same command again within 10 seconds to verify.},DELETE REPORT SECTION %q<section> PARAMETER %q<parameter>,v(VAR`MSGHEAD);@nscemit/noisy u(cmo`staffrep)={[ansi(h,\[%n\])] Report Section '%q<secname>' Parameter '%q<paraname>' DELETED};@nspemit %#=u(RFN`MSGHEAD) Deleted!;@wipe u(repdb)/%q<section>`PARA`%q<parameter>

&INC`RENPARAMETER u(rep)=@include u(rep)/INC`FINDSECTION=%2;@include u(rep)/INC`FINDPARAMETER=%3;@assert strlen(%1)=@nspemit %#=u(RFN`MSGHEAD) ERROR: No new Parameter name entered.;@break words(wildgrepi(u(repdb),%q<section>`PARA`*,%1))=@nspemit %#=u(RFN`MSGHEAD) ERROR: That name is already in use.;@nscemit/noisy u(cmo`staffrep)={[ansi(h,\[%n\])] Report Section '%q<secname>' Parameter '%q<paraname>' RENAMED to: %1};@nspemit %#=u(RFN`MSGHEAD) Renamed!;&%q<section>`PARA`%q<parameter> u(repdb)=%1

&INC`ORDPARAMETER u(rep)=@include u(rep)/INC`FINDSECTION=%2;@include u(rep)/INC`FINDPARAMETER=%3;@assert strlen(%1)=@nspemit %#=u(RFN`MSGHEAD) ERROR: No new Parameter order value entered.;@assert valnum(%1)=@nspemit %#=u(RFn`MSGHEAD) ERROR: Order values must be positive integers.;@nscemit/noisy u(cmo`staffrep)={[ansi(h,\[%n\])] Report Section '%q<secname>' Parameter '%q<paraname>' ORDER set to: %1};@nspemit %#=u(RFN`MSGHEAD) Re-ordered!;&%q<section>`PARA`%q<parameter>`ORDER u(repdb)=%1

&INC`SET u(rep)=@include u(rep)/INC`FINDSECTION=%2;@include u(rep)/INC`FINDPARAMETER=%3;@assert strlen(%4)=@nspemit %#=u(RFN`MSGHEAD) ERROR: No value entered!;@assert strlen(%5)=@nspemit %#=u(RFN`MSGHEAD) ERROR: No reason entered!;@include u(rep)/INC`NEWENTRY=%q<section>,%q<parameter>,%4,%5,%:;@nscemit/noisy u(cmo`staffrep)={[ansi(h,\[%n\])] Report Section '%q<secname>' Parameter '%q<paraname>' set to '%4' BECAUSE '%5'};@nspemit %#=u(RFN`MSGHEAD) Set!

&INC`MAIN u(rep)=@switch/inline t(strlen(%2))[t(strlen(%3))]=0*,{@include u(rep)/INC`DISPLAYALL},10,{@include u(rep)/INC`DISPLAYSECTION},11,{@include u(rep)/INC`DISPLAYPARAMETER}

&INC`DISPLAYALL u(rep)=@nspemit %#=u(RFN`HEADER,Situation Report);@dolist/inline sortkey(#lambda/strfirstof(get(u(repdb)/\%0`ORDER),99),sort(reglattr(u(repdb)/^\\d+$)))={@nspemit %#=u(RFN`SEPARATOR,get(u(repdb)/%i0) Report);@nspemit %#=align(14 13 49,Type,Status,Reason);@dolist/inline sortkey(#lambda/strfirstof(get(u(repdb)/\%0`ORDER),99),sort(lattr(u(repdb)/%i0`PARA`*)))={@nspemit %#=align(14 13 49,pueblize(get(u(repdb)/%i0),+report [get(u(repdb)/%i1)]/[get(u(repdb)/%i0)]),get(u(repdb)/%i0`VALUE),get(u(repdb)/%i0`REASON))}};@nspemit %#=u(RFN`HEADER)

&INC`DISPLAYSECTION u(rep)=@include u(rep)/INC`FINDSECTION=%2;@nspemit %#=u(RFN`HEADER,get(u(repdb)/%q<section>) Report);@nspemit %#=align(14 13 49,Type,Status,Reason);@dolist/inline sortkey(#lambda/strfirstof(get(u(repdb)/\%0`ORDER),99),sort(lattr(u(repdb)/%q<section>`PARA`*)))={@nspemit %#=align(14 13 49,pueblize(get(u(repdb)/%i0),+report %q<secname>/[get(u(repdb)/%i0)]),get(u(repdb)/%i0`VALUE),get(u(repdb)/%i0`REASON))};@nspemit %#=u(RFN`HEADER)

&INC`DISPLAYPARAMETER u(rep)=@include u(rep)/INC`FINDSECTION=%2;@include u(rep)/INC`FINDPARAMETER=%3;th setq(attr,%q<section>`PARA`%q<parameter>);@nspemit %#=u(RFN`HEADER,%q<secname> Report: %q<paraname>);@nspemit %#=if(isadmin(%#),align(15 30 18 12,Status,Reason,Changed,By),align(15 30 18,Status,Reason,Changed));@dolist/inline sortkey(#lambda/last(\%0,`),lattr(u(repdb)/%q<attr>`ENTRY`*))={@nspemit %#=if(isadmin(%#),align(15 30 18 12,get(u(repdb)/%i0),get(u(repdb)/%i0`REASON),fancytime(get(u(repdb)/%i0`ON)),name(get(u(repdb)/%i0`BY))),align(15 30 18,get(u(repdb)/%i0),get(u(repdb)/%i0`REASON),fancytime(get(u(repdb)/%i0`ON))))};@nspemit %#=u(RFN`HEADER)

@@ CHARACTER - +REPORT
+help/addmain Roleplaying/+report=[u(rep)]/HLP`+REPORT
&HLP`+REPORT u(rep)=The Report system keeps track of a number of IC statistics for the setting. %R%R[ansi(hc,Commands)]%R[align(5 [sub(width(%#),6)],,{[ansi(h,+report)] - Display a Summary of the IC statistics.%R[ansi(h,+report <section>)] - Display a summary for only one section.%R[ansi(h,+report <section>/<parameter>)] - Display the history of changes for a parameter.})]

+shelp/addmain Roleplaying/+REPORT=[u(rep)]/SHLP`+REPORT
&SHLP`+REPORT u(rep)=Only Staff can change the statistics and layout of the +report display.%R%R[ansi(hc,Staff Commands)]%R[align(5 [sub(width(%#),6)],,{[ansi(h,+report/addsection <section>)] - Create a whole new section.%R[ansi(h,+report/delsection <section>)] - Remove a section and all its parameters.%R[ansi(h,+report/rensection <section>=<newname>)] - Rename a section.%R[ansi(h,+report/ordsection <section>=<order #>)] - Change the display order for a section. Lower numbers display higher up.%R%R[ansi(h,+report/addparameter <section>/<parameter>=<value>/<reason>)] - Create a new parameter named <parameter> with a starting <value> and <reason>.%R[ansi(h,+report/delparameter <section>/<parameter>)] - Delete a section and all its change history.%R[ansi(h,+report/renparameter <section>/<parameter>=<newname>)] - Rename a parameter.%R[ansi(h,+report/ordparameter <section>/<parameter>=<order #>)] - Change display order for a parameter within a section.%R%R[ansi(h,+report/set <section>/<parameter>=<value>/<reason>)] - Update a parameter with a new value.})]