@@ DEPENDENCIES - Core

@switch/inline isdbref(u(cao))=0,{@tel create(Character Accounts Object <CAO>)=config(master_room)}
&cao u(coi)=locate(config(master_room),Character Accounts Object <CAO>,TXxi)
@parent u(cao)=u(coi)
@set u(cao)=WIZARD !NO_COMMAND

@switch/inline isdbref(u(adb))=0,{@switch/inline isdbref(u(cao))=1,{@tel create(Account Database <ADB>)=u(cao)}}
&adb u(coi)=locate(u(cao),Account Database <ADB>,TXxi)
@parent u(adb)=u(coi)
@set u(adb)=WIZARD
@power u(adb)=many_attribs

&STARTUP u(cao)=@dolist lattr(me/STARTUP`*)=@trigger me/%i0

@@ ****** COMMAND SECTION *******
&CMD`+ACCOUNT u(cao)=$^(?\:\+)?(account|ip|approve|unapprove|staff|admin|wizlist|builder|idlers)(?\:/(\S+))?(?\: +(.+?))?(?\:=(.*))?$:@include u(ccs)/INC`PARTIAL=%2,setunion(get(u(cao)/VAR`%1`PLAYFLAGS),if(isadmin(%#),get(u(cao)/VAR`%1`ADMINFLAGS)),|,|),|,%1,switch,switch;@include u(cao)/INC`%1`[strfirstof(%q<switch>,MAIN)]=%3,%4
@set u(cao)/CMD`+ACCOUNT=regexp

@@ ****** ACCOUNT SECTION *******
&FILTER`OBJID u(cao)=isobjid(%0)

&FUN`FINDACCOUNT u(cao)=firstof(wildgrepi(u(adb),*,*%0*),0)

&INC`ACCOUNT`MAIN u(cao)=@switch/inline isadmin(%#)=1,{@switch/inline strlen(%0)=0,{@assert words(setr(accounts,sort(filterbool(#lambda/and(isint(\%0),strlen(get(u(adb)/\%0))),lattr(u(adb)/*),%B,|),n,|,|)))=@nspemit %#=announce(ACCOUNT) ERROR: There are no accounts entered in the system.;@nspemit %#=header(mudname() Player Accounts)%R%B%B[ljust(ID,4)]Characters%R[subheader()];th iter(lnum(1,ceil(fdiv(words(setr(list,%q<accounts>),|),30))),nspemit(%#,iter(elements(%q<list>,lnum(add(1,mul(sub(inum(0),1),30)),mul(inum(0),30)),|,|),rjust(pueblize(%i0,+account %i0),4).%B[itemize(iter(filterbool(FILTER`OBJID,get(u(adb)/%i0)),pueblize(name(%i0),+finger [name(%i0)]),,|),|,and,\,)],|,%R)));@nspemit %#=header()},{@switch/inline valnum(%0)=1,{@assert hasattr(u(adb)/[setr(accid,%0)])=@nspemit %#=ERROR: Account ID not found.},{@include u(ccs)/INC`CHECKPC=%0,1,ACCOUNT;@assert gt(setr(accid,u(u(cao)/FUN`FINDACCOUNT,%q<t1objid>)),0)=@nspemit %#=ERROR: %q<t1name> is not bound to an account.};@include u(cao)/INC`ACCOUNT`SHOW}},{@include u(ccs)/INC`CHECKPC=%#,1,ACCOUNT;@assert gt(setr(accid,u(u(cao)/FUN`FINDACCOUNT,%q<t1objid>)),0)=@nspemit %#=ERROR: You are not bound to an Account. Please check with an Admin to correct this!;@include u(cao)/INC`ACCOUNT`SHOW}

&INC`ACCOUNT`SHOW u(cao)=@assert words(setr(pcs,filterbool(FILTER`OBJID,get(u(adb)/%q<accid>),%B,|)),|)=@nspemit %#=announce(ACCOUNT) ERROR: No PCs bound to this account.;@nspemit %#=header(Account %q<accid>[if(strlen(setr(email,get(u(adb)/%q<accid>`EMAIL))),:%B%q<email>)] Details)%R[ljust(DBREF,7)][ljust(NAME,30)][ljust(STATUS,10)][ljust(IP,22)]LAST ON%R[subheader()];th iter(lnum(1,ceil(fdiv(words(setr(list,%q<pcs>),|),30))),nspemit(%#,iter(elements(%q<list>,lnum(add(1,mul(sub(inum(0),1),30)),mul(inum(0),30)),|,|),rjust(num(%i0),5)%B%B[ljust(pueblize(name(%i0),+finger [name(%i0)]),30)][ljust(if(isadmin(%i0),ansi(hy,ADM),if(approved(%i0),ansi(hg,APP),ansi(hr,UNAPP))),10)][ljust(pueblize(get(%i0/LASTIP),+ip [name(%i0)]),22)][if(gte(conn(%i0),0),ansi(hg,ago(idle(%i0))),ansi(hx,elements(get(%i0/LAST),2 3)))],|,%R)));@nspemit %#=header()

&INC`ACCOUNT`NEW u(cao)=@break setr(accid,u(u(cao)/FUN`FINDACCOUNT,%:))=@nspemit %#=announce(ACCOUNT) ERROR: You are already bound to Account %q<accid>!;&[setr(accid,nextslot(u(adb)))] u(adb)=%:;@nspemit %#=announce(ACCOUNT) You are now bound to Account %q<accid>!;@switch/inline gt(v(VAR`ACCOUNT`ALERTMODE),0)=1,{@nscemit/noisy v(VAR`ACCOUNT`ALERTSCHANNEL)=%n Bound %oself to new Account: %q<accid>}

&INC`ACCOUNT`BIND u(cao)=@include u(ccs)/INC`CHECKPC=%0,1,ACCOUNT;@switch/inline valnum(%1)=1,{@assert hasattr(u(adb)/[setr(accid,%1)])=@nspemit %#=announce(ACCOUNT) ERROR: Account ID not found.},{@assert strlen(%1)=announce(ACCOUNT)%BERROR: Destination Account Empty. It must be an Account ID, player name, or NEW;@switch/inline %1=NEW,{th setq(accid,nextslot(u(adb)))},{@include u(ccs)/INC`CHECKPC=%1,2,ACCOUNT;@assert gt(setr(accid,u(u(cao)/FUN`FINDACCOUNT,%q<t2objid>)),0)=@nspemit %#=announce(ACCOUNT)%BERROR: That player doesn't have an account.}};@switch/inline gt(setr(oldid,u(u(cao)/FUN`FINDACCOUNT,%q<t1objid>)),0)=1,{&%q<oldid> u(adb)=setdiff(get(u(adb)/%q<oldid>),%q<t1objid>)};&%q<accid> u(adb)=setunion(get(u(adb)/%q<accid>),%q<t1objid>);@nspemit %q<t1>=announce(ACCOUNT) You have been Bound to [pueblize(Account %q<accid>,+account %q<accid>)] by %n.;@nspemit %#=announce(ACCOUNT) You have Bound %q<t1name> to [pueblize(Account %q<accid>,+account %q<accid>)];@switch/inline gt(v(VAR`ACCOUNT`ALERTMODE),0)=1,{@nscemit/noisy v(VAR`ACCOUNT`ALERTSCHANNEL)=%n Bound %q<t1name> to [pueblize(Account %q<accid>,+account %q<accid>)]}

&INC`ACCOUNT`UNBIND u(cao)=@include u(ccs)/INC`CHECKPC=%0,1,ACCOUNT;@assert words(setr(accounts,filterbool(#lambda/match(get(u(adb)/\%0),%q<t1objid>),lattr(u(adb)/*))))=@nspemit %#=announce(ACCOUNT) ERROR: %q<t1name> is not a member of any accounts.;@dolist %q<accounts>={&%i0 u(adb)=filterbool(#lambda/isobjid(\%0),setdiff(get(u(adb)/%i0),%q<t1objid>,%b,d))};@nspemit %#=announce(ACCOUNT) You have removed %q<t1name> from Accounts: [itemize(%q<accounts>,%b,and,\,)];@nspemit %q<t1>=announce(ACCOUNT) [ansi(h,%n)] has removed you from Accounts: [itemize(%q<accounts>,%b,and,\,)];@switch/inline gt(v(VAR`ACCOUNT`ALERTMODE),0)=1,{@nscemit/noisy v(VAR`ACCOUNT`ALERTSCHANNEL)=%n removed %q<t1name> to from Accounts: [itemize(%q<accounts>,%b,and,\,)]}


&VAR`ACCOUNT`ALERTMODE u(cao)=1
&VAR`ACCOUNT`ALERTSCHANNEL u(cao)=Staff Reports

@@ &INC`ACCOUNT`UNBOUND u(cao)=@assert gt(words(setr(unbound,sql(SELECT PC_ID\,OBJID FROM PC_MAIN WHERE ACCOUNT_ID IS NULL,|,^)),|),0)=@nspemit %#=There are no accountless PCs in the Database.;@nspemit %#=[header(Unbound Characters)]%R[ljust(PCID,6)][ljust(NAME,30)][ljust(STATUS,10)][ljust(IP,18)]LAST ON%R[subheader()];th iter(lnum(1,ceil(fdiv(words(setr(list,%q<unbound>),|),30))),nspemit(%#,iter(elements(%q<list>,lnum(add(1,mul(sub(inum(0),1),30)),mul(inum(0),30)),|,|),rjust(before(%i0,^),4).%B[ljust(pueblize(name(after(%i0,^)),+finger [name(after(%i0,^))]),30)][ljust(if(hasattr(after(%i0,^)/D`APPROVED),ansi(hg,APP),ansi(hr,UNAPP)),10)][ljust(get(after(%i0,^)/LASTIP),18)][if(gte(conn(after(%i0,^)),0),ansi(hg,ago(idle(after(%i0,^)))),ansi(hx,elements(get(after(%i0,^)/LAST),2 3)))],|,%R)));@nspemit %#=[header()]

&INC`ACCOUNT`EMAIL u(cao)=@assert gt(setr(accid,u(u(cao)/FUN`FINDACCOUNT,%:)),0)=@nspemit %#=ERROR: This character is not bound to an Account.;&%q<accid>`EMAIL u(adb)=%0;@nspemit %#=announce(ACCOUNT) You have [if(strlen(%0),set your Account email to: %0,unset your Account email.)]

&VAR`ACCOUNT`PLAYFLAGS u(cao)=EMAIL|NEW
&VAR`ACCOUNT`ADMINFLAGS u(cao)=BIND|UNBIND

&PLAYER`CREATE`ACCOUNT u(cao)=@assert and(gt(words(setr(pcs,setdiff(lsearch(all,eplayer,\[and(strlen(grepi(##,D`IPLOG`*,get(%0/LASTIP))),not(haspower(##,GUEST)))\]),%0))),0),eq(words(setdiff(setunion(iter(%q<pcs>,u(u(cao)/FUN`FINDACCOUNT,objid(%i0))),),0)),1))={@wait 2=@nspemit %0=announce(ACCOUNT) Welcome to [mudname()]! No account could be set for this PC based on IP records. Please contact Admin if this is an alt. If it is a new character, please type [pueblize(+account/new,+account/new)]};@break gt(words(setr(accid,setdiff(setunion(iter(%q<pcs>,u(u(cao)/FUN`FINDACCOUNT,objid(%i0))),),0))),1)={@wait 1=@nspemit %0=announce(ACCOUNT) No account could be determined for this PC because your IP address matches characters from multiple accounts. Please contact an Admin to have your account set if this is an alt.};&%q<accid> u(adb)=setunion(get(u(adb)/%q<accid>),%0);@nspemit %0=announce(ACCOUNT) You have been Added to Account %q<accid> based on your IP records. If this is in error, please contact an admin to have it corrected.;@switch/inline gt(v(VAR`ACCOUNT`ALERTMODE),0)=1,{@nscemit/noisy v(VAR`ACCOUNT`ALERTSCHANNEL)=[name(%0)] was automatically bound to [pueblize(Account %q<accid>,+account %q<accid>)]}

&PLAYER`CONNECT`ACCOUNT u(cao)=@break haspower(%0,GUEST);@assert gt(sub(secs(),csecs(%0)),300);@break u(u(cao)/FUN`FINDACCOUNT,%0);@trigger u(cao)/PLAYER`CREATE`ACCOUNT=%0

&STARTUP`CLEANACCOUNTS u(cao)=@trigger u(cao)/TRG`ACCOUNT`CLEANACCOUNTS

&TRG`ACCOUNT`CLEANACCOUNTS u(cao)=@dolist filterbool(#lambda/isint(\%0),lattr(u(adb)/*))={&%i0 u(adb)=filterbool(FILTER`OBJID,get(u(adb)/%i0));@assert words(get(u(adb)/%i0))=&%i0 u(adb)};@wait 7200=@trigger u(cao)/TRG`ACCOUNT`CLEANACCOUNTS

@@ ******* IP SECTION *********

&INC`IP`MAIN u(cao)=@break haspower(%#,GUEST)=@nspemit %#=ERROR: Guests cannot use +ip.;@switch/inline isadmin(%#)=0,{@include u(cao)/INC`IP`IPSHOW=%#,0},{@include u(ccs)/INC`CHECKPC=strfirstof(%0,%#),1,IP;@break haspower(%q<t1>,GUEST)=@nspemit %#=ERROR: To match Guests, please use +ip/guests;@include u(cao)/INC`IP`IPSHOW=%q<t1>,0}

&INC`IP`GUESTS u(cao)=@switch/inline isadmin(%#)=0,{@include u(cao)/INC`IP`IPSHOW=%#,1},{@include u(ccs)/INC`CHECKPC=%0,1,IP;@include u(cao)/INC`IP`IPSHOW=%q<t1>,1}

&INC`IP`IP u(cao)=@assert strlen(%0)=@nspemit %#=announce(IP) ERROR: An IP address is required.;@include u(cao)/INC`IP`IPSHOW=%0,1,1

&INC`IP`IPSHOW u(cao)=@assert gt(words(setr(ips,if(%2,%0,setunion(iter(lattr(%0/D`IPLOG`*),get(%0/%i0)),)))),0)=@nspemit %#=announce(IP)%BERROR: No IP logs found to match against.;@assert gt(words(setr(pcs,filterbool(#lambda/and(lt(words(setdiff(setunion(iter(lattr(\%0/D`IPLOG`*),get(\%0/\%i0)),),%q<ips>)),words(setunion(iter(lattr(\%0/D`IPLOG`*),get(\%0/\%i0)),))),if(%1,1,not(haspower(\%0,GUEST)))),lsearch(all,eplayer,\[nattr(##/D`IPLOG`*)\]),%B,|)),|),0)=@nspemit %#=announce(IP)%BERROR: No Matching Logs found.;@nspemit %#=header(Site matches for [if(%2,%0,name(%0))][if(%1,%B\(Showing Guests\))]);th iter(lnum(1,ceil(fdiv(words(setr(list,%q<pcs>),|),30))),nspemit(%#,iter(elements(%q<list>,lnum(add(1,mul(sub(inum(0),1),30)),mul(inum(0),30)),%B,|),ljust(ansi(h,pueblize(name(%i0),+finger [name(%i0)])\(%i0\)),50,.)[get(%i0/LAST)]%RRecent Sites: [edit(setunion(iter(lattr(%i0/D`IPLOG`*),get(%i1/%i0)),),get(%i0/LASTIP),ansi(hc,get(%i0/LASTIP)))]%R[ansi(h,Successful Logins:)]%R[iter(filterbool(#lambda/strmatch(SUCCESS,get(%i0/\%0`TYPE)),sort(lattr(%i0/D`IPLOG`*))),From [get(%i1/%i0)] On [convsecs(get(%i1/%i0`WHEN))],%B,%R)]%R[ansi(h,Failed Logins:)]%R[iter(filterbool(#lambda/strmatch(FAILURE,get(%i0/\%0`TYPE)),sort(lattr(%i0/D`IPLOG`*))),From [get(%i1/%i0)] On [convsecs(get(%i1/%i0`WHEN))] Because [get(%i1/%i0`REASON)],%B,%R)]%R,|,%R)));@nspemit %#=header()

&STARTUP`CLEANCONNLOGS u(cao)=@trigger u(cao)/TRG`IP`LOGCLEANER

&TRG`IP`LOGCLEANER u(cao)=@dolist lsearch(all,type,player)=@trigger u(cao)/TRG`IP`CLEANCONNLOGS=%i0;@wait 7200=@trigger u(cao)/TRG`IP`LOGCLEANER

&TRG`IP`CLEANCONNLOGS u(cao)=@assert gt(words(setr(logs,sort(lattr(%0/D`IPLOG`*)))),10);@dolist elements(%q<logs>,1 2)={@wipe %0/%i0}

&PLAYER`CONNECT`IPLOG u(cao)=&[setr(iplog,D`IPLOG`[nextslot(%0,D`IPLOG)])] %0=get(%0/LASTIP);&%q<iplog>`WHEN %0=secs();&%q<iplog>`TYPE %0=SUCCESS;@trigger u(cao)/TRG`IP`CLEANCONNLOGS=%0

&SOCKET`LOGINFAIL`IPLOG u(cao)=&[setr(iplog,D`IPLOG`[nextslot(%4,D`IPLOG)])] %4=%1;&%q<iplog>`WHEN %4=secs();&%q<iplog>`TYPE %4=FAILURE;&%q<iplog>`REASON %4=%3;@switch/inline %4=#1,{@nscemit/noisy v(VAR`IP`ALERTSCHANNEL)=ansi(hrf,WARNING:)%BIP %1 attempted and failed to login to the God (#1) Character!},{@switch/inline isdbref(%4)=1,{@switch/inline gte(%2,3)=1,{@switch/inline gt(v(VAR`IP`ALERTMODE),0)=1,{@nscemit/noisy v(VAR`IP`ALERTSCHANNEL)=ansi(hr,WARNING:) [name(%4)] has failed to login %2 times. Reason: %3}}}};@trigger u(cao)/TRG`IP`CLEANCONNLOGS=%4

&VAR`IP`ALERTMODE u(cao)=1
&VAR`IP`ALERTSCHANNEL u(cao)=Staff Reports

&VAR`IP`ADMINFLAGS u(cao)=GUESTS|IP

@@ ****** APPROVAL SECTION *********
&PLAYER`CREATE`UNREGISTER u(cao)=@set %0=UNREGISTERED

&INC`APPROVE`MAIN u(cao)=@switch/inline and(isadmin(%#),strlen(%0))=1,{@include u(ccs)/INC`CHECKPC=%0,1,APPROVE;@break approved(%q<t1>)=@nspemit %#=announce(APPROVE)%BERROR: They are already approved!;@include u(cao)/INC`APPROVE`DOAPPROVE=%q<t1>;@nspemit %#=announce(APPROVE)%BYou have approved %q<t1name> for play!;@switch/inline gt(v(VAR`APPROVE`ALERTMODE),0)={@nscemit/noisy v(VAR`APPROVE`ALERTSCHANNEL)=%n has approved %q<t1name> for play!;@force/inline %q<t1>=+recall;@nscemit/noisy v(VAR`APPROVE`ANNOUNCECHANNEL)=ansi(h,%n) just approved %q<t1name> for play!}},{@nspemit %#=announce(APPROVE)%BYou [if(approved(%#),ansi(hg,are),ansi(hr,are not))] are approved for play!}

&INC`APPROVE`DOAPPROVE u(cao)=@set %0=!UNREGISTERED
&INC`APPROVE`DOUNAPPROVE u(cao)=@set %0=UNREGISTERED

&INC`UNAPPROVE`MAIN u(cao)=@switch/inline isadmin(%#)=1,{@include u(ccs)/INC`CHECKPC=%0,1,APPROVE;@assert approved(%q<t1>)=@nspemit %#=announce(APPROVE)%BERROR: They are not approved!;@include u(cao)/INC`APPROVE`DOUNAPPROVE=%q<t1>;@nspemit %#=announce(APPROVE)%BYou have unapproved %q<t1name> for play!;@switch/inline gt(v(VAR`APPROVE`ALERTMODE),0)={@nscemit/noisy v(VAR`APPROVE`ALERTSCHANNEL)=%n has unapproved %q<t1name> for play!}},{@nspemit %#=announce(APPROVE)%BYou [if(approved(%#),ansi(hg,are),ansi(hr,are not))] are approved for play!}

&GFN`APPROVED u(cao)=or(not(hasflag(%0,UNREGISTERED)),isadmin(%0))

&APPROVE u(ae)=approved(%#)
&isadmin u(ae)=isadmin(%#)

&VAR`APPROVE`ALERTMODE u(cao)=1
&VAR`APPROVE`ALERTSCHANNEL u(cao)=Staff Reports
&VAR`APPROVE`ANNOUNCECHANNEL u(cao)=OOC

@@ ********* STAFF SECTION ********
&GFN`ISADMIN u(cao)=or(orflags(%0,WrJ),strlen(getstat(u(cao)/VAR`STAFF`WIZLIST,objid(%0))))

&FUN`STAFF`CHSTAFF u(cao)=orflags(%0,W)

&INC`WIZLIST`MAIN u(cao)=@include u(cao)/INC`STAFF`MAIN
&INC`ADMIN`MAIN u(cao)=@include u(cao)/INC`STAFF`MAIN

&VAR`STAFF`ADMINFLAGS u(cao)=ADD|REM|ORDER

&INC`STAFF`MAIN u(cao)=@assert words(setr(staff,filterbool(#lambda/isobjid(\%0),iter(sortkey(#lambda/after(\%0,~),get(u(cao)/VAR`STAFF`WIZLIST),n,|,|),before(%i0,~),|,|),|,|)),|)=@nspemit %#=announce(STAFF)%BERROR: There are no Staff registered!;@nspemit %#=header(mudname() Staff)%R[ljust(Bit,4)][ljust(Name,14)][ljust(Alias,6)][ljust(Position,20)][ljust(Status,18)]Conn%R[header()];@pemit %#=iter(%q<staff>,u(u(cao)/FUN`Staff`WIZLIST,%i0),|,%R);@nspemit %#=header()

&FUN`STAFF`WIZLIST u(cao)=ljust(switch(1,hasflag(%0,WIZARD),ansi(hr,WIZ),hasflag(%0,ROYALTY),ansi(hb,ROY),hasflag(%0,JUDGE),ansi(hy,JDG),ansi(hx,N/A)),4)[ljust(left(name(%0),13),14)][ljust(left(alias(%0),5),6)][ljust(left(default(%0/POSITION,???),19),20)][ljust(left(default(%0/Status,???),17),18)][ljust(if(or(hasflag(%0,DARK),eq(-1,conn(%0))),ansi(hx,elements(get(%0/last),2 3)),ansi(hg,ago(idle(%0)))),10)]

&INC`STAFF`ADD u(cao)=@include u(ccs)/INC`CHECKPC=%0,1,STAFF;@break strlen(getstat(u(cao)/VAR`STAFF`WIZLIST,%q<t1objid>))=@nspemit %#=announce(STAFF) ERROR: They are already on the Staff list!;@switch/inline gt(strlen(%1),0)=1,{@assert valnum(%1)=@nspemit %#=announce(STAFF) ERROR: Order Must be a whole positive number.;th setstat(u(cao)/VAR`STAFF`WIZLIST,%q<t1objid>,%1)},0,{th setstat(u(cao)/VAR`STAFF`WIZLIST,%q<t1objid>,setr(order,add(1,iter(get(u(cao)/VAR`STAFF`WIZLIST),last(%i0,~)))))};@nspemit %#=announce(STAFF) You have added %q<t1name> to Staff!;@nspemit %q<t1>=announce(STAFF) You have been added to Staff!;@switch/inline gt(v(VAR`STAFF`ALERTMODE),0)=1,{@nscemit/noisy v(VAR`STAFF`ALERTSCHANNEL)=ansi(h,%n) has added %q<t1name> to Staff!}

&INC`STAFF`REM u(cao)=@include u(ccs)/INC`CHECKPC=%0,1,STAFF;@assert strlen(getstat(u(cao)/VAR`STAFF`WIZLIST,%q<t1objid>))=@nspemit %#=announce(STAFF) ERROR: They are not on the Staff list!;@nspemit %#=announce(STAFF) You have removed %q<t1name> from Staff!;@nspemit %q<t1>=announce(STAFF) You have been removed from Staff!;th delstat(u(cao)/VAR`STAFF`WIZLIST,%q<t1objid>);@switch/inline gt(v(VAR`STAFF`ALERTMODE),0)=1,{@nscemit/noisy v(VAR`STAFF`ALERTSCHANNEL)=ansi(h,%n) has removed %q<t1name> from Staff!}

&INC`STAFF`ORDER u(cao)=@include u(ccs)/INC`CHECKPC=%0,1,STAFF;@assert strlen(getstat(u(cao)/VAR`STAFF`WIZLIST,%q<t1objid>))=@nspemit %#=announce(STAFF) ERROR: They are not on the Staff list!;@assert strlen(%1)=@nspemit %#=announce(STAFF) ERROR: Order field empty.;@assert valnum(%1)=@nspemit %#=announce(STAFF) ERROR: Order Must be a whole positive number.;th setstat(u(cao)/VAR`STAFF`WIZLIST,%q<t1objid>,%1);@nspemit %#=announce(STAFF) You have set %q<t1name>'s Staff order to %1!;@nspemit %q<t1>=%n has set your Staff order to %1!;@switch/inline gt(v(VAR`STAFF`ALERTMODE),0)=1,{@nscemit/noisy v(VAR`STAFF`ALERTSCHANNEL)=ansi(h,%n) has set %q<t1name>'s Staff order to %1!}

&VAR`STAFF`ALERTMODE u(cao)=1
&VAR`STAFF`ALERTSCHANNEL u(cao)=Staff Reports

&STARTUP`CLEANSTAFF u(cao)=@trigger u(cao)/TRG`STAFF`CLEANSTAFF
&TRG`STAFF`CLEANSTAFF u(cao)=&VAR`STAFF`WIZLIST u(cao)=filterbool(#lambda/isobjid(before(\%0,~)),get(u(cao)/VAR`STAFF`WIZLIST),|,|);@wait 7200=@trigger u(cao)/TRG`STAFF`CLEANSTAFF

@@ ********* BUILDER SECTION ********
&INC`BUILDER`MAIN u(cao)=@switch/inline isadmin(%#)=1,{@assert words(setr(build,lsearch(all,eplayer,\[haspower(##,BUILDER)\])))=@nspemit %#=announce(BUILDER) There are no Builder Characters.;@nspemit %#=header(mudname() Builder Characters);@nspemit %#=iter(%q<build>,ansi(h,%i0 - [name(%i0)]) - [powers(%i0)],%b,%R);@nspemit %#=header()},0,{@nspemit %#=announce(BUILDER)%BYou [if(haspower(%#,BUILDER),ansi(hg,are),ansi(hr,are not))] A Builder!}

&INC`BUILDER`ADD u(cao)=@include u(ccs)/INC`CHECKPC=%0,1,BUILDER;@break haspower(%q<t1>,BUILDER)=@nspemit %#=announce(BUILDER)%BERROR: They are already a Builder.;@set %q<t1>=!UNREGISTERED;@power %q<t1>=builder link_anywhere open_anywhere no_quota no_pay pick_dbref;@nspemit %#=announce(BUILDER)%BYou have made %q<t1name> a Builder.;@nspemit %q<t1>=announce(BUILDER) %n has granted you Builder powers.;@switch/inline gt(v(VAR`BUILDER`ALERTMODE),0)={@nscemit/noisy v(VAR`BUILDER`ALERTSCHANNEL)=%n has made %q<t1name> a Builder.}

&INC`BUILDER`REM u(cao)=@include u(ccs)/INC`CHECKPC=%0,1,BUILDER;@assert haspower(%q<t1>,BUILDER)=@nspemit %#=announce(BUILDER)%BERROR: They are not a Builder.;@power %q<t1>=!builder !link_anywhere !open_anywhere !no_quota !no_pay !pick_dbref;@nspemit %#=announce(BUILDER)%BYou have revoked %q<t1name>'s Builder powers.;@nspemit %q<t1>=announce(BUILDER) %n has revoked your Builder powers.;@switch/inline gt(v(VAR`BUILDER`ALERTMODE),0)={@nscemit/noisy v(VAR`BUILDER`ALERTSCHANNEL)=%n has revoked %q<t1name>'s Builder powers.}

&VAR`BUILDER`ADMINFLAGS u(cao)=ADD|REM

&VAR`BUILDER`ALERTMODE u(cao)=1
&VAR`BUILDER`ALERTSCHANNEL u(cao)=Staff Reports

@@ ******** IDLERS SECTION ******
&INC`IDLERS`MAIN u(cao)=@switch/inline gt(strlen(%0),0)=1,{@assert valnum(setr(days,%0))=@nspemit %#=announce(IDLERS) ERROR: Day field must be a whole, positive integer!},{th setq(days,30)};@assert words(setr(idlers,sortkey(#lambda/convtime(get(\%0/LASTLOGOUT)),setdiff(lsearch(all,eplayer,\[and(gt(sub(secs(),convtime(get(##/LASTLOGOUT))),mul(86400,%q<days>)),not(haspower(##,GUEST)),not(isadmin(##)))\]),u(ap)),n,%b,|)))=@nspemit %#=announce(IDLERS) Nobody's been offline longer than %q<days>.;@nspemit %#=header(Players over %q<days> Idle)%R[ljust(DBREF,7)][ljust(NAME,30)][ljust(STATUS,10)][ljust(IP,22)]LAST ON%R[subheader()];th iter(lnum(1,ceil(fdiv(words(setr(list,%q<idlers>),|),30))),nspemit(%#,iter(elements(%q<list>,lnum(add(1,mul(sub(inum(0),1),30)),mul(inum(0),30)),|,|),rjust(num(%i0),5)%B%B[ljust(pueblize(name(%i0),+finger [name(%i0)]),30)][ljust(if(isadmin(%i0),ansi(hy,ADM),if(approved(%i0),ansi(hg,APP),ansi(hr,UNAPP))),10)][ljust(pueblize(get(%i0/LASTIP),+ip [name(%i0)]),22)][if(gte(conn(%i0),0),ansi(hg,ago(idle(%i0))),ansi(hx,elements(get(%i0/LAST),2 3)))],|,%R)));@nspemit %#=header()

&VAR`IDLERS`ADMINFLAGS u(cao)=
&VAR`IDLERS`PLAYFLAGS u(cao)=