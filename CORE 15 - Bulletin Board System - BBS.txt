@switch/inline isdbref(u(bbs))=0,{@tel create(Bulletin Board System <BBS>)=config(master_room)}
&bbs u(coi)=locate(config(master_room),Bulletin Board System <BBS>,TXxi)
@parent u(bbs)=u(coi)
@set u(bbs)=WIZARD !NO_COMMAND

&CMD`BB u(bbs)=$^(?s)(?\:\+)?(bb|gb)(\S+)(?\: +(.+?))?(?\:/(.+?))?(?\:=(.*))?$:@include u(bbs)/INC`INIT`%1;@include u(ccs)/INC`PARTIAL=%2,setunion(setunion(v(VAR`BB`PLAYCOMMS),if(setr(isadmin,switch(%1,bb,isadmin(%#),gb,u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,BBADMIN))),v(VAR`BB`ADMINCOMMS)),|,|),if(hasflag(%#,WIZARD),v(VAR`BB`WIZCOMMS)),|,|),|,setr(ann,ucstr(%1S)),command,command;@include u(bbs)/INC`[strfirstof(%q<command>,WRITE)]=ucstr(%1),%3,%4,%5
@set u(bbs)/CMD`BB=regexp

&CMD`BBWRITE u(bbs)=$(?s)^\+(bb|gb)(?\:write)?(?\: +(.*))?$:th setq(ann,ucstr(%1S));@include u(bbs)/INC`INIT`%1;@include u(bbs)/INC`WRITE=ucstr(%1),%2
@set u(bbs)/CMD`BBWRITE=regexp

&VAR`BB`PLAYCOMMS u(bbs)=READ|POST|REMOVE|SCAN|NEXT|EDIT|JOIN|LEAVE|LIST|WRITE|PROOF|TOSS|CATCHUP|SEARCH|NEW|TIMEOUT|ALL|CHECK
&VAR`BB`ADMINCOMMS u(bbs)=NEWGROUP|CLEARGROUP|CONFIG|TIMEOUT|LOCK|UNLOCK|ORDER|RENAME
&VAR`BB`WIZCOMMS u(bbs)=IMPORT|CONVERT

&INC`INIT`GB u(bbs)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1

&FUN`VALIDGROUPS`BB u(bbs)=filterbool(#lambda/u(FUN`CAN%1`BB,%0,\%0,%2),u(FUN`LISTGROUPS`BB))
&FUN`BBADMIN`BB u(bbs)=or(isadmin(%0),if(strmatch(lock(%1/Admin),*UNLOCKED*),0,elock(%1/Admin,%0)))
&FUN`CANREAD`BB u(bbs)=and(or(elock(%1/Read,%0),u(FUN`BBADMIN`BB,%0,%1)),or(%2,not(default(%0/D`BB`%1`OMIT,0))))
&FUN`CANWRITE`BB u(bbs)=and(or(elock(%1/Write,%0),u(FUN`BBADMIN`BB,%0,%1)),or(%2,not(default(%0/D`BB`%1`OMIT,0))))

&FUN`VALIDGROUPS`GB u(bbs)=filterbool(#lambda/u(FUN`CAN%1`GB,%0,\%0,%2,%q<gid1>),u(FUN`LISTGROUPS`GB))
&FUN`BBADMIN`GB u(bbs)=u(u(gso)/FUN`GRPPERM,objid(%0),%1,BBADMIN)
&FUN`CANREAD`GB u(bbs)=and(or(u(FUN`BBADMIN`GB,%0,%3),if(strlen(get(u(bbs)/BB`%1`GREAD)),lte(u(u(gso)/FUN`GETRANK,%3,objid(%0)),get(u(bbs)/BB`%1`GREAD)),1)),or(%2,not(default(%0/D`BB`%1`OMIT,0))))
&FUN`CANWRITE`GB u(bbs)=and(or(u(FUN`BBADMIN`GB,%0,%3),if(strlen(get(u(bbs)/BB`%1`GWRITE)),lte(u(u(gso)/FUN`GETRANK,%3,objid(%0)),get(u(bbs)/BB`%1`GWRITE)),1)),or(%2,not(default(%0/D`BB`%1`OMIT,0))))

&INC`CHECK u(bbs)=@switch/inline t(default(%#/D`BB`CHECK,1))=1,{@nspemit %#=announce(%q<ann>) You will no longer +bbscan on connect!;&D`BB`CHECK %#=0},0,{@nspemit %#=announce(%q<ann>) You will now +bbscan on connect!;&D`BB`CHECK %#=1}

&PLAYER`CONNECT`CHECK u(bbs)=@assert t(default(%0/D`BB`CHECK,1));@force/inplace %0=+bbscan

&FUN`LISTGROUPS`BB u(bbs)=filterbool(#lambda/isdbref(\%0),v(groups))
&FUN`LISTGROUPS`GB u(bbs)=filterbool(#lambda/isdbref(\%0),get(u(gdb)/%q<gid1>`BOARDS))

&INC`CHECK`FINDBB u(bbs)=@assert strlen(%1)=@nspemit %#=announce(%q<ann>) ERROR: You must enter a board to use!;@switch/inline 1=valnum(%1),{th setq(bbnum,%1)},regmatch(%1,^(#\\d+)$),th setq(bbnum,match(u(FUN`LISTGROUPS`%0),%1)),{@include u(ccs)/INC`PARTIAL=%1,setr(names,iter(setr(valgroups,u(FUN`VALIDGROUPS`%0,%#,%2,%3)),name(%i0),%b,|)),|,%q<ann>,board,board;th setq(bbnum,match(u(FUN`LISTGROUPS`%0),elements(%q<valgroups>,match(%q<names>,%q<board>,|))))};@assert valnum(%q<bbnum>)=@nspemit %#=announce(%q<ann>) ERROR: Board find error;@assert u(FUN`CAN%2`%0,%#,setr(bb,elements(u(FUN`LISTGROUPS`%0),%q<bbnum>)),%q<gid1>)=@nspemit %#=announce(%q<ann>) ERROR: You are not a [ucstr(%2)] member of that board.;@assert isdbref(%q<bb>)=@nspemit %#=announce(%q<ann>) ERROR: Board not found.

&INC`CHECK`FINDPOST u(bbs)=@assert strlen(%1)=@nspemit %#=announce(%q<ann>) ERROR: No post entered!;@assert valnum(%1)=@nspemit %#=announce(%q<ann>) ERROR: Posts must be addressed by their post #s!;@assert strlen(setr(post,elements(u(FUN`LISTPOSTS,%2),setr(postnum,%1))))=@nspemit %#=announce(%q<ann>) ERROR: Post not found.

&FUN`LISTPOSTS u(bbs)=sortkey(#lambda/baseconv(\%0,36,10),lattr(%0/*))

&FUN`MESSLIST u(bbs)=setunion(iter(%2,switch(1,valnum(%i0),%i0,regmatchi(%i0,^\\d+-\\d+$),setq(num1,abs(before(%i0,-)),num2,abs(after(%i0,-)))[setq(ord,sort(%q<num1> %q<num2>))][lnum(first(%q<ord>),last(%q<ord>))],strmatch(%i0,u),iter(setdiff(lattr(%1/*),get(%0/D`BB`%1`READ)),match(u(FUN`LISTPOSTS,%1),%i0)),0),\,,%B),,%B,n)

&FUN`CONFIG u(bbs)=if(and(strlen(%0),isdbref(%0)),u(FUN`CONFIG`BB`%1,%0),if(strlen(%0),u(FUN`CONFIG`GLOBAL`%0)))

&FUN`CONFIG`GLOBAL`AUTOTIMEOUT u(bbs)=default(u(bbs)/BB`AUTOTIMEOUT,0)
&FUN`CONFIG`GLOBAL`TIMEOUT u(bbs)=default(u(bbs)/BB`TIMEOUT,mul(60,60,24,30))
&FUN`CONFIG`GLOBAL`INTERVAL u(bbs)=default(u(bbs)/BB`INTERVAL,mul(60,60,24))
&FUN`CONFIG`BB`TIMEOUT u(bbs)=strfirstof(get(u(bbs)/BB`%0`TIMEOUT),u(FUN`CONFIG,timeout))
&FUN`CONFIG`BB`ANONYMOUS u(bbs)=t(strlen(get(u(bbs)/BB`%0`ANONYMOUS)))

&INC`POST u(bbs)=@include u(ccs)/INC`JAILCHECK;@switch/inline strlen(%1)=0,{@assert hasattr(%#/D`BB`NEW)=@nspemit %#=announce(%q<ann>) ERROR: You don't have a post in progress.;th setq(gid1,get(%#/D`BB`NEW`GID));@include u(bbs)/INC`POST`MAKEMESS=%#,get(%#/D`BB`NEW`BBNUM),get(%#/D`BB`NEW`BB),get(%#/D`BB`NEW`TITLE),get(%#/D`BB`NEW`TEXT),get(%#/D`BB`NEW`TYPE);@wipe %#/D`BB`NEW},{@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@assert strlen(%2)=@nspemit %#=announce(%q<ann>) ERROR: Title field empty!;@switch/inline strlen(%3)=0,{@include u(bbs)/INC`POST`BEGIN},{@include u(bbs)/INC`POST`MAKEMESS=%#,%q<bbnum>,%q<bb>,left(%2,34),%3,%0}}

&INC`POST`BEGIN u(bbs)=@break hasattr(%#/D`BB`NEW)=@nspemit %#=announce(%q<ann>) ERROR: You already have a post in progress. use +bb <text> to add to it, +bbproof to view it, or +bbpost to post it. Alternatively, +bbtoss to trash it.;&D`BB`NEW`BBNUM %#=%q<bbnum>;&D`BB`NEW`BB %#=%q<bb>;&D`BB`NEW`TITLE %#=%2;&D`BB`NEW`TYPE %#=%0;&D`BB`NEW`GID %#=%q<gid1>;@nspemit %#=You start your posting to Board #%q<bbnum> ([name(%q<bb>)])%RYou can now compose the body of the post by using '+bbwrite <text>'%Ror '+bb <text>'. When you are finished, type '+bbpost' to send it. See '+help bbs' for help!

&INC`WRITE u(bbs)=@assert hasattr(%#/D`BB`NEW)=@nspemit %#=announce(%q<ann>) ERROR: You don't have a post in progress.;@break eq(strlen(get(%#/D`BB`NEW`TEXT)),setr(max,strlen(lnum(1,9999))))=@nspemit %#=announce(%q<ann>) ERROR: Your post has already reached %q<max> characters - all that will fit. You may not add more text.;@assert strlen(%1)=@nspemit %#=announce(%q<ann>) ERROR: Nothing entered to write. Use +bbproof to see what you've written!;&D`BB`NEW`TEXT %#=trim(cat(trim(get(%#/D`BB`NEW`TEXT)),trim(%1)));@nspemit %#=announce(%q<ann>) Text added to bbpost. Your post has reached [strlen(get(%#/D`BB`NEW`TEXT))] of [strlen(lnum(1,9999))] max characters!

&INC`TOSS u(bbs)=@assert hasattr(%#/D`BB`NEW)=@nspemit %#=announce(%q<ann>) ERROR: You don't have a post in progress.;@wipe %#/D`BB`NEW;@nspemit %#=announce(%q<ann>) Post discarded.

&INC`PROOF u(bbs)=@assert hasattr(%#/D`BB`NEW)=@nspemit %#=announce(%q<ann>) ERROR: You don't have a post in progress.;@nspemit %#=header(get(%#/D`BB`NEW`TITLE));@nspemit %#=get(%#/D`BB`NEW`TEXT);@nspemit %#=header(Length: [strlen(get(%#/D`BB`NEW`TEXT))] Characters)

&INC`POST`MAKEMESS u(bbs)=th setq(next,baseconv(default(u(bbs)/BB`%2`NEXT,1),10,36));&BB`%2`NEXT u(bbs)=add(default(u(bbs)/BB`%2`NEXT,1),1);&%q<next> %2=%4;&%q<next>`BY %2=name(%0);&%q<next>`BYDB %2=objid(%0);&%q<next>`ON %2=secs();&%q<next>`HDR %2=%3;&%q<next>`TIMEOUT %2=if(u(FUN`CONFIG,%2,TIMEOUT),u(FUN`CONFIG,%2,TIMEOUT),0);@switch/inline %5=BB,{@include u(bbs)/INC`ALERT=%5,%1,%2,{(New [ucstr(%5)] Message ([pueblize(setr(messnum,%1/[words(lattr(%2/*))]),+[lcstr(%5)]read %q<messnum>)]) posted to '[name(%2)]' by %n: %3)}},GB,{@include u(bbs)/INC`ALERT=%5,%1,%2,{ansi(hc,<GROUP BB>) New message posted on '[pueblize(%q<gname1>,+group %q<gname1>)]' '[name(%2)]' Board ([pueblize(setr(messnum,%1/[words(lattr(%2/*))]),+[lcstr(%5)]read %q<messnum>)]) by %n: %3}}

&INC`ALERT u(bbs)=@switch/inline %0=BB,{th setq(members,filterbool(#lambda/u(FUN`CANREAD`BB,\%0,%2,,),setunion(lwho(),)))},GB,{th setq(members,filterbool(#lambda/isgroupmember(\%0,%q<gid1>),setunion(lwho(),)))};@dolist/inline %q<members>={@nspemit %i0=%3}
@@ %0 - Mode, GB or BB. %1 - Board number. %2 - Board DBREF. %3 - Message.

&INC`NEWGROUP u(bbs)=@assert strlen(%1%2)=@nspemit %#=announce(%q<ann>) ERROR: No name entered for the new board!;@assert valid(name,%1%2)=@nspemit %#=announce(%q<ann>) ERROR: That is not a suitable name for a board.;@tel setr(bb,create(%1%2))=switch(%0,BB,u(bbs),GB,u(gdb));@power %q<bb>=many_attribs;@switch/inline %0=BB,{&groups u(bbs)=trim(cat(v(groups),%q<bb>))},GB,{&%q<gid1>`BOARDS u(gdb)=trim(cat(get(u(gdb)/%q<gid1>`BOARDS),%q<bb>))};@set %q<bb>=SAFE;@nspemit %#=announce(%q<ann>) Board '%1%2' created!

&INC`CLEARGROUP u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)] Deleting %q<ann> Board %q<bbnum> will also delete all messages. This cannot be undone! Please enter the same command again within 10 seconds to verify.},CLEARGROUP %0 %1,%q<ann>;@set %q<bb>=!SAFE;@nuke %q<bb>;@nuke %q<bb>;@set u(bbs)=!SAFE;@wipe u(bbs)/BB`%q<bb>;@set u(bbs)=SAFE;@switch/inline %0=BB,{&groups u(bbs)=ldelete(v(groups),%q<bbnum>)},GB,{&%q<gid1>`BOARDS u(gdb)=ldelete(get(u(gdb)/%q<gid1>`BOARDS),%q<bbnum>)}

&INC`REMOVE u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@assert strlen(%2)=@nspemit %#=announce(%q<ann>) ERROR: No posts entered to remove.;@assert words(setr(processed,filterbool(#lambda/if(strlen(setr(post,elements(u(FUN`LISTPOSTS,%q<bb>),\%0))),or(%q<isadmin>,strmatch(get(%q<bb>/\%q<post>`BYDB),%:))),setr(orig,u(FUN`MESSLIST,%#,%q<bb>,%2)))))=@nspemit %#=announce(%q<ann>) ERROR: No posts to remove.;@switch/inline gt(words(setr(cannot,setdiff(%q<processed>,%q<orig>,%b,n))),0)=1,{@nspemit %#=announce(%q<ann>) Could not remove posts: [itemize(%q<cannot>,%b,and,\,)]};@set %q<bb>=!SAFE;@dolist/inline %q<processed>={@wipe %q<bb>/[elements(u(FUN`LISTPOSTS,%q<bb>),%i0)];@nspemit %#=Message %i0 removed from group #%q<bbnum> ([name(%q<bb>)]).};@set %q<bb>=SAFE

&INC`READ u(bbs)=@switch/inline strlen(%1%2)=0,{@include u(bbs)/INC`READ`LISTGROUPS},{@switch/inline and(strlen(%1),strlen(%2))=1,{@include u(bbs)/INC`READ`CHECKPOST},{@switch/inline gt(strlen(%1),0)=1,{@include u(bbs)/INC`READ`LISTMESS},{@nspemit %#=announce(%q<ann>) ERROR: How the hell did we get here?}}}

&FUN`NAME u(bbs)=if(%1,get(u(gdb)/%1`NAME) GBS[if(strlen(%0),%b- [name(%0)])],mudname() BBS[if(strlen(%0),%b- [name(%0)])])

&INC`ALL u(bbs)=@assert words(setr(allunread,filterbool(#lambda/words(setdiff(lattr(\%0/*),get(%#/D`BB`\%0`READ))),u(FUN`VALIDGROUPS`%0,%#,READ))))=@nspemit %#=announce(%q<ann>) There are no Unread messages on the %q<ann>!;@dolist/inline %q<allunread>={@switch/inline %0=BB,{@force/inplace %#=+bbread %i0/u},GB,{@force/inplace %#=+gbread %i0/u}}

&INC`READ`LISTGROUPS u(bbs)=@switch/inline %0=BB,{th setq(allgroups,v(groups),groups,u(FUN`VALIDGROUPS`BB,%#,READ))},GB,{th setq(allgroups,get(u(gdb)/%q<gid1>`BOARDS),groups,u(FUN`VALIDGROUPS`GB,%#,READ))};@nspemit %#=header(u(fun`name,%q<bb>,%q<gid1>))%r[space(7)]Group Name[space(20)]Last Post[space(6)]# of messages;@dolist/inline %q<groups>={@nspemit %#=rjust(pueblize(color(%#,match(%q<allgroups>,%i0),BBS`BOARDNUM,n),+[lcstr(%0)]read [match(%q<allgroups>,%i0)]),2)[center(color(%#,switch(switch(%0,BB,[if(strmatch(lock(%i0/READ),*UNLOCKED*),1,0)]:[if(strmatch(lock(%i0/WRITE),*UNLOCKED*),1,0)]:[u(FUN`CANWRITE`%0,%#,%i0)],GB,[not(hasattr(u(bbs)/BB`%i0`GREAD))]:[not(hasattr(u(bbs)/BB`%i0`GWRITE))]:[u(FUN`CANWRITE`%0,%#,%i0,,%q<gid1>)]),1:1:1,,1:*:1,{(-)},1:*:0,-,*),BBS`BOARDSTATUS,n),5)][ljust(pueblize(color(%#,name(%i0),BBS`BOARDNAME,n),+[lcstr(%0)]read [match(%q<allgroups>,%i0)]),30)][ljust(color(%#,if(setr(time,lmath(max,iter(lattr(%i0/*),strfirstof(get(%i1/%i0`EDITED),get(%i1/%i0`ON))))),timefmt($b $d $Y,%q<time>),None),BBS`LASTPOST,n),20)][rjust(color(%#,nattr(%i0/*),BBS`NUMMESS,n),3)]%b[ljust(color(%#,if(strlen(setdiff(lattr(%i0/*),get(%#/D`BB`%i0`READ))),U),BBS`NUMMESS,n),2)]};@nspemit %#=subheader()%r'*' = restricted[space(5)]'-' = read only[space(5)]'\(-\)' = read only\, but you can write%r[header()]

&INC`READ`LISTMESS u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,READ;@nspemit %#=header(u(fun`name,%q<bb>,%q<gid1>))%r[space(8)]Message[space(28)]Posted[space(8)]By;@dolist/inline setr(posts,u(FUN`LISTPOSTS,%q<bb>))={@nspemit %#=ljust(pueblize(color(%#,%q<bbnum>/[match(%q<posts>,%i0)],BBS`POSTNUM,n),+[lcstr(%0)]read %q<bbnum>/[match(%q<posts>,%i0)]),6)[ljust(u(u(bbs)/FUN`MSGFLAG,%#,%q<bb>,%i0),2)][ljust(color(%#,get(%q<bb>/%i0`HDR),BBS`POSTTITLE,n),35)][ljust(color(%#,timefmt($b $d $Y,lmath(max,firstof(get(%q<bb>/%i0`EDITED),get(%q<bb>/%i0`ON)))),BBS`POSTDATE,n),14)][left(color(%#,if(get(u(bbs)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/%i0`BY))]),default(u(bbs)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/%i0`BY)),BBS`POSTAUTHOR,n),21)]};@nspemit %#=header()

&FUN`MSGFLAG u(bbs)=if(match(get(%0/D`BB`%1`READ),%2),,U)

&INC`READ`CHECKPOST u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,READ;@assert strlen(%2)=@nspemit %#=announce(%q<ann>) ERROR: No posts entered to check.;@assert words(setr(processed,filterbool(#lambda/strlen(elements(u(FUN`LISTPOSTS,%q<bb>),\%0)),u(FUN`MESSLIST,%#,%q<bb>,%2))))=@nspemit %#=announce(%q<ann>) ERROR: Posts not found.;@dolist/inline %q<processed>=@include u(bbs)/INC`READ`SHOWPOST=%0,%i0,%q<bb>

&INC`READ`SHOWPOST u(bbs)=@include u(bbs)/INC`CHECK`FINDPOST=%0,%1,%2;@nspemit %#=header(u(fun`name,%2,%q<gid1>));@nspemit %#=ljust(Message: [color(%#,%q<bbnum>/%q<postnum>,BBS`POSTNUM,n)] [color(%#,\([if(not(u(FUN`CONFIG,autotimeout)),No System Timeout,if(not(u(FUN`CONFIG,%q<bb>,timeout)),No Board Timeout,if(eq(get(%q<bb>/%q<post>`TIMEOUT),0),No Post Timeout,timestring(bound(abs(sub(secs(),add(strfirstof(get(%q<bb>/%q<post>`TIMEOUT),u(FUN`CONFIG,%q<bb>,timeout)),strfirstof(get(%q<bb>/%q<post>`EDITED),get(%q<bb>/%q<post>`ON))))),0)))))]\),BBS`POSTTIMEOUT,n)],35)Posted[space(8)]Author%r[ljust(color(%#,get(%2/%q<post>`HDR),BBS`POSTTITLE,n),35)][ljust(color(%#,timefmt($b $d $Y,lmath(max,firstof(get(%2/%q<post>`EDITED),get(%2/%q<post>`ON)))),BBS`POSTDATE,n),14)][left(color(%#,if(get(u(bbs)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/%q<post>`BY))]),default(u(bbs)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/%q<post>`BY)),BBS`POSTAUTHOR,n),21)]%R[header()];@nspemit %#=get(%q<bb>/%q<post>);@nspemit %#=header();th setq(oldids,setdiff(get(%#/D`BB`%2`READ),lattr(%2/*)));&D`BB`%2`READ %#=setunion(setdiff(get(%#/D`BB`%2`READ),%q<oldids>),%q<post>)

&INC`NEXT u(bbs)=@assert isdbref(setr(bb,first(filterbool(#lambda/strlen(setdiff(lattr(\%0/*),get(%#/D`BB`\%0`READ))),u(FUN`VALIDGROUPS`%0,%#,READ)))))=@nspemit %#=announce(%q<ann>) There are no unread postings on the %q<ann>.;th setq(msg,first(sortkey(#lambda/baseconv(\%0,36,10),setdiff(lattr(%q<bb>/*),get(%#/D`BB`%q<bb>`READ)))));th setr(bbnum,match(u(FUN`LISTGROUPS`%0),%q<bb>));@include u(bbs)/INC`READ`SHOWPOST=%0,match(u(FUN`LISTPOSTS,%q<bb>),%q<msg>),%q<bb>

&INC`NEW u(bbs)=@include u(bbs)/INC`NEXT

&INC`EDIT u(bbs)=@include u(ccs)/INC`JAILCHECK;@switch/inline %1=TEXT,{@include u(bbs)/INC`EDIT`POST},TITLE,{@include u(bbs)/INC`EDIT`POST},{@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(bbs)/INC`CHECK`FINDPOST=%0,%2,%q<bb>;@assert or(%q<isadmin>,isadmin(%#),strmatch(get(%q<bb>/%q<post>`BYDB),%:))=@nspemit %#=announce(%q<ann>) ERROR: You cannot edit that post.;@assert strlen(before(%3,/))=@nspemit %#=announce(%q<ann>) ERROR: No text entered to check for.;&%q<post> %q<bb>=edit(get(%q<bb>/%q<post>),before(%3,/),after(%3,/));&%q<post>`EDITED %q<bb>=secs();@nspemit %#=header()%RMessage %q<bbnum>/%q<postnum> ([name(%q<bb>)]/%q<postnum>) now reads:%R[subheader()];@nspemit %#=get(%q<bb>/%q<post>);@nspemit %#=header()}

&INC`EDIT`POST u(bbs)=@assert hasattr(%#/D`BB`NEW)=@nspemit %#=announce(%q<ann>) ERROR: You don't have a post in progress.;@assert strlen(before(%3,/))=@nspemit %#=announce(%q<ann>) ERROR: No text entered to check for.;&D`BB`NEW`%1 %#=edit(get(%#/D`BB`NEW`%1),before(%3,/),after(%3,/));@nspemit %#=header()%RMessage now reads:%R[subheader(get(%#/D`BB`NEW`TITLE))];@nspemit %#=get(%#/D`BB`NEW`TEXT);@nspemit %#=header()

&INC`LEAVE u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,READ,1;@break default(%#/D`BB`%q<bb>`OMIT,0)=@nspemit %#=announce(%q<ann>) You have already left that board.;&D`BB`%q<bb>`OMIT %#=1;@nspemit %#=announce(%q<ann>) You have removed yourself from the [name(%q<bb>)] board.
&INC`JOIN u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,READ,1;@assert default(%#/D`BB`%q<bb>`OMIT,0)=@nspemit %#=announce(%q<ann>) You are already watching this board.;&D`BB`%q<bb>`OMIT %#=0;@nspemit %#=announce(%q<ann>) You have joined the [name(%q<bb>)] board.

&INC`SCAN u(bbs)=@assert words(setr(groups,filterbool(#lambda/strlen(setdiff(lattr(\%0/*),get(%#/D`BB`\%0`READ))),u(FUN`VALIDGROUPS`%0,%#,READ))))=@nspemit %#=announce(%q<ann>) There are no unread postings on the %q<ann>.;@nspemit %#=header(u(FUN`NAME) - Unread Postings);@dolist/inline %q<groups>={@nspemit %#=pueblize(name(%i0) (#[match(u(FUN`LISTGROUPS`%0),%i0)]),+[lcstr(%0)]read [match(u(FUN`LISTGROUPS`%0),%i0)]): [setr(num,words(setr(unread,sortkey(#lambda/baseconv(\%0,36,10),setdiff(lattr(%i0/*),get(%#/D`BB`%i0`READ))))))] unread ([itemize(iter(%q<unread>,pueblize(match(u(FUN`LISTPOSTS,%i1),%i0),+[lcstr(%0)]read [match(u(FUN`LISTGROUPS`%0),%i1)]/[match(u(FUN`LISTPOSTS,%i1),%i0)])),%b,and,\,)]);th setq(total,add(%q<total>,%q<num>))};@nspemit %#=header(Total Unread: %q<total>)

&INC`LIST u(bbs)=@nspemit %#=header(u(FUN`NAME,%0) Boards)%r[align(36 8 20 8,Available Bulletin Board Groups,Member?,Timeout,Capacity)]%r[subheader()];@dolist/inline u(FUN`VALIDGROUPS`%0,%#,READ,1)={@nspemit %#=align(5 31 -7 20 12,%b[color(%#,match(u(FUN`LISTGROUPS`%0),%i0),BBS`BOARDNUM,n)],color(%#,name(%i0),BBS`BOARDNAME,n),switch(default(%#/D`BB`%i0`OMIT,0),0,Yes,No),if(u(FUN`CONFIG,%i0,timeout),timestring(u(FUN`CONFIG,%i0,timeout)),none),rjust(nattr(%i0/*),4,0)/[switch(strlen(default(u(bbs)/BB`%i0`NEXT,1)),1,1800?,2,1800?,3,1800?,4,1600?,5,1300?,6,1100?,7,1000?,8,900?,9,800?,10,700?,11,600?,12,500?,13,400?)])};@nspemit %#=header()%RTo join boards, type '+[lcstr(%0)]join <board number>'%RTo leave boards, type '+[lcstr(%0)]leave <board number>'%R[header()]






&INC`CATCHUP u(bbs)=@assert strlen(%1)=@nspemit %#=announce(%q<ann>) ERROR: No board entered to catchup.;@switch/inline %1=ALL,{@dolist/inline u(FUN`VALIDGROUPS`%0,%#,READ)={&D`BB`%i0`READ %#=lattr(%i0/*)};@nspemit %#=announce(%q<ann>) All postings on all %q<ann> boards marked as read.},{@dolist/delimit , %1={@include u(bbs)/INC`CHECK`FINDBB=%0,%i0,READ;&D`BB`%q<bb>`READ %#=lattr(%q<bb>/*);@nspemit %#=announce(%q<ann>) All postings on board [name(%q<bb>)] marked as read.}}

&INC`MOVE u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(bbs)/INC`CHECK`FINDPOST=%0,%2,%q<bb>;@assert or(%q<isadmin>,isadmin(%#),strmatch(get(%q<bb>/%q<post>`BYDB),%:))=@nspemit %#=announce(%q<ann>) ERROR: You cannot move that post.;@assert strlen(%3)=@nspemit %#=announce(%q<ann>) ERROR: No destination board entered.;th setq(oldbb,%q<bb>);@include u(bbs)/INC`CHECK`FINDBB=%3,%1,WRITE;@switch/inline %0=BB,{th setq(next,baseconv(default(u(bbs)/BB`%q<bb>`NEXT,1),10,36));&BB`%q<bb>`NEXT u(bbs)=add(default(u(bbs)/BB`%q<bb>`NEXT,1),1)},GB,{};@include u(ccs)/INC`MVTREE=%q<oldbb>,%q<post>,%q<bb>,%q<next>;@nspemit %#=Message '%q<postnum>' moved from Board '[name(%q<oldbb>)]' to Board '[name(%q<bb>)]'

&INC`CONFIG u(bbs)=@switch/inline or(and(strlen(%1),not(valnum(%1))),not(strlen(%1)))=1,{@include u(bbs)/INC`CONFIG`GLOBAL},{@switch/inline and(and(strlen(%1),valnum(%1)),not(valnum(%2)),not(strlen(after(%2,/))))=1,{@include u(bbs)/INC`CONFIG`BOARD},{@include u(bbs)/INC`CONFIG`POST}}

&INC`CONFIG`GLOBAL u(bbs)=@break strmatch(%0,GB)=@nspemit %#=announce(%q<ann>) ERROR: Global Options cannot be changed in Group mode.;@switch/inline strlen(%1)=0,{@include u(bbs)/INC`CONFIG`GLOBAL`SHOW},{@include u(ccs)/INC`PARTIAL=%1,timeout|autotimeout|interval,|,%q<ann>,parameter,parameter;@switch/inline strlen(%3)=0,{@nspemit %#=announce(%q<ann>) %q<parameter> for the %q<ann> cleared.;&BB`%q<parameter> u(bbs)},{@include u(bbs)/INC`CONFIG`GLOBAL`%q<parameter>;@nspemit %#=announce(%q<ann>) %q<parameter> for the %q<ann> set to: %3.;&BB`%q<parameter> u(bbs)=strfirstof(%q<entry>,%3)}}

&INC`CONFIG`GLOBAL`SHOW u(bbs)=@nspemit %#=header(BBS - Global Settings);@nspemit %#=AUTOTIMEOUT: [u(FUN`CONFIG,autotimeout)] - [if(u(FUN`CONFIG,autotimeout),On,Off)];@nspemit %#=TIMEOUT: [u(FUN`CONFIG,timeout)] [if(u(FUN`CONFIG,timeout),- [timestring(u(FUN`CONFIG,timeout))],Off)];@nspemit %#=INTERVAL: [u(FUN`CONFIG,interval)] [if(u(FUN`CONFIG,interval),- [timestring(u(FUN`CONFIG,interval))],Unset! Dangerous!)];@nspemit %#=header()

&INC`CONFIG`GLOBAL`TIMEOUT u(bbs)=@assert strlen(setr(entry,stringsecs(%3)))=@nspemit %#=announce(%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`CONFIG`GLOBAL`INTERVAL u(bbs)=@assert setr(entry,stringsecs(%3))=@nspemit %#=announce(%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`CONFIG`GLOBAL`AUTOTIMEOUT u(bbs)=@assert regmatchi(setr(entry,%3),^0|1$)=@nspemit %#=announce(%q<ann>) ERROR: Entry must be binary truth - 0 (off) or 1 (on).

&INC`CONFIG`BOARD u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@switch/inline strlen(%2)=0,{@include u(bbs)/INC`CONFIG`BOARD`SHOW},{@include u(ccs)/INC`PARTIAL=%2,anonymous|timeout,|,%q<ann>,parameter,parameter;@switch/inline strlen(%3)=0,{@nspemit %#=announce(%q<ann>) %q<parameter> for Board [name(%q<bb>)] cleared.;&BB`%q<bb>`%q<parameter> u(bbs)},{@include u(bbs)/INC`CONFIG`GLOBAL`%q<parameter>;@nspemit %#=announce(%q<ann>) %q<parameter> for Board [name(%q<bb>)] set to: %3.;&BB`%q<bb>`%q<parameter> u(bbs)=strfirstof(%q<entry>,%3)}}

&INC`CONFIG`BOARD`SHOW u(bbs)=@nspemit %#=header(%q<ann> - [name(%q<bb>)] Board Settings);@nspemit %#=TIMEOUT: [strfirstof(u(FUN`CONFIG,%q<bb>,timeout),0)] [if(u(FUN`CONFIG,%q<bb>,timeout),- [timestring(u(FUN`CONFIG,%q<bb>,timeout))])] [if(strlen(get(u(bbs)/BB`%q<bb>`TIMEOUT)),- Using Board Setting,- Using Global Default)];@nspemit %#=ANONYMOUS: [u(FUN`CONFIG,%q<bb>,anonymous)] [if(u(FUN`CONFIG,%q<bb>,anonymous),- [get(u(bbs)/BB`%q<bb>`ANONYMOUS)])];@nspemit %#=header()

&INC`CONFIG`BOARD`TIMEOUT u(bbs)=@assert strlen(setr(entry,stringsecs(%3)))=@nspemit %#=announce(%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`CONFIG`BOARD`ANONYMOUS u(bbs)=@assert strlen(%3)=@nspemit %#=announce(%q<ann>) ERROR: Anonymous entry must be a string.

&INC`CONFIG`POST u(bbs)=@switch/inline strlen(after(%2,/))=0,{@include u(bbs)/INC`CONFIG`GLOBAL`POST},{@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(bbs)/INC`CHECK`FINDPOST=%0,before(%2,/),%q<bb>;@include u(ccs)/INC`PARTIAL=after(%2,/),timeout,|,%q<ann>,parameter,parameter;@switch/inline strlen(%3)=0,{@nspemit %#=announce(%q<ann>) %q<parameter> for the %q<ann> cleared.;&%q<post>`%q<parameter> %q<bb>;&%q<post>`EDITED %q<bb>=secs()},{@include u(bbs)/INC`CONFIG`GLOBAL`%q<parameter>;@nspemit %#=announce(%q<ann>) %q<parameter> for Board [name(%q<bb>)]'s Post %q<postnum> set to: %3.;&%q<post>`%q<parameter> %q<bb>=strfirstof(%q<entry>,%3)};&%q<post>`EDITED %q<bb>=secs()}

&INC`CONFIG`POST`SHOW u(bbs)=@nspemit %#=header(%q<ann> - [name(%q<bb>)] - Message %q<postnum> Settings);@nspemit %#=TIMEOUT: [strfistof(get(%q<bb>/%q<post>`TIMEOUT),0)] [if(get(%q<bb>/%q<post>`TIMEOUT),- [timestring(get(%q<bb>/%q<post>`TIMEOUT))])];@nspemit %#=header()

&INC`CONFIG`POST`TIMEOUT u(bbs)=@assert strlen(setr(entry,stringsecs(%3)))=@nspemit %#=announce(%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`TIMEOUT u(bbs)=@assert u(FUn`CONFIG,Autotimeout)=@nspemit %#=announce(%q<ann>) Timeouts are currently disabled.;@switch/inline strlen(%1)=0,{@include u(bbs)/INC`LIST},{@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@switch/inline strlen(%2)=0,{@assert words(setr(processed,filterbool(#lambda/if(strlen(setr(post,elements(u(FUN`LISTPOSTS,%q<bb>),\%0))),or(%q<isadmin>,strmatch(get(%q<bb>/\%q<post>`BYDB),%:))),setr(orig,u(FUN`MESSLIST,%#,%q<bb>,%2)))))=@nspemit %#=announce(%q<ann>) ERROR: No posts to change timeouts.;@switch/inline gt(words(setr(cannot,setdiff(%q<processed>,%q<orig>,%b,n))),0)=1,{@nspemit %#=announce(%q<ann>) Could not change timeout for posts: [itemize(%q<cannot>,%b,and,\,)]};@assert strlen(%3)=@nspemit %#=announce(%q<ann>) ERROR: No new timeout entered!;@switch/inline %3=0,{@assert %q<isadmin>=@nspemit %#=announce(%q<ann>) Only admin may set a timeout of 0.};@include u(bbs)/INC`CONFIG`POST`TIMEOUT;@switch/inline %q<isadmin>=0,{@break gt(%q<entry>,u(FUN`CONFIG,%q<bb>,Timeout))=@nspemit %#=announce(%q<ann>) ERROR: Cannot set a post's timeout greater than a board's timeout.};@dolist/inline/nobreak %q<processed>={@switch/inline %q<isadmin>=0,{@break eq(get(%q<bb>/[elements(u(FUN`LISTPOSTS,%q<bb>),%i0)]),0)=@nspemit %#=announce(%q<ann>) ERROR: Only admin may apply timeouts to static posts.};&[elements(u(FUN`LISTPOSTS,%q<bb>),%i0)]`TIMEOUT %q<bb>=%q<entry>;@nspemit %#=announce(%q<ann>) Timeout for %q<bbnum>/%i0 set to [timestring(%q<entry>)]!}},{@assert u(FUN`CONFIG,%q<bb>,Timeout)=@nspemit %#=announce(%q<ann>) That board has no timeouts to adjust.;@nspemit %#=header(u(fun`name,%q<bb>,%q<gid1>) - Timeouts)%r[space(8)]Message[space(28)]Timeout[space(7)]By;@dolist/inline setr(posts,u(FUN`LISTPOSTS,%q<bb>))={@nspemit %#=ljust(pueblize(%q<bbnum>/[match(%q<posts>,%i0)],+[lcstr(%0)]read %q<bbnum>/[match(%q<posts>,%i0)]),6)[ljust(u(u(bbs)/FUN`MSGFLAG,%#,%q<bb>,%i0),2)][ljust(get(%q<bb>/%i0`HDR),35)][ljust(timestring(bound(abs(sub(secs(),add(strfirstof(get(%q<bb>/%q<post>`TIMEOUT),u(FUN`CONFIG,%q<bb>,timeout)),strfirstof(get(%q<bb>/%q<post>`EDITED),get(%q<bb>/%q<post>`ON))))),0)),14)][left(if(get(u(bbs)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/%i0`BY))]),default(u(bbs)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/%i0`BY)),21)]};@nspemit %#=header()}}

&STARTUP u(bbs)=@trigger u(bbs)/TRG`TIMEOUT

&TRG`TIMEOUT u(bbs)=@switch/inline u(FUN`CONFIG,autotimeout)=1,{@set u(bbs)=!SAFE;@dolist lattr(u(bbs)/BB`#*)={@assert isdbref(last(%i0,`))=@wipe u(bbs)/%i0;@switch/inline gt(u(FUN`CONFIG,last(%i0,`),timeout),0)=1,{@set last(%i0,`)=!SAFE;@dolist/inline lattr(last(%i0,`)/*)={@switch/inline gt(setr(timeoutsecs,strfirstof(get(last(%i1,`)/%i0`TIMEOUT),u(FUN`CONFIG,last(%i1,`),timeout))),0)=1,{@switch/inline gt(secs(),add(%q<timeoutsecs>,strfirstof(get(last(%i1,`)/%i0`EDITED),get(last(%i1,`)/%i0`ON))))=1,{@wipe last(%i1,`)/%i0}}};@set last(%i0,`)=SAFE}};@set u(bbs)=SAFE};@wait u(FUN`CONFIG,interval)=@trigger u(bbs)/TRG`TIMEOUT

&INC`LOCK u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(ccs)/INC`PARTIAL=%2,read|write,|,%q<ann>,lock,lock;@switch/inline %0=BB,{@assert and(u(kls),u(kdb))=@nspemit %#=announce(%q<ann>) ERROR: Key System not installed, cannot continue.;@assert strlen(%3)=@nspemit %#=announce(%q<ann>) ERROR: No lock string entered. See [pueblize(+help +key)] for more information.;@assert eq(words(setr(choices,setdiff(%3,u(u(kls)/FUN`LISTLOCKS)))),0)=@nspemit %#=announce(KEY) ERROR: Following lock types not found: [itemize(%q<choices>,|,and,\,)];@lock/user:%q<lock> %q<bb>=iter(%3,@[u(kdb)]/%i0,%B,|);@lset %q<bb>/%q<lock>=v;@nspemit %#=announce(%q<ann>) You set the %q<lock> Lock on [name(%q<bb>)] to: %3},GB,{@assert strlen(%3)=@nspemit %#=announce(%q<ann>) ERROR: No lock rank entered.;@assert and(gte(%3,0),isint(%3))=@nspemit %#=announce(%q<ann>) ERROR: Ranks must be whole numbers 0 or greater.;&BB`%q<bb>`G%q<lock> u(bbs)=%3;@nspemit %#=announce(%q<ann>) You set the %q<lock> Lock on [name(%q<bb>)] to: %3}

&INC`UNLOCK u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(ccs)/INC`PARTIAL=%2,read|write,|,%q<ann>,lock,lock;@switch/inline %0=BB,{@unlock/user:%q<lock> %q<bb>;@nspemit %#=announce(%q<ann>) You release the %q<lock> Lock on [name(%q<bb>)]},GB,{&BB`%q<bb>`G%q<lock> u(bbs);@nspemit %#=announce(%q<ann>) You release the %q<lock> Lock on [name(%q<bb>)]}

&INC`CONVERT u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@assert strlen(%3)=@nspemit %#=announce(%q<ann>) ERROR: No board entered to convert.;@assert isdbref(%3)=@nspemit %#=announce(%q<ann>) ERROR: That is not a DBREF.;@switch/inline t(%2)=0,{@assert hasattr(%3/MESS_LST)=@nspemit %#=announce(%q<ann>) ERROR: That is not a Myrddin BBS board object.;@include u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)] This will attempt to convert the old Myrddin board to the new format. This will be messy if it fails! Have you done a backup? Enter the same command again within ten seconds to verify!},BB CONVERT %q<bb> %3};@dolist/inline setr(list,sortkey(#lambda/baseconv(\%0,36,10),get(%3/MESS_LST)))={@switch/inline %0=BB,{th setq(next,baseconv(default(u(bbs)/BB`%q<bb>`NEXT,1),10,36));&BB`%q<bb>`NEXT u(bbs)=add(default(u(bbs)/BB`%q<bb>`NEXT,1),1)},GB,{};th setq(head,get(%3/HDR_%i0));&%q<next> %q<bb>=get(%3/BDY_%i0);&%q<next>`BY %q<bb>=elements(%q<head>,3,|);&%q<next>`BYDB %q<bb>=objid(elements(%q<head>,4,|));&%q<next>`ON %q<bb>=convtime(elements(%q<head>,2,|));&%q<next>`HDR %q<bb>=elements(%q<head>,1,|);&%q<next>`TIMEOUT %q<bb>=if(u(FUN`CONFIG,%q<bb>,TIMEOUT),u(FUN`CONFIG,%q<bb>,TIMEOUT),0)};@nspemit %#=announce(%q<ann>) Conversion of [words(%q<list>)] messages (hopefully) complete!

&INC`ORDER u(bbs)=@assert setr(num,words(setr(list,switch(%0,BB,v(groups),GB,))))=@nspemit %#=announce(%q<ann>) ERROR: No boards to re-order.;@assert strlen(%1)=@nspemit %#=announce(%q<ann>) ERROR: New order field empty.;@assert eq(%q<num>,words(%1))=@nspemit %#=announce(%q<ann>) ERROR: new order field should not contain more than %q<num> numbers.;@break words(setdiff(lnum(1,%q<num>),%1))=@nspemit %#=announce(%q<ann>) ERROR: Some numbers in that list don't match with the original.;@assert strmatch(lnum(1,%q<num>),sort(%1))=@nspemit %#=announce(%q<ann>) ERROR: At least one number was duplicated in the new order field.;th setq(newlist,elements(%q<list>,%1));@switch/inline %0=BB,{&groups u(bbs)=%q<newlist>},GB,{};@nspemit %#=announce(%q<ann>) The board order was changed!

&INC`RENAME u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@assert strlen(%3)=@nspemit %#=announce(%q<ann>) ERROR: New name field empty.;@assert valid(name,%3)=@nspemit %#=announce(%q<ann>) ERROR: Not a suitable object name. Please try something simpler - perhaps without fancy characters?;@nspemit %#=announce(%q<ann>) You renamed Board [name(%q<bb>)] to: %3;@name %q<bb>=%3

&INC`IMPORT u(bbs)=@assert strlen(%1)=@nspemit %#=announce(%q<ann>) ERROR: No BBPOCKET entered to convert.;@assert isdbref(%1)=@nspemit %#=announce(%q<ann>) ERROR: That is not an object.;@assert and(hasattr(%1/groups),hasattr(%1/version))=@nspemit %#=announce(%q<ann>) That is not a Myrddin BBS BBpocket!;@include u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)] This will attempt to import all boards in sequence from an old Myrddin BBS. The imported boards will be APPENDED to the board list. This could wreak havoc if something goes wrong. Make sure you have a backup! Please enter the same command again within ten seconds to verify.},%q<ann> IMPORT %1,%q<ann>;@dolist/inline filterbool(#lambda/isdbref(\%0),get(%1/groups))={@include u(bbs)/INC`NEWGROUP=%0,name(%i0);@switch/inline %0=BB,{th setq(bbnum,words(v(groups)))},GB,{th setq(bbnum,words(get(u(gdb)/%q<gid1>`BOARDS)))};@include u(bbs)/INC`CONVERT=%0,%q<bbnum>,1,%i0}

&INC`SEARCH u(bbs)=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(ccs)/INC`CHECKPC=%3,1,%q<ann>;@assert words(setr(posts,iter(grepi(%q<bb>,*`BYDB,%q<t1objid>),first(%i0,`))))=@nspemit %#=announce(%q<ann>) No posts by %q<t1name> on [name(%q<bb>)].;@nspemit %#=header(BBS - [name(%q<bb>)])%r[space(8)]Message[space(28)]Posted[space(8)]By;@dolist/inline %q<posts>={@nspemit %#=ljust(pueblize(%q<bbnum>/[match(u(FUN`LISTPOSTS,%q<bb>),%i0)],+[lcstr(%0)]read %q<bbnum>/[match(u(FUN`LISTPOSTS,%q<bb>),%i0)]),6)[ljust(u(u(bbs)/FUN`MSGFLAG,%#,%q<bb>,%i0),2)][ljust(get(%q<bb>/%i0`HDR),35)][ljust(timefmt($b $d $Y,lmath(max,firstof(get(%q<bb>/%i0`EDITED),get(%q<bb>/%i0`ON)))),14)][left(if(get(u(bbs)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/%i0`BY))]),default(u(bbs)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/%i0`BY)),21)]};@nspemit %#=header()

th attrib_set(u(cco)/VAR`CATEGORIES,setunion(get(u(cco)/VAR`CATEGORIES),BBS,|,|))
&VAR`CATEGORIES`BBS u(cco)=BOARDNUM|BOARDNAME|BOARDSTATUS|POSTNAME|POSTNUM|LASTPOST|NUMMESS|POSTAUTHOR|POSTDATE|POSTTITLE|POSTTIMEOUT