@switch/inline isdbref(u(bbs))=0,{@tel create(Bulletin Board System <BBS>)=globalroom()}
&bbs [u(coi)]=locate(globalroom(),Bulletin Board System <BBS>,Ti)
@wait 0=@parent [u(bbs)]=[u(coi)]
@set [u(bbs)]=INHERIT SIDEFX !NO_COMMAND

&CMD`BB [u(bbs)]=$(?s)^\+(bb|gb)(\\S+)(?\: +(.+?))?(?\:/(.+?))?(?\:=(.*))?$:@include u(bbs)/INC`INIT`%1;@include u(ccs)/INC`PARTIAL=%2,setunion(setunion(v(VAR`BB`PLAYCOMMS),if(petr(isadmin,switch(%1,bb,isadmin(%#),gb,u(u(gso)/FUN`GRPAUTH,%#,%q<gid1>,BBADMIN))),v(VAR`BB`ADMINCOMMS)),|,|),if(hasflag(%#,WIZARD),v(VAR`BB`WIZCOMMS)),|,|),|,petr(ann,ucstr(%1S)),command,command;@include u(bbs)/INC`[strfirstof(%q<command>,WRITE)]=ucstr(%1),%3,%4,%5
@set [u(bbs)]/CMD`BB=regexp

&CMD`BBWRITE [u(bbs)]=$(?s)^\+(bb|gb)(?\:write)?(?\: +(.*))?$:th petq(ann,ucstr(%1S));@include u(bbs)/INC`INIT`%1;@include u(bbs)/INC`WRITE=ucstr(%1),%2
@set [u(bbs)]/CMD`BBWRITE=regexp

&VAR`BB`PLAYCOMMS [u(bbs)]=READ|POST|REMOVE|SCAN|NEXT|EDIT|JOIN|LEAVE|LIST|PROOF|TOSS|CATCHUP|SEARCH|NEW|TIMEOUT|ALL|CHECK
&VAR`BB`ADMINCOMMS [u(bbs)]=NEWGROUP|CLEARGROUP|CONFIG|TIMEOUT|LOCK|UNLOCK|ORDER|RENAME
&VAR`BB`WIZCOMMS [u(bbs)]=IMPORT|CONVERT

&INC`INIT`GB [u(bbs)]=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;th petq(gdb,u(gdb))

&FUN`VALIDGROUPS`BB [u(bbs)]=filter(#lambda/u(FUN`CAN%1`BB,%0,[lit(%0)],%2),u(FUN`LISTGROUPS`BB))
&FUN`BBADMIN`BB [u(bbs)]=isadmin(%0)
&FUN`CANREAD`BB [u(bbs)]=and(or(elock(%1/UseLock,%0),u(FUN`BBADMIN`BB,%0)),or(%2,not(default(%0/D`BB`%1`OMIT,0))))
&FUN`CANWRITE`BB [u(bbs)]=and(or(elock(%1/UserLock,%0),u(FUN`BBADMIN`BB,%0)),or(%2,not(default(%0/D`BB`%1`OMIT,0))))

&FUN`VALIDGROUPS`GB [u(bbs)]=filter(#lambda/u(FUN`CAN%1`GB,%0,[lit(%0)],%2,%q<gid1>),u(FUN`LISTGROUPS`GB))
&FUN`BBADMIN`GB [u(bbs)]=u(u(gso)/FUN`GRPPERM,objid(%0),%1,BBADMIN)
&FUN`CANREAD`GB [u(bbs)]=and(or(u(FUN`BBADMIN`GB,%0,%3),if(strlen(get(u(bbs)/BB`%1`GREAD)),lte(u(u(gso)/FUN`GETRANK,%3,objid(%0)),get(u(bbs)/BB`%1`GREAD)),1)),or(%2,not(default(%0/D`BB`%1`OMIT,0))))
&FUN`CANWRITE`GB [u(bbs)]=and(or(u(FUN`BBADMIN`GB,%0,%3),if(strlen(get(u(bbs)/BB`%1`GWRITE)),lte(u(u(gso)/FUN`GETRANK,%3,objid(%0)),get(u(bbs)/BB`%1`GWRITE)),1)),or(%2,not(default(%0/D`BB`%1`OMIT,0))))

&INC`CHECK [u(bbs)]=@switch/inline t(default(%#/D`BB`CHECK,0))=

&FUN`LISTGROUPS`BB [u(bbs)]=filter(#lambda/isdbref([lit(%0)]),v(groups))
&FUN`LISTGROUPS`GB [u(bbs)]=filter(#lambda/isdbref([lit(%0)]),get(%q<gdb>/%q<gid1>`BOARDS))

&INC`CHECK`FINDBB [u(bbs)]=@assert/inline strlen(%1)=@pemit %#=announce(%q<ann>) ERROR: You must enter a board to use!;@switch/inline 1=valnum(%1),{th petq(bbnum,%1)},regmatch(%1,^(#\\d+)$),th petq(bbnum,match(u(FUN`LISTGROUPS`%0),%1)),{@include u(ccs)/INC`PARTIAL=%1,petr(names,iter(petr(valgroups,u(FUN`VALIDGROUPS`%0,%#,%2,%3)),name(##),%b,|)),|,%q<ann>,board,board;th petq(bbnum,match(u(FUN`LISTGROUPS`%0),elements(%q<valgroups>,match(%q<names>,%q<board>,|))))};@assert/inline valnum(%q<bbnum>)=@pemit %#=announce(%q<ann>) ERROR: Board find error;@assert/inline match(u(FUN`VALIDGROUPS`%0,%#,%2,%3),petr(bb,elements(u(FUN`LISTGROUPS`%0),%q<bbnum>)))=@pemit %#=announce(%q<ann>) ERROR: You are not a [ucstr(%2)] member of that board.;@assert/inline isdbref(%q<bb>)=@pemit %#=announce(%q<ann>) ERROR: Board not found.

&INC`CHECK`FINDPOST [u(bbs)]=@assert/inline strlen(%1)=@pemit %#=announce(%q<ann>) ERROR: No post entered!;@assert/inline valnum(%1)=@pemit %#=announce(%q<ann>) ERROR: Posts must be addressed by their post #s!;@assert/inline strlen(petr(post,elements(u(FUN`LISTPOSTS,%2),petr(postnum,%1))))=@pemit %#=announce(%q<ann>) ERROR: Post not found.

&FUN`LISTPOSTS [u(bbs)]=sortkey(#lambda/baseconv([lit(elements(%0,2,`))],36,10),lattr(%0/^POST`%\w+$,,,1))

&FUN`MESSLIST [u(bbs)]=setunion(iter(%2,switch(1,valnum(%i0),%i0,regmatchi(%i0,^%\d+-%\d+$),petq(num1,abs(before(%i0,-)))[petq(num2,abs(after(%i0,-)))][petq(ord,sort(%q<num1> %q<num2>))][lnum(first(%q<ord>),last(%q<ord>))],strmatch(%i0,u),iter(setdiff(lattr(%1/^POST`%\w+$,,,1),get(%0/D`BB`%1`READ)),match(u(FUN`LISTPOSTS,%1),%i0)),0),\,,%B),,)

&FUN`CONFIG [u(bbs)]=if(and(strlen(%0),isdbref(%0)),u(FUN`CONFIG`BB`%1,%0),if(strlen(%0),u(FUN`CONFIG`GLOBAL`%0)))

&FUN`CONFIG`GLOBAL`AUTOTIMEOUT [u(bbs)]=default(u(bbs)/BB`AUTOTIMEOUT,0)
&FUN`CONFIG`GLOBAL`TIMEOUT [u(bbs)]=default(u(bbs)/BB`TIMEOUT,mul(60,60,24,30))
&FUN`CONFIG`GLOBAL`INTERVAL [u(bbs)]=default(u(bbs)/BB`INTERVAL,mul(60,60,24))
&FUN`CONFIG`BB`TIMEOUT [u(bbs)]=strfirstof(get(u(bbs)/BB`%0`TIMEOUT),u(FUN`CONFIG,timeout))
&FUN`CONFIG`BB`ANONYMOUS [u(bbs)]=t(strlen(get(u(bbs)/BB`%0`ANONYMOUS)))

&INC`POST [u(bbs)]=@switch/inline strlen(%1)=0,{@assert/inline hasattr(%#/D`BB`NEW)=@pemit %#=announce(%q<ann>) ERROR: You don't have a post in progress.;th petq(gid1,get(%#/D`BB`NEW`GID));@include u(bbs)/INC`POST`MAKEMESS=%#,get(%#/D`BB`NEW`BBNUM),get(%#/D`BB`NEW`BB),get(%#/D`BB`NEW`TITLE),get(%#/D`BB`NEW`TEXT),get(%#/D`BB`NEW`TYPE);@wipe %#/D`BB`NEW;@wipe %#/D`BB`NEW`*},{@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@assert/inline strlen(%2)=@pemit %#=announce(%q<ann>) ERROR: Title field empty!;@switch/inline strlen(%3)=0,{@include u(bbs)/INC`POST`BEGIN},{@include u(bbs)/INC`POST`MAKEMESS=%#,%q<bbnum>,%q<bb>,left(%2,34),%3,%0}}

&INC`POST`BEGIN [u(bbs)]=@break/inline hasattr(%#/D`BB`NEW)=@pemit %#=announce(%q<ann>) ERROR: You already have a post in progress. use +bb <text> to add to it, +bbproof to view it, or +bbpost to post it. Alternatively, +bbtoss to trash it.;&D`BB`NEW %#=1;&D`BB`NEW`BBNUM %#=%q<bbnum>;&D`BB`NEW`BB %#=%q<bb>;&D`BB`NEW`TITLE %#=%2;&D`BB`NEW`TYPE %#=%0;&D`BB`NEW`GID %#=%q<gid1>;@pemit %#=You start your posting to Board #%q<bbnum> ([name(%q<bb>)])%RYou can now compose the body of the post by using '+bbwrite <text>'%Ror '+bb <text>'. When you are finished, type '+bbpost' to send it. See '+help bbs' for help!

&INC`WRITE [u(bbs)]=@assert/inline hasattr(%#/D`BB`NEW)=@pemit %#=announce(%q<ann>) ERROR: You don't have a post in progress.;@break/inline eq(strlen(get(%#/D`BB`NEW`TEXT)),petr(max,strlen(lnum(1,9999))))=@pemit %#=announce(%q<ann>) ERROR: Your post has already reached %q<max> characters - all that will fit. You may not add more text.;@assert/inline strlen(%1)=@pemit %#=announce(%q<ann>) ERROR: Nothing entered to write. Use +bbproof to see what you've written!;&D`BB`NEW`TEXT %#=trim(cat(trim(get(%#/D`BB`NEW`TEXT)),trim(%1)));@pemit %#=announce(%q<ann>) Text added to bbpost. Your post has reached [strlen(get(%#/D`BB`NEW`TEXT))] of [strlen(lnum(1,9999))] max characters!

&INC`TOSS [u(bbs)]=@assert/inline hasattr(%#/D`BB`NEW)=@pemit %#=announce(%q<ann>) ERROR: You don't have a post in progress.;@wipe %#/D`BB`NEW;@wipe %#/D`BB`NEW`*;@pemit %#=announce(%q<ann>) Post discarded.

&INC`PROOF [u(bbs)]=@assert/inline hasattr(%#/D`BB`NEW)=@pemit %#=announce(%q<ann>) ERROR: You don't have a post in progress.;@pemit %#=header(get(%#/D`BB`NEW`TITLE));@pemit %#=get(%#/D`BB`NEW`TEXT);@pemit %#=header(Length: [strlen(get(%#/D`BB`NEW`TEXT))] Characters)

&INC`POST`MAKEMESS [u(bbs)]=th petq(next,baseconv(default(u(bbs)/BB`%2`NEXT,1),10,36));th petq(bbs,u(bbs));&BB`%2`NEXT %q<bbs>=add(default(u(bbs)/BB`%2`NEXT,1),1);&POST`%q<next> %2=%4;&POST`%q<next>`BY %2=name(%0);&POST`%q<next>`BYDB %2=%0;&POST`%q<next>`ON %2=secs();&POST`%q<next>`HDR %2=%3;&POST`%q<next>`TIMEOUT %2=if(u(FUN`CONFIG,%2,TIMEOUT),u(FUN`CONFIG,%2,TIMEOUT),0);@include u(bbs)/INC`ALERT=%5,%1,%2,{(New [ucstr(%5)] Message ([pueblize(petr(messnum,%1/[first(lattr(%2/^POST`%\w+$,,l,1))]),+[lcstr(%5)]read %q<messnum>)]) posted to '[name(%2)]' by %n: %3)}

&INC`ALERT [u(bbs)]=@switch/inline %0=BB,{th petq(members,filter(#lambda/isdbref([lit(%0)]),iter(setunion(lwho(),),if(u(FUN`CANREAD`%0,%i0,%2,,%q<isadmin>),%i0,x))))},GB,{th petq(members,filter(#lambda/isgroupmember([lit(%0)],%q<gid1>),setunion(lwho(),)))};@dolist/inline %q<members>={@pemit ##=%3}
@@ %0 - Mode, GB or BB. %1 - Board number. %2 - Board DBREF. %3 - Message.

&INC`NEWGROUP [u(bbs)]=@assert/inline strlen(%1%2)=@pemit %#=announce(%q<ann>) ERROR: No name entered for the new board!;@assert/inline valid(name,%1%2)=@pemit %#=announce(%q<ann>) ERROR: That is not a suitable name for a board.;@tel petr(bb,create(%1%2))=switch(%0,BB,u(bbs),GB,%q<gdb>);@switch/inline %0=BB,{&groups [u(bbs)]=trim(cat(v(groups),%q<bb>))},GB,{&%q<gid1>`BOARDS %q<gdb>=trim(cat(get(%q<gdb>/%q<gid1>`BOARDS),%q<bb>))};@set %q<bb>=SAFE;@pemit %#=announce(%q<ann>) Board '%1%2' created!

&INC`CLEARGROUP [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)] Deleting %q<ann> Board %q<bbnum> will also delete all messages. This cannot be undone! Please enter the same command again within 10 seconds to verify.},CLEARGROUP %0 %1,%q<ann>;@set %q<bb>=!SAFE;@destroy %q<bb>;@set [u(bbs)]=!SAFE;@wipe u(bbs)/BB`%q<bb>;@set [u(bbs)]=SAFE;@switch/inline %0=BB,{&groups [u(bbs)]=ldelete(v(groups),%q<bbnum>)},GB,{&%q<gid1>`BOARDS %q<gdb>=ldelete(get(%q<gdb>/%q<gid1>`BOARDS),%q<bbnum>)};@pemit %#=announce(%q<ann>) %q<ann> Board %q<bbnum> deleted!

&INC`REMOVE [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@assert/inline strlen(%2)=@pemit %#=announce(%q<ann>) ERROR: No posts entered to remove.;@assert/inline words(petr(processed,filter(#lambda/if(strlen(petr(post,elements(u(FUN`LISTPOSTS,%q<bb>),[lit(%0)]))),or(%q<isadmin>,strmatch(xget(%q<bb>,\%q<post>`BYDB),%#))),petr(orig,u(FUN`MESSLIST,%#,%q<bb>,%2)))))=@pemit %#=announce(%q<ann>) ERROR: No posts to remove.;@switch/inline gt(words(petr(cannot,setdiff(%q<processed>,%q<orig>,%b,n))),0)=1,{@pemit %#=announce(%q<ann>) Could not remove posts: [itemize(%q<cannot>,%b,and,\,)]};@set %q<bb>=!SAFE;th petq(origlist,u(FUN`LISTPOSTS,%q<bb>));@dolist/inline %q<processed>={@wipe %q<bb>/[elements(%q<origlist>,##)];@wipe %q<bb>/[elements(%q<origlist>,##)]`*;@pemit %#=Message ## removed from group #%q<bbnum> ([name(%q<bb>)]).};@set %q<bb>=SAFE

&INC`READ [u(bbs)]=@switch/inline strlen(%1%2)=0,{@include u(bbs)/INC`READ`LISTGROUPS},{@switch/inline and(strlen(%1),strlen(%2))=1,{@include u(bbs)/INC`READ`CHECKPOST},{@switch/inline gt(strlen(%1),0)=1,{@include u(bbs)/INC`READ`LISTMESS},{@pemit %#=announce(%q<ann>) ERROR: How the hell did we get here?}}}

&FUN`NAME [u(bbs)]=if(%1,get(%q<gdb>/%1`NAME) GBS[if(strlen(%0),%b- [name(%0)])],mudname() BBS[if(strlen(%0),%b- [name(%0)])])

&INC`ALL [u(bbs)]=@assert/inline words(petr(allunread,filter(#lambda/isdbref([lit(%0)]),iter(u(FUN`VALIDGROUPS`%0,%#,READ),if(strlen(setdiff(lattr(%i0/^POST`%\w+$,,,1),get(%#/D`BB`%i0`READ))),%i0,x)))))=@pemit %#=announce(%q<ann>) There are no Unread messages on the %q<ann>!;@dolist/inline %q<allunread>={@switch/inline %0=BB,{@sudo %#=+bbread ##/u},GB,{@sudo %#=+gbread ##/u}}

&INC`READ`LISTGROUPS [u(bbs)]=@switch/inline %0=BB,{th petq(allgroups,v(groups))[petq(groups,u(FUN`VALIDGROUPS`BB,%#,READ))]},GB,{th petq(allgroups,get(%q<gdb>/%q<gid1>`BOARDS))[petq(groups,u(FUN`VALIDGROUPS`GB,%#,READ))]};@pemit %#=header(u(FUN`NAME))%r[space(7)]Group Name[space(20)]Last Post[space(6)]# of messages;@dolist/inline %q<groups>={@pemit %#=rjust(pueblize(color(%#,match(%q<allgroups>,##),BBS`BOARDNUM,n),+[lcstr(%0)]read [match(%q<allgroups>,##)]),2)[center(color(%#,switch(switch(%0,BB,[if(not(strlen(lock(##/USELOCK))),1,0)]:[if(not(strlen(lock(##/USERLOCK))),1,0)]:[elock(##/USERLOCK,%#)],GB,[not(hasattr(u(bbs)/BB`##`GREAD))]:[not(hasattr(u(bbs)/BB`##`GWRITE))]:[t(match(u(FUN`VALIDGROUPS`GB,%#,WRITE),##))]),1:1:1,,1:*:1,{(-)},1:*:0,-,*),BBS`BOARDSTATUS,n),5)][ljust(pueblize(color(%#,name(##),BBS`BOARDNAME,n),+[lcstr(%0)]read [match(%q<allgroups>,##)]),30)][ljust(color(%#,if(petr(time,strfunc(max,iter(lattr(##/^POST`%\w+$,,,1),strfirstof(get(##/%i0`EDITED),get(##/%i0`ON))))),ptimefmt($b $d $Y,%q<time>),None),BBS`LASTPOST,n),20)][rjust(color(%#,first(lattr(##/^POST`%\w+$,,l,1)),BBS`NUMMESS,n),3)]%b[ljust(color(%#,if(strlen(setdiff(lattr(##/^POST`%\w+$,,,1),get(%#/D`BB`##`READ))),U),BBS`NUMMESS,n),2)]};@pemit %#=subheader()%r'*' = restricted[space(5)]'-' = read only[space(5)]'\(-\)' = read only\, but you can write%r[header()]

&INC`READ`LISTMESS [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,READ;@pemit %#=header(u(fun`name,%q<bb>,%q<gid1>))%r[space(8)]Message[space(28)]Posted[space(8)]By;@dolist/inline petr(posts,u(FUN`LISTPOSTS,%q<bb>))={@pemit %#=ljust(pueblize(color(%#,%q<bbnum>/[match(%q<posts>,##)],BBS`POSTNUM,n),+[lcstr(%0)]read %q<bbnum>/[match(%q<posts>,##)]),6)[ljust(u(u(bbs)/FUN`MSGFLAG,%#,%q<bb>,##),2)][ljust(color(%#,get(%q<bb>/##`HDR),BBS`POSTTITLE,n),35)][ljust(color(%#,ptimefmt($b $d $Y,strfunc(max,firstof(get(%q<bb>/##`EDITED),get(%q<bb>/##`ON)))),BBS`POSTDATE,n),14)][left(color(%#,if(get(u(bbs)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/##`BY))]),default(u(bbs)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/##`BY)),BBS`POSTAUTHOR,n),21)]};@pemit %#=header()

&FUN`MSGFLAG [u(bbs)]=if(match(get(%0/D`BB`%1`READ),%2),,U)

&INC`READ`CHECKPOST [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,READ;@assert/inline strlen(%2)=@pemit %#=announce(%q<ann>) ERROR: No posts entered to check.;@assert/inline words(petr(processed,u(FUN`MESSLIST,%#,%q<bb>,%2)))=@pemit %#=announce(%q<ann>) ERROR: Posts not found.;@dolist/inline %q<processed>=@include u(bbs)/INC`READ`SHOWPOST=%0,##,%q<bb>

&INC`READ`SHOWPOST [u(bbs)]=@include u(bbs)/INC`CHECK`FINDPOST=%0,%1,%2;@pemit %#=header(u(fun`name,%2,%q<gid1>));@pemit %#=ljust(Message: [color(%#,%q<bbnum>/%q<postnum>,BBS`POSTNUM,n)] [color(%#,\([if(not(u(FUN`CONFIG,autotimeout)),No System Timeout,if(not(u(FUN`CONFIG,%q<bb>,timeout)),No Board Timeout,if(eq(get(%q<bb>/%q<post>`TIMEOUT),0),No Post Timeout,timestring(bound(abs(sub(secs(),add(strfirstof(get(%q<bb>/%q<post>`TIMEOUT),u(FUN`CONFIG,%q<bb>,timeout)),strfirstof(get(%q<bb>/%q<post>`EDITED),get(%q<bb>/%q<post>`ON))))),0)))))]\),BBS`POSTTIMEOUT,n)],35)Posted[space(8)]Author%r[ljust(color(%#,get(%2/%q<post>`HDR),BBS`POSTTITLE,n),35)][ljust(color(%#,ptimefmt($b $d $Y,strfunc(max,firstof(get(%2/%q<post>`EDITED),get(%2/%q<post>`ON)))),BBS`POSTDATE,n),14)][left(color(%#,if(get(u(bbs)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/%q<post>`BY))]),default(u(bbs)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/%q<post>`BY)),BBS`POSTAUTHOR,n),21)]%R[header()];@pemit %#=get(%q<bb>/%q<post>);@pemit %#=header();th petq(oldids,setdiff(get(%#/D`BB`%2`READ),lattr(%2/^POST`%\w+$,,,1)));&D`BB`%2`READ %#=setunion(setdiff(get(%#/D`BB`%2`READ),%q<oldids>),%q<post>)

&INC`NEXT [u(bbs)]=@assert/inline isdbref(petr(bb,first(filter(#lambda/isdbref([lit(%0)]),iter(u(FUN`VALIDGROUPS`%0,%#,READ),if(strlen(setdiff(lattr(%i0/^POST`%\w+$,,,1),get(%#/D`BB`%i0`READ))),%i0,x))))))=@pemit %#=announce(%q<ann>) There are no unread postings on the %q<ann>.;th petq(msg,first(sortkey(#lambda/baseconv([lit(%0)],36,10),setdiff(lattr(%q<bb>/^POST`%\w+$,,,1),get(%#/D`BB`%q<bb>`READ)))));th petr(bbnum,match(u(FUN`LISTGROUPS`%0),%q<bb>));@include u(bbs)/INC`READ`SHOWPOST=%0,match(u(FUN`LISTPOSTS,%q<bb>),%q<msg>),%q<bb>

&INC`NEW [u(bbs)]=@include u(bbs)/INC`NEXT

&INC`EDIT [u(bbs)]=@switch/inline %1=TEXT,{@include u(bbs)/INC`EDIT`POST},TITLE,{@include u(bbs)/INC`EDIT`POST},{@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(bbs)/INC`CHECK`FINDPOST=%0,%2,%q<bb>;@assert/inline or(%q<isadmin>,isadmin(%#),strmatch(get(%q<bb>/%q<post>`BYDB),%#))=@pemit %#=announce(%q<ann>) ERROR: You cannot edit that post.;@assert/inline strlen(before(%3,/))=@pemit %#=announce(%q<ann>) ERROR: No text entered to check for.;&%q<post> %q<bb>=edit(get(%q<bb>/%q<post>),before(%3,/),after(%3,/));&%q<post>`EDITED %q<bb>=secs();@pemit %#=header()%RMessage %q<bbnum>/%q<postnum> ([name(%q<bb>)]/%q<postnum>) now reads:%R[subheader()];@pemit %#=get(%q<bb>/%q<post>);@pemit %#=header()}

&INC`EDIT`POST [u(bbs)]=@assert/inline hasattr(%#/D`BB`NEW)=@pemit %#=announce(%q<ann>) ERROR: You don't have a post in progress.;@assert/inline strlen(before(%3,/))=@pemit %#=announce(%q<ann>) ERROR: No text entered to check for.;&D`BB`NEW`%1 %#=edit(get(%#/D`BB`NEW`%1),before(%3,/),after(%3,/));@pemit %#=header()%RMessage now reads:%R[subheader(get(%#/D`BB`NEW`TITLE))];@pemit %#=get(%#/D`BB`NEW`TEXT);@pemit %#=header()

&INC`LEAVE [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,READ,1;@break/inline default(%#/D`BB`%q<bb>`OMIT,0)=@pemit %#=announce(%q<ann>) You have already left that board.;&D`BB`%q<bb>`OMIT %#=1;@pemit %#=announce(%q<ann>) You have removed yourself from the [name(%q<bb>)] board.
&INC`JOIN [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,READ,1;@assert/inline default(%#/D`BB`%q<bb>`OMIT,0)=@pemit %#=announce(%q<ann>) You are already watching this board.;&D`BB`%q<bb>`OMIT %#=0;@pemit %#=announce(%q<ann>) You have joined the [name(%q<bb>)] board.

&INC`SCAN [u(bbs)]=@assert/inline words(petr(groups,filter(#lambda/isdbref([lit(%0)]),iter(u(FUN`VALIDGROUPS`%0,%#,READ),if(strlen(setdiff(lattr(%i0/^POST`%\w+$,,,1),get(%#/D`BB`%i0`READ))),%i0,x)))))=@pemit %#=announce(%q<ann>) There are no unread postings on the %q<ann>.;@pemit %#=header(- Unread Postings on the [u(FUN`NAME)] -);@dolist/inline %q<groups>={@pemit %#=pueblize(name(##) (#[match(u(FUN`LISTGROUPS`%0),##)]),+[lcstr(%0)]read [match(u(FUN`LISTGROUPS`%0),##)]): [petr(num,words(petr(unread,sortkey(#lambda/baseconv([lit(after(%0,`))],36,10),setdiff(lattr(##/^POST`%\w+$,,,1),get(%#/D`BB`##`READ))))))] unread ([itemize(iter(%q<unread>,pueblize(match(u(FUN`LISTPOSTS,##),%i0),+[lcstr(%0)]read [match(u(FUN`LISTGROUPS`%0),##)]/[match(u(FUN`LISTPOSTS,##),%i0)])),%b,and,\,)]);th petq(total,add(%q<total>,%q<num>))};@pemit %#=header(Total Unread: %q<total>)

&INC`LIST [u(bbs)]=@pemit %#=header([u(FUN`NAME,%0)] Boards)%r[ljust(Available Bulletin Board Groups,37)]Member?[space(8)]Timeout (in days)%r[subheader()];@dolist/inline u(FUN`VALIDGROUPS`%0,%#,READ,1)={@pemit %#=%b[ljust(color(%#,match(u(FUN`LISTGROUPS`%0),##),BBS`BOARDNUM,n),5)][ljust(color(%#,name(##),BBS`BOARDNAME,n),32)][ljust(switch(default(%#/D`BB`##`OMIT,0),0,Yes,No),19)][rjust(if(u(FUN`CONFIG,##,timeout),timestring(u(FUN`CONFIG,##,timeout)),none),4)]};@pemit %#=header()%RTo join boards, type '+[lcstr(%0)]join <board number>'%RTo leave boards, type '+[lcstr(%0)]leave <board number>'%R[header()]

&INC`CATCHUP [u(bbs)]=@assert/inline strlen(%1)=@pemit %#=announce(%q<ann>) ERROR: No board entered to catchup.;@switch/inline %1=ALL,{@dolist/inline u(FUN`VALIDGROUPS`%0,%#,READ)={&D`BB`##`READ %#=lattr(##/^POST`%\w+$,,,1)};@pemit %#=announce(%q<ann>) All postings on all %q<ann> boards marked as read.},{@dolist/delimit , %1={@include u(bbs)/INC`CHECK`FINDBB=%0,##,READ;&D`BB`%q<bb>`READ %#=lattr(%q<bb>/^POST`%\w+$,,,1);@pemit %#=announce(%q<ann>) All postings on board [name(%q<bb>)] marked as read.}}

&INC`MOVE [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(bbs)/INC`CHECK`FINDPOST=%0,%2,%q<bb>;@assert/inline or(%q<isadmin>,isadmin(%#),strmatch(get(%q<bb>/%q<post>`BYDB),%#))=@pemit %#=announce(%q<ann>) ERROR: You cannot move that post.;@assert/inline strlen(%3)=@pemit %#=announce(%q<ann>) ERROR: No destination board entered.;th petq(oldbb,%q<bb>);@include u(bbs)/INC`CHECK`FINDBB=%0,%3,WRITE;@switch/inline %0=BB,{th petq(next,POST`[baseconv(default(u(bbs)/BB`%q<bb>`NEXT,1),10,36)]);&BB`%q<bb>`NEXT [u(bbs)]=add(default(u(bbs)/BB`%q<bb>`NEXT,1),1)},GB,{};@include u(ccs)/INC`MVTREE=%q<oldbb>,%q<post>,%q<bb>,%q<next>;@pemit %#=Message '%q<postnum>' moved from Board '[name(%q<oldbb>)]' to Board '[name(%q<bb>)]'

&INC`CONFIG [u(bbs)]=@switch/inline or(and(strlen(%1),not(valnum(%1))),not(strlen(%1)))=1,{@include u(bbs)/INC`CONFIG`GLOBAL},{@switch/inline and(and(strlen(%1),valnum(%1)),not(valnum(%2)),not(strlen(after(%2,/))))=1,{@include u(bbs)/INC`CONFIG`BOARD},{@include u(bbs)/INC`CONFIG`POST}}

&INC`CONFIG`GLOBAL [u(bbs)]=@break/inline strmatch(%0,GB)=@pemit %#=announce(%q<ann>) ERROR: Global Options cannot be changed in Group mode.;@switch/inline strlen(%1)=0,{@include u(bbs)/INC`CONFIG`GLOBAL`SHOW},{@include u(ccs)/INC`PARTIAL=%1,timeout|autotimeout|interval,|,%q<ann>,parameter,parameter;@switch/inline strlen(%3)=0,{@pemit %#=announce(%q<ann>) %q<parameter> for the %q<ann> cleared.;&BB`%q<parameter> u(bbs)},{@include u(bbs)/INC`CONFIG`GLOBAL`%q<parameter>;@pemit %#=announce(%q<ann>) %q<parameter> for the %q<ann> set to: %3.;&BB`%q<parameter> [u(bbs)]=strfirstof(%q<entry>,%3)}}

&INC`CONFIG`GLOBAL`SHOW [u(bbs)]=@pemit %#=header(BBS - Global Settings);@pemit %#=AUTOTIMEOUT: [u(FUN`CONFIG,autotimeout)] - [if(u(FUN`CONFIG,autotimeout),On,Off)];@pemit %#=TIMEOUT: [u(FUN`CONFIG,timeout)] [if(u(FUN`CONFIG,timeout),- [timestring(u(FUN`CONFIG,timeout))],Off)];@pemit %#=INTERVAL: [u(FUN`CONFIG,interval)] [if(u(FUN`CONFIG,interval),- [timestring(u(FUN`CONFIG,interval))],Unset! Dangerous!)];@pemit %#=header()

&INC`CONFIG`GLOBAL`TIMEOUT [u(bbs)]=@assert/inline strlen(petr(entry,stringsecs(%3)))=@pemit %#=announce(%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`CONFIG`GLOBAL`INTERVAL [u(bbs)]=@assert/inline petr(entry,stringsecs(%3))=@pemit %#=announce(%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`CONFIG`GLOBAL`AUTOTIMEOUT [u(bbs)]=@assert/inline regmatchi(petr(entry,%3),^0|1$)=@pemit %#=announce(%q<ann>) ERROR: Entry must be binary truth - 0 (off) or 1 (on).

&INC`CONFIG`BOARD [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@switch/inline strlen(%2)=0,{@include u(bbs)/INC`CONFIG`BOARD`SHOW},{@include u(ccs)/INC`PARTIAL=%2,anonymous|timeout,|,%q<ann>,parameter,parameter;@switch/inline strlen(%3)=0,{@pemit %#=announce(%q<ann>) %q<parameter> for Board [name(%q<bb>)] cleared.;&BB`%q<bb>`%q<parameter> u(bbs)},{@include u(bbs)/INC`CONFIG`GLOBAL`%q<parameter>;@pemit %#=announce(%q<ann>) %q<parameter> for Board [name(%q<bb>)] set to: %3.;&BB`%q<bb>`%q<parameter> [u(bbs)]=strfirstof(%q<entry>,%3)}}

&INC`CONFIG`BOARD`SHOW [u(bbs)]=@pemit %#=header(%q<ann> - [name(%q<bb>)] Board Settings);@pemit %#=TIMEOUT: [strfirstof(u(FUN`CONFIG,%q<bb>,timeout),0)] [if(u(FUN`CONFIG,%q<bb>,timeout),- [timestring(u(FUN`CONFIG,%q<bb>,timeout))])] [if(strlen(get(u(bbs)/BB`%q<bb>`TIMEOUT)),- Using Board Setting,- Using Global Default)];@pemit %#=ANONYMOUS: [u(FUN`CONFIG,%q<bb>,anonymous)] [if(u(FUN`CONFIG,%q<bb>,anonymous),- [get(u(bbs)/BB`%q<bb>`ANONYMOUS)])];@pemit %#=header()

&INC`CONFIG`BOARD`TIMEOUT [u(bbs)]=@assert/inline strlen(petr(entry,stringsecs(%3)))=@pemit %#=announce(%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`CONFIG`BOARD`ANONYMOUS [u(bbs)]=@assert/inline strlen(%3)=@pemit %#=announce(%q<ann>) ERROR: Anonymous entry must be a string.

&INC`CONFIG`POST [u(bbs)]=@switch/inline strlen(after(%2,/))=0,{@include u(bbs)/INC`CONFIG`GLOBAL`POST},{@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(bbs)/INC`CHECK`FINDPOST=%0,before(%2,/),%q<bb>;@include u(ccs)/INC`PARTIAL=after(%2,/),timeout,|,%q<ann>,parameter,parameter;@switch/inline strlen(%3)=0,{@pemit %#=announce(%q<ann>) %q<parameter> for the %q<ann> cleared.;&%q<post>`%q<parameter> %q<bb>;&%q<post>`EDITED %q<bb>=secs()},{@include u(bbs)/INC`CONFIG`GLOBAL`%q<parameter>;@pemit %#=announce(%q<ann>) %q<parameter> for Board [name(%q<bb>)]'s Post %q<postnum> set to: %3.;&%q<post>`%q<parameter> %q<bb>=strfirstof(%q<entry>,%3)};&%q<post>`EDITED %q<bb>=secs()}

&INC`CONFIG`POST`SHOW [u(bbs)]=@pemit %#=header(%q<ann> - [name(%q<bb>)] - Message %q<postnum> Settings);@pemit %#=TIMEOUT: [strfistof(get(%q<bb>/%q<post>`TIMEOUT),0)] [if(get(%q<bb>/%q<post>`TIMEOUT),- [timestring(get(%q<bb>/%q<post>`TIMEOUT))])];@pemit %#=header()

&INC`CONFIG`POST`TIMEOUT [u(bbs)]=@assert/inline strlen(petr(entry,stringsecs(%3)))=@pemit %#=announce(%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`TIMEOUT [u(bbs)]=@assert/inline u(FUn`CONFIG,Autotimeout)=@pemit %#=announce(%q<ann>) Timeouts are currently disabled.;@switch/inline strlen(%1)=0,{@include u(bbs)/INC`LIST},{@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@switch/inline strlen(%2)=0,{@assert/inline words(petr(processed,filter(#lambda/if(strlen(petr(post,elements(u(FUN`LISTPOSTS,%q<bb>),[lit(%0)]))),or(%q<isadmin>,strmatch(get(%q<bb>/\%q<post>`BYDB),%#))),petr(orig,u(FUN`MESSLIST,%#,%q<bb>,%2)))))=@pemit %#=announce(%q<ann>) ERROR: No posts to change timeouts.;@switch/inline gt(words(petr(cannot,setdiff(%q<processed>,%q<orig>,%b,n))),0)=1,{@pemit %#=announce(%q<ann>) Could not change timeout for posts: [itemize(%q<cannot>,%b,and,\,)]};@assert/inline strlen(%3)=@pemit %#=announce(%q<ann>) ERROR: No new timeout entered!;@switch/inline %3=0,{@assert/inline %q<isadmin>=@pemit %#=announce(%q<ann>) Only admin may set a timeout of 0.};@include u(bbs)/INC`CONFIG`POST`TIMEOUT;@switch/inline %q<isadmin>=0,{@break/inline gt(%q<entry>,u(FUN`CONFIG,%q<bb>,Timeout))=@pemit %#=announce(%q<ann>) ERROR: Cannot set a post's timeout greater than a board's timeout.};@dolist/inline/nobreak %q<processed>={@switch/inline %q<isadmin>=0,{@break/inline eq(get(%q<bb>/[elements(u(FUN`LISTPOSTS,%q<bb>),##)]),0)=@pemit %#=announce(%q<ann>) ERROR: Only admin may apply timeouts to static posts.};&[elements(u(FUN`LISTPOSTS,%q<bb>),##)]`TIMEOUT %q<bb>=%q<entry>;@pemit %#=announce(%q<ann>) Timeout for %q<bbnum>/## set to [timestring(%q<entry>)]!}},{@assert/inline u(FUN`CONFIG,%q<bb>,Timeout)=@pemit %#=announce(%q<ann>) That board has no timeouts to adjust.;@pemit %#=header(u(fun`name,%q<bb>,%q<gid1>) - Timeouts)%r[space(8)]Message[space(28)]Timeout[space(7)]By;@dolist/inline petr(posts,u(FUN`LISTPOSTS,%q<bb>))={@pemit %#=ljust(pueblize(%q<bbnum>/[match(%q<posts>,##)],+[lcstr(%0)]read %q<bbnum>/[match(%q<posts>,##)]),6)[ljust(u(u(bbs)/FUN`MSGFLAG,%#,%q<bb>,##),2)][ljust(get(%q<bb>/##`HDR),35)][ljust(timestring(bound(abs(sub(secs(),add(strfirstof(get(%q<bb>/%q<post>`TIMEOUT),u(FUN`CONFIG,%q<bb>,timeout)),strfirstof(get(%q<bb>/%q<post>`EDITED),get(%q<bb>/%q<post>`ON))))),0)),14)][left(if(get(u(bbs)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/##`BY))]),default(u(bbs)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/##`BY)),21)]};@pemit %#=header()}}

&STARTUP [u(bbs)]=@trigger u(bbs)/TRG`TIMEOUT

&TRG`TIMEOUT [u(bbs)]=@switch/inline u(FUN`CONFIG,autotimeout)=1,{@set [u(bbs)]=!SAFE;@dolist lattr(u(bbs)/BB`#*)={@assert/inline isdbref(last(##,`))=@wipe u(bbs)/##;@switch/inline gt(u(FUN`CONFIG,last(##,`),timeout),0)=1,{@set last(##,`)=!SAFE;@dolist/inline lattr(last(##,`)/*)={@switch/inline gt(petr(timeoutsecs,strfirstof(get(last(%i1,`)/##`TIMEOUT),u(FUN`CONFIG,last(%i1,`),timeout))),0)=1,{@switch/inline gt(secs(),add(%q<timeoutsecs>,get(last(%i1,`)/##`ON)))=1,{@wipe last(%i1,`)/##}}};@set last(##,`)=SAFE}};@set [u(bbs)]=SAFE};@wait u(FUN`CONFIG,interval)=@trigger u(bbs)/TRG`TIMEOUT

&INC`LOCK [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(ccs)/INC`PARTIAL=%2,read|write,|,%q<ann>,lock,lock;@switch/inline %0=BB,{@assert/inline isdbref(u(kls))=@pemit %#=announce(%q<ann>) ERROR: Key System not installed, cannot continue.;@assert/inline strlen(%3)=@pemit %#=announce(%q<ann>) ERROR: No lock string entered. See [pueblize(+help +key)] for more information.;@assert/inline eq(words(petr(choices,setdiff(%3,u(u(kls)/FUN`LISTLOCKS,1)))),0)=@pemit %#=announce(KEY) ERROR: Following lock types not found: [itemize(%q<choices>,|,and,\,)];th petq(locktype,switch(%q<lock>,read,UseLock,write,UserLock));th lock(%q<bb>/%q<locktype>,iter(%3,@[locate(u(kls),%i0,Ti)],%B,|));@pemit %#=announce(%q<ann>) You set the %q<lock> Lock on [name(%q<bb>)] to: %3},GB,{@assert/inline strlen(%3)=@pemit %#=announce(%q<ann>) ERROR: No lock rank entered.;@assert/inline and(gte(%3,0),isint(%3))=@pemit %#=announce(%q<ann>) ERROR: Ranks must be whole numbers 0 or greater.;&BB`%q<bb>`G%q<lock> [u(bbs)]=%3;@pemit %#=announce(%q<ann>) You set the %q<lock> Lock on [name(%q<bb>)] to: %3}

&INC`UNLOCK [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(ccs)/INC`PARTIAL=%2,read|write,|,%q<ann>,lock,lock;@switch/inline %0=BB,{@switch/inline %q<lock>=READ,{@unlock/UseLock %q<bb>},WRITE,{@unlock/UserLock %q<bb>};@pemit %#=announce(%q<ann>) You release the %q<lock> Lock on [name(%q<bb>)]},GB,{&BB`%q<bb>`G%q<lock> u(bbs);@pemit %#=announce(%q<ann>) You release the %q<lock> Lock on [name(%q<bb>)]}

&INC`CONVERT [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@assert/inline strlen(%3)=@pemit %#=announce(%q<ann>) ERROR: No board entered to convert.;@assert/inline isdbref(%3)=@pemit %#=announce(%q<ann>) ERROR: That is not a DBREF.;@switch/inline t(%2)=0,{@assert/inline hasattr(%3/MESS_LST)=@pemit %#=announce(%q<ann>) ERROR: That is not a Myrddin BBS board object or has no posts to convert.;@include u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)] This will attempt to convert the old Myrddin board to the new format. This will be messy if it fails! Have you done a backup? Enter the same command again within ten seconds to verify!},BB CONVERT %q<bb> %3};th petq(bbs,u(bbs));@dolist/inline petr(list,sortkey(#lambda/baseconv([lit(%0)],36,10),get(%3/MESS_LST)))={think petq(next,baseconv(default(u(bbs)/BB`%q<bb>`NEXT,1),10,36));&BB`%q<bb>`NEXT %q<bbs>=add(default(u(bbs)/BB`%q<bb>`NEXT,1),1);th petq(head,get(%3/HDR_##));&POST`%q<next> %q<bb>=get(%3/BDY_##);&POST`%q<next>`BY %q<bb>=elements(%q<head>,3,|);&POST`%q<next>`BYDB %q<bb>=pmatch(elements(%q<head>,4,|));&POST`%q<next>`ON %q<bb>=if(gt(convtime(elements(%q<head>,2,|)),0),convtime(elements(%q<head>,2,|)),secs());&POST`%q<next>`HDR %q<bb>=elements(%q<head>,1,|);&POST`%q<next>`TIMEOUT %q<bb>=if(u(FUN`CONFIG,%q<bb>,TIMEOUT),u(FUN`CONFIG,%q<bb>,TIMEOUT),0)};@pemit %#=announce(%q<ann>) Conversion of [words(%q<list>)] messages (hopefully) complete!

&INC`ORDER [u(bbs)]=@assert/inline petr(num,words(petr(list,switch(%0,BB,v(groups),GB,))))=@pemit %#=announce(%q<ann>) ERROR: No boards to re-order.;@assert/inline strlen(%1)=@pemit %#=announce(%q<ann>) ERROR: New order field empty.;@assert/inline eq(%q<num>,words(%1))=@pemit %#=announce(%q<ann>) ERROR: new order field should not contain more than %q<num> numbers.;@break/inline words(setdiff(lnum(1,%q<num>),%1))=@pemit %#=announce(%q<ann>) ERROR: Some numbers in that list don't match with the original.;@assert/inline strmatch(lnum(1,%q<num>),sort(%1))=@pemit %#=announce(%q<ann>) ERROR: At least one number was duplicated in the new order field.;th petq(newlist,elements(%q<list>,%1));@switch/inline %0=BB,{&groups [u(bbs)]=%q<newlist>},GB,{};@pemit %#=announce(%q<ann>) The board order was changed!

&INC`RENAME [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@assert/inline strlen(%3)=@pemit %#=announce(%q<ann>) ERROR: New name field empty.;@assert/inline valid(name,%3)=@pemit %#=announce(%q<ann>) ERROR: Not a suitable object name. Please try something simpler - perhaps without fancy characters?;@pemit %#=announce(%q<ann>) You renamed Board [name(%q<bb>)] to: %3;@name %q<bb>=%3

&INC`IMPORT [u(bbs)]=@assert/inline strlen(%1)=@pemit %#=announce(%q<ann>) ERROR: No BBPOCKET entered to convert.;@assert/inline isdbref(%1)=@pemit %#=announce(%q<ann>) ERROR: That is not an object.;@assert/inline and(hasattr(%1/groups),hasattr(%1/version))=@pemit %#=announce(%q<ann>) That is not a Myrddin BBS BBpocket!;@include u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)] This will attempt to import all boards in sequence from an old Myrddin BBS. The imported boards will be APPENDED to the board list. This could wreak havoc if something goes wrong. Make sure you have a backup! Please enter the same command again within ten seconds to verify.},%q<ann> IMPORT %1,%q<ann>;@dolist/inline filter(#lambda/isdbref([lit(%0)]),get(%1/groups))={@include u(bbs)/INC`NEWGROUP=%0,name(##);@switch/inline %0=BB,{th petq(bbnum,words(v(groups)))},GB,{th petq(bbnum,words(get(%q<gdb>/%q<gid1>`BOARDS)))};@include u(bbs)/INC`CONVERT=%0,%q<bbnum>,1,##}

&INC`SEARCH [u(bbs)]=@include u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@include u(ccs)/INC`CHECKPC=%3,1,%q<ann>;@assert/inline words(petr(posts,iter(grepi(%q<bb>,*`BYDB,%q<t1>),first(##,`))))=@pemit %#=announce(%q<ann>) No posts by %q<t1name> on [name(%q<bb>)].;@pemit %#=header(BBS - [name(%q<bb>)])%r[space(8)]Message[space(28)]Posted[space(8)]By;@dolist/inline %q<posts>={@pemit %#=ljust(pueblize(%q<bbnum>/[match(u(FUN`LISTPOSTS,%q<bb>),##)],+[lcstr(%0)]read %q<bbnum>/[match(u(FUN`LISTPOSTS,%q<bb>),##)]),6)[ljust(u(u(bbs)/FUN`MSGFLAG,%#,%q<bb>,##),2)][ljust(get(%q<bb>/##`HDR),35)][ljust(ptimefmt($b $d $Y,strfunc(max,firstof(get(%q<bb>/##`EDITED),get(%q<bb>/##`ON)))),14)][left(if(get(u(bbs)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/##`BY))]),default(u(bbs)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/##`BY)),21)]};@pemit %#=header()

th attrib_set(u(cco)/VAR`CATEGORIES,setunion(get(u(cco)/VAR`CATEGORIES),BBS,|,|))
&VAR`CATEGORIES`BBS [u(cco)]=BOARDNUM|BOARDNAME|BOARDSTATUS|POSTNAME|POSTNUM|LASTPOST|NUMMESS|POSTAUTHOR|POSTDATE|POSTTITLE|POSTTIMEOUT