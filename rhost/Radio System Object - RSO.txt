@@ DEPENDENCIES - CORE

@switch/inline isdbref(u(rdso))=0,{@tel create(Radio System Object <RDSO>)=globalroom()}
&rdso [u(coi)]=locate(globalroom(),Radio System Object <RDSO>,Ti)
@wait 0=@parent u(rdso)=[u(coi)]
@set u(rdso)=WIZARD !NO_COMMAND
@lock/use u(rdso)=APPROVED/1
&Approved u(rdso)=approved(%#)

@switch/inline isdbref(u(rddb))=0,{@switch/inline isdbref(u(rdso))=1,{@tel create(Radio Database <RDDB>)=u(rdso)}}
&rddb [u(coi)]=locate(u(rdso),Radio Database <RDDB>,Ti)
@wait 0=@parent u(rddb)=[u(coi)]
@set u(rddb)=WIZARD
@power u(rddb)=many_attribs

&CMD`+RADIO u(rdso)=$^(?s)(?\:\+)?radio(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@include u(ccs)/INC`PARTIAL=%1,setunion(get(u(rdso)/VAR`PLAYFLAGS),if(isadmin(%#),get(u(rdso)/VAR`ADMINFLAGS)),|,|),|,RADIO,switch,switch;@include u(rdso)/INC`[strfirstof(%q<switch>,MAIN)]=%2,%3
@set u(rdso)/CMD`+RADIO=regexp

&CMD`+RADIOSHORT u(rdso)=$^(?s)\.([a-z])(?\: +(.*))?$:@include u(rdso)/INC`MAIN=%1,%2
@set u(rdso)/CMD`+RADIOSHORT=regexp

&INC`MAIN u(rdso)=@switch/inline strlen(%0)=0,{@include u(rdso)/INC`LIST},{@include u(rdso)/INC`CHECKSLOT;@assert/inline strlen(get(%#/D`RADIO`%0))=@pemit %#=announce(RADIO) ERROR: That Slot has no Frequency set!;@assert/inline get(%#/D`RADIO`%0`ON)=@pemit %#=announce(RADIO) That Slot is turned off.;@include u(rdso)/INC`BROADCAST}

&INC`LIST u(rdso)=@pemit %#=header(Your Radio Config)%R%B[ansi(hc,SLOT)][space(5)][ansi(hc,FREQ)][space(9)][ansi(hc,NAME)][space(18)][ansi(hc,ENC KEY)][space(11)][ansi(hc,STATUS)]%R[subheader()];@dolist/inline filter(#lambda/strlen(get(%#/[lit(%0)])),lattr(%#/D`RADIO`*))=@pemit %#=%B%B[ljust(left(last(%i0,`),8),8)][ljust(get(%#/%i0),15)][ljust(left(u(u(rdso)/FUN`FREQNAME,%#,last(%i0,`)),20),20)][ljust(left(default(%#/%i0`KEY,--Unencrypted--),20),20)][ljust(if(get(%#/%i0`ON),ansi(hg,On),ansi(hr,Off)),10)];@pemit %#=header()

&INC`CHECKSLOT u(rdso)=@assert/inline strlen(%0)=@pemit %#=announce(RADIO) ERROR: No Slot entered to Set.;@assert/inline regmatchi(%0,\[A-Z\])=@pemit %#=announce(RADIO) ERROR: Slots must be addressed by single Alphabetical characters A-Z (case insensitive.)

&INC`FREQ u(rdso)=@include u(rdso)/INC`CHECKSLOT;@assert/inline strlen(%1)=@pemit %#=announce(RADIO) ERROR: Frequency Field empty.;@assert/inline regmatchi(%1,\[0-9\]+\\.\[0-9\]+)=@pemit %#=announce(RADIO) ERROR: Frequencies must be in the form of (number).(number), example 105.32;&D`RADIO`%0 %#=%1;&D`RADIO`%0`ON %#=1;@pemit %#=announce(RADIO) You tune Radio Slot [ucstr(%0)] to %1.

&INC`NAME u(rdso)=@include u(rdso)/INC`CHECKSLOT;@switch/inline strlen(%1)=0,{@pemit %#=announce(RADIO) Radio Frequency [u(u(rdso)/FUN`FREQNAME,%#,%0)]'s Name has been Cleared!;&D`RADIO`%0`NAME %#},{@pemit %#=announce(RADIO) Radio Frequency [u(u(rdso)/FUN`FREQNAME,%#,%0)] is now known as: %1;&D`RADIO`%0`NAME %#=%1}

&INC`ENCRYPT u(rdso)=@include u(rdso)/INC`CHECKSLOT;@switch/inline strlen(%1)=0,{@pemit %#=announce(RADIO) Radio Frequency [u(u(rdso)/FUN`FREQNAME,%#,%0)]'s Encrypt Key has been Cleared!;&D`RADIO`%0`KEY %#},{@pemit %#=announce(RADIO) Radio Frequency [u(u(rdso)/FUN`FREQNAME,%#,%0)]'s Encrypt Key is now: %1;&D`RADIO`%0`KEY %#=%1}

&INC`TOGGLE u(rdso)=@include u(rdso)/INC`CHECKSLOT;@switch/inline default(%#/D`RADIO`%0`ON,1)=1,{@pemit %#=announce(RADIO) You switch off [u(u(rdso)/FUN`FREQNAME,%#,%0)].;&D`RADIO`%0`ON %#=0},0,{@pemit %#=announce(RADIO) You switch on [u(u(rdso)/FUN`FREQNAME,%#,%0)].;&D`RADIO`%0`ON %#=1}

&INC`WIPE u(rdso)=@include u(rdso)/INC`CHECKSLOT;@include u(ccs)/INC`VERIFY={WARNING: This will clean all data from Radio Slot %0. This action cannot be undone. Type the same command again within ten seconds to verify.},RADIO WIPE %0;@wipe %#/D`RADIO`%0;@pemit %#=announce(RADIO) Radio Slot %0 wiped!

&INC`BROADCAST u(rdso)=@assert/inline strlen(%1)=@pemit %#=announce(RADIO) ERROR: Nothing entered to say!;th petq(freq,get(%#/D`RADIO`%0));@message/spoof lsearch(all,eplayer,\[if(hasattr(##/\[petr(radattr,first(grepi(##,D`RADIO`*,%q<freq>)))\]),get(##/\%q<radattr>`ON),0)\])=<unset>,u(rdso)/FUN`FORMATBROADCAST,%#,##,%1,%q<freq>,%0,get(%#/D`RADIO`%0`KEY),get(%#/D`RADIO`%0`ALIAS);@include u(rdso)/INC`LOGRADIO=%#,%q<freq>,%1,get(%#/D`RADIO`%0`KEY),get(%#/D`RADIO`%0`ALIAS)

&FUN`FORMATBROADCAST u(rdso)=color(%1,-<,RADIO`1,hr)[color(%1,RADIO: [u(u(rdso)/FUN`FREQNAME,%1,%3)],RADIO`2,hw)][color(%1,>-,RADIO`1,hr)]%B[speak(&[color(%1,if(and(strlen(%6),isadmin(%1)),%6 \([name(%0)]\),strfirstof(%6,name(%0))),RADIO`NAME,n)],petr(mess,decrypt(encrypt(%2,%5),get(%1/[first(grepi(%1,D`RADIO`*,%q<freq>))]`KEY))),color(%1,says\,,RADIO`SAYS,n),#lambda/color(%1,"[lit(%0)]",RADIO`SPEECH,n))]

&INC`LOGRADIO u(rdso)=@switch/inline gt(petr(slot,first(filter(#lambda/isint([lit(%0)]),grepi(u(rddb),*,%1)))),0)=0,{&[petr(slot,nextslot(u(rddb),))] u(rddb)=%1};&[petr(newlog,%q<slot>`[nextslot(u(rddb),%q<slot>)])] u(rddb)=%0;&%q<newlog>`ON u(rddb)=secs();&%q<newlog>`TEXT u(rddb)=%2;&%q<newlog>`KEY u(rddb)=%3;&%q<newlog>`ALIAS u(rddb)=%4

&INC`ALLFREQ u(rdso)=@assert/inline petr(freqs,iter(filter(#lambda/isint([lit(%0)]),lattr(u(rddb)/*)),get(u(rddb)/%i0)))=@pemit %#=announce(RADIO) No Freqs are in use.;@pemit %#=header(Frequencies in Use)%R[ansi(hc,FREQ)][space(7)][ansi(hc,PLAYERS)][space(34)][ansi(hc,ENC KEYS)]%R[subheader()];@dolist/inline %q<freqs>=@pemit %#=align(10 40 20,%i0,itemize(iter(filter(#lambda/strlen(grepi([lit(%0)],D`RADIO`*,%i0)),lsearch(all,type,player)),name(%i0)\([if(get(%i0/[grepi(%i0,D`RADIO`*,%i1)]`ON),On,Off)]\),%b,|),|,and,\,),itemize(setunion(filter(#lambda/strlen([lit(%0)]),iter(lattr(u(rddb)/[first(filter(#lambda/isint([lit(%0)]),grepi(u(rddb),*,%i0)))]`*),get(u(rddb)/%i0`KEY),%B,|),|,|),,|,|),|,and,\,));@pemit %#=header()

&FUN`FREQNAME u(rdso)=switch(1,regmatchi(%1,\[0-9\]+\\.\[0-9\]+),u(u(rdso)/FUN`FREQNAME,%0,last(first(grepi(%0,D`RADIO`*,%1)),`)),regmatchi(%1,\[A-Z\]),if(strlen(get(%0/D`RADIO`%1`NAME)),%1 - [get(%0/D`RADIO`%1`NAME)],%1),%1)

&INC`RECALL u(rdso)=@include u(rdso)/INC`CHECKSLOT;@assert/inline strlen(get(%#/D`RADIO`%0))=@pemit %#=announce(RADIO) ERROR: That Radio Slot has no Frequency set.;@assert/inline gt(petr(slot,first(filter(#lambda/isint([lit(%0)]),grepi(u(rddb),*,get(%#/D`RADIO`%0))))),0)=@pemit %#=announce(RADIO) Nothing has been Logged.;@assert/inline words(petr(list,sortkey(#lambda/last([lit(%0)],`),lattr(u(rddb)/%q<slot>`*))))=@pemit %#=announce(RADIO) Nothing to Recall.;@switch/inline %1=0,{th petq(max,ALL)},{@switch/inline strlen(%1)=0,{th petq(max,0)},{@assert/inline and(gt(%1,-1),isint(petr(max,%1)))=@pemit %#=announce(ERROR) Line Recall must be an integer 0 or greater.}};@pemit %#=header(Frequency: [get(%#/D`RADIO`%0)] - Showing [switch(%q<max>,ALL,ALL,0,15,%q<MAX>)] Lines);@dolist/inline switch(%q<max>,ALL,%q<list>,0,elements(%q<list>,lnum(sub(words(%q<list>),15),words(%q<list>))),elements(%q<list>,lnum(sub(words(%q<list>),%q<max>),words(%q<list>))))=@pemit %#=(On [convsecs(get(u(rddb)/%i0`ON))])%B[u(FUN`FORMATBROADCAST,get(u(rddb)/%i0),%#,get(u(rddb)/%i0`TEXT),get(%#/D`RADIO`%0),get(u(rddb)/%i0`KEY),get(u(rddb)/%i0`ALIAS))];@pemit %#=header()

&VAR`PLAYFLAGS u(rdso)=SET|NAME|TOGGLE|FREQ|ENCRYPT|WIPE|RECALL
&VAR`ADMINFLAGS u(rdso)=ALLFREQ

&STARTUP u(rdso)=@trigger u(rdso)/TRG`CLEANLOGS

&TRG`CLEANLOGS u(rdso)=@dolist filter(#lambda/isint([lit(%0)]),lattr(u(rddb)/*))={@dolist filter(#lambda/lt(get(u(rddb)/[lit(%0)]`ON),sub(secs(),mul(3600,v(VAR`TIMEOUT)))),setdiff(petr(attrs,lattr(u(rddb)/%i0`*)),elements(revwords(%q<attrs>),lnum(1,25))))=@wipe u(rddb)/%i0};@wait mul(60,v(VAR`CHECKTIMEMINUTES))=@trigger u(rdso)/TRG`CLEANLOGS

&VAR`CHECKTIMEMINUTES u(rdso)=20
&VAR`TIMEOUT u(rdso)=2

th attrib_set(u(cco)/VAR`CATEGORIES,setunion(get(u(cco)/VAR`CATEGORIES),RADIO,|,|))
&VAR`CATEGORIES`RADIO u(cco)=1|2|SAYS|NAME|SPEECH