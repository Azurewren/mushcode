@@ DEPENDENCIES - Core
@@ +banlist does not work AT ALL on RhostMUSH.
@@ +ip cannot track failed logins on RhostMUSH.
@@ +ip requires MySQL.

th u(NEWCOBJ,Account Management System <AMS>,ams,,,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)
@power [u(cobj,ams)]=no_pay debit queue
th u(NEWCOBJ,Account Database <ACCOUNTS>,accounts,u(cobj,ams),,1,WIZARD SAFE,SIDEFX SAFE)

@select/inline isdbref(u(bandb))=0,{@select/inline isdbref(u(cao))=1,{@tel create(Ban Database <BANDB>)=u(cao)}}
&bandb u(coi)=locate(u(cao),Ban Database <BANDB>,TXxi)
@parent u(bandb)=u(coi)
@set u(bandb)=WIZARD
@power u(bandb)=many_attribs

&SYSTEM`SWITCHES [u(cobj,ams)]=setunion(setunion(v(SWITCHES`%q<sysname>`PLAYER),if(u(isadmin,%#),v(SWITCHES`%q<sysname>`ADMIN)),|,|),if(u(OPEN_CREATION),v(SWITCHES`%q<sysname>`OPEN_CREATION)),|,|)
&SYSTEM`NAME [u(cobj,ams)]=u(strfirstof,%q<sysname>,ACCOUNT)

@@ ****** ACCOUNT SECTION *******
&CMD`+ACCOUNT`PENNMUSH [u(cobj,ams)]=$^(?\:\+)?account(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+ACCOUNT`MAIN
@set [u(cobj,ams)]/CMD`+ACCOUNT`PENNMUSH=regexp
&CMD`+ACCOUNT`RHOSTMUSH [u(cobj,ams)]=$^(?\:\+)?account(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+ACCOUNT`MAIN
@set [u(cobj,ams)]/CMD`+ACCOUNT`RHOSTMUSH=regexp
&CMD`+ACCOUNT`MAIN [u(cobj,ams)]=th u(setq,sysname,ACCOUNT);@attach %!/INC`GETSWITCH=%1;@attach %!/INC`ACCOUNT`[u(strfirstof,%q<switch>,MAIN)]=%2,%3
@set [u(cobj,ams)]/CMD`+ACCOUNT`[switch(v(game),PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&SWITCHES`ACCOUNT`PLAYER [u(cobj,ams)]=EMAIL
&SWITCHES`ACCOUNT`ADMIN [u(cobj,ams)]=BIND|UNBIND|UNBOUND|DELETE|CREATED|ACTIVE
&SWITCHES`ACCOUNT`OPEN_CREATION [u(cobj,ams)]=REQUEST|ACCEPT|NEW

&INC`ACCOUNT`FIND [u(cobj,ams)]=@assert/inline strlen(%0)=@attach %!/INC`MSG={ERROR: Account Number empty.};@assert/inline isdbref(u(setr,accid,u(FIND_IN,u(cobj,accounts),Account %0)))=@attach %!/INC`MSG={ERROR: Account '%0' not found.};th u(setq,accname,name(%q<accid>))

&INC`ACCOUNT`MAIN [u(cobj,ams)]=@select/inline u(isadmin,%#)=1,{@select/inline strlen(%0)=0,{@attach %!/INC`ACCOUNT`LIST},{@select/inline u(valnum,%0)=1,{@attach %!/INC`ACCOUNT`FIND=%0},{@attach %!/INC`CHECKPC=%0,1;@assert/inline isdbref(u(setr,accid,%q<t1acc>))=@attach %!/INC`MSG={ERROR: %q<t1name> is not bound to an Account.}};@attach %!/INC`ACCOUNT`SHOW}},{@attach %!/INC`CHECKPC=%#,1;@assert/inline isdbref(u(setr,accid,%q<t1acc>))=@attach %!/INC`MSG={ERROR: You are not bound to an Account. Please check with an Admin to correct this!};@attach %!/INC`ACCOUNT`SHOW}

&INC`ACCOUNT`LIST [u(cobj,ams)]=@assert/inline words(u(setr,accounts,u(strfirstof,%q<listing>,children(u(cobj,accounts)))))=@attach %!/INC`MSG={ERROR: There are no accounts entered in the system.};@pemit %#=u(header,mudname() Player Accounts);@pemit %#=align(-5 25 [sub(u(width,%#),32)],ACC,Email,Characters);@pemit %#=u(separator);@dolist/inline %q<accounts>={@pemit %#=align(-5 25 [sub(u(width,%#),32)],u(pueblize,last(name(##)),+account [last(name(##))]),default(##/EMAIL,Unset),u(strfirstof,u(itemize,iter(u(filter,ISOBJID,get(##/CHARACTERS)),u(pueblize,u(moniker,%i0),+finger [name(%i0)]),,|),|,and,\,),OLD: [u(itemize,iter(get(##/OLD),ansi(c,after(%i0,~)),|,|),|,and,\,)]))};@pemit %#=u(subheader,+account <id or player> for details)

&INC`ACCOUNT`ACTIVE [u(cobj,ams)]=th u(setq,listing,sortkey(#lambda/lmath(min,iter(get(u(adb)/\%0),if(isobjid(\%i0),if(lte(sub(secs(),convtime(get(\%i0/LAST))),mul(60,60,24,30)),csecs(\%i0))))),filterbool(#lambda/lmath(max,iter(get(u(adb)/\%0),if(isobjid(\%i0),if(lte(sub(secs(),convtime(get(\%i0/LAST))),mul(60,60,24,30)),1)))),u(lattr,u(adb)/*)),n));@attach %!/INC`ACCOUNT`LIST

&FUN`ACCOUNT`CHARLINE [u(cobj,ams)]=align(-6 3 -3 -3 21 -8 21 6,num(%0),switch(1,u(isadmin,%0),ansi(hy,ADM),haspower(%0,BUILDER),ansi(hm,BUI),u(approved,%0),ansi(hg,APP),ansi(hr,---)),default(%0/D`ALTS,0),default(%0/D`ALTS`PRIORITY,0),u(pueblize,u(moniker,%0),+finger [name(%0)]),elements(maildstats(%0),5),u(pueblize,get(%0/LASTIP),+ip [name(%0)]),u(lastidle,%0))

&INC`ACCOUNT`SHOW [u(cobj,ams)]=th u(setq,pcs,u(filter,ISOBJID,get(%q<accid>/CHARACTERS)));@pemit %#=u(HEADER,name(%q<accid>)[if(strlen(u(setr,email,get(%q<accid>/EMAIL))),:%B%q<email>)]);@pemit %#=align(-6 3 3 3 21 8 21 6,Dbref,Sta,Alt,Pri,Name,New Mail,IP,LastOn);@pemit %#=u(SEPARATOR);@dolist/inline %q<pcs>={@pemit %#=u(FUN`ACCOUNT`CHARLINE,##)};@select/inline cand(u(isadmin,%#),gt(words(u(setr,old,u(filter,OLDOBJID,get(%q<accid>/OLD),|,|)),|),0))=1,{@pemit %#=u(SEPARATOR,Old Characters);@pemit %#=align(-6 3 3 21 8 21,Dbref,,,Name,,Objid);@dolist/inline/delimit | [u(SORTOLDID,%q<old>,|,|)]={@pemit %#=align(-6 3 -3 21 8 21,before(##,:),,,after(##,~),,before(##,~))}};@pemit %#=u(HEADER)

&INC`ACCOUNT`MAKENEW [u(cobj,ams)]=th u(setq,nextid,add(1,u(lmax,iter(children(u(cobj,accounts)),last(name(%i0))))));@attach %!/INC`ACCOUNT`MAKENUM=%q<nextid>
&INC`ACCOUNT`MAKENUM [u(cobj,ams)]=@tel [u(setr,accid,create(Account [abs(%0)]))]=[u(cobj,accounts)];@parent %q<accid>=[u(cobj,accounts)]

&INC`ACCOUNT`NEW [u(cobj,ams)]=@break/inline isdbref(u(setr,accid,u(accid,%#)))=@attach %!/INC`MSG={ERROR: You are already bound to [name(%q<accid>)]!};@attach %!/INC`ACCOUNT`MAKENEW;@attach %!/INC`ACCOUNT`ADDTOACCOUNT=%q<accid>,%#;@attach %!/INC`MSG={You are now bound to [name(%q<accid>)]!};@attach %!/INC`MSG`CHAN={Bound to new [name(%q<accid>)] via +account/new}

&INC`ACCOUNT`REQUEST [u(cobj,ams)]=@break/inline isdbref(u(setr,accid,u(accid,%#)))=@attach %!/INC`MSG=ERROR: You already belong to [name(%q<accid>)]!;@attach %!/INC`CHECKPC=%0,1;@assert/inline u(setr,reqacc,u(accid,%q<t1>))=@attach %!/INC`MSG=ERROR: %q<t1name> does not have an account!;@attach %!/INC`MSG=Request sent! Please use +request/accept %n on any character for that account to confirm.;th u(attrib_set,%q<reqacc>,REQUESTS,setunion(get(%q<reqacc>/REQUESTS),u(objid,%#)));@attach %!/INC`MSG=%n has requested to join this account. Use [u(pueblize,+account/accept %n)] to confirm.,u(alts,%q<t1>);@attach %!/INC`MSG`CHAN=Sent add request to [name(%q<reqacc>)].

&INC`ACCOUNT`ACCEPT [u(cobj,ams)]=@break/inline isdbref(u(setr,accid,u(accid,%#)))=@attach %!/INC`MSG=ERROR: You already belong to [name(%q<accid>)]!;@attach %!/INC`CHECKPC=%0,1;@break/inline u(setr,reqacc,u(accid,%q<t1>))=@attach %!/INC`MSG=ERROR: %q<t1name> already has an account!;@assert/inline match(get(%q<accid>/REQUESTS),%q<t1objid>)=@attach %!/INC`MSG=ERROR: No request pending from %q<t1name>.;th u(attrib_set,%q<accid>,REQUESTS,setdiff(get(%q<accid>/REQUESTS),%q<t1objid>));@attach %!/INC`MSG=%q<t1name> has been added to [name(%q<accid>)],alts(%#);@attach %!/INC`MSG`CHAN=Account request for %q<t1name> to [name(%q<accid>)] confirmed.;@attach %!/INC`ACCOUNT`ADDTOACCOUNT=%q<accid>,%q<t1objid>

&INC`ACCOUNT`BIND [u(cobj,ams)]=@attach %!/INC`CHECKPC=%0,1;@select/inline u(valnum,%1)=1,{@select/inline not(u(setr,accid,u(FIND_IN,u(cobj,accounts),Account %1)))=1,{@attach %!/INC`ACCOUNT`MAKENUM=%1}},{@assert/inline strlen(%1)=@attach %!/INC`MSG={ERROR: Destination Account Empty. It must be an Account ID, player name, or NEW};@select/inline %1=NEW,{@attach %!/INC`ACCOUNT`MAKENEW},{@attach %!/INC`CHECKPC=%1,2;@assert/inline isdbref(u(setr,accid,u(accid,%q<t2objid>)),0)=@attach %!/INC`MSG={ERROR: That player doesn't have an account.}}};@select/inline isdbref(u(setr,oldid,u(accid,%q<t1objid>)),0)=1,{@attach %!/INC`ACCOUNT`REMFROMACCOUNT=%q<oldid>,%q<t1objid>};@attach %!/INC`ACCOUNT`ADDTOACCOUNT=%q<accid>,%q<t1objid>;@attach %!/INC`MSG`NOTICE={You have been Bound to [u(pueblize,name(%q<accid>),+account [last(name(%q<accid>))])].},%q<t1>;@attach %!/INC`MSG={You have Bound %q<t1name> to [u(pueblize,name(%q<accid>),+account [last(name(%q<accid>))])]};@attach %!/INC`MSG`CHAN={Bound %q<t1name> to [u(pueblize,name(%q<accid>),+account [last(name(%q<accid>))])]}

&INC`ACCOUNT`ADDTOACCOUNT [u(cobj,ams)]=th u(attrib_set,%0,CHARACTERS,setunion(get(%0/CHARACTERS),u(objid,%1)));th u(attrib_set,%1,D`ACCOUNT,%0);th u(setstat,%0/OLD,u(objid,%1),name(%1))
&INC`ACCOUNT`REMFROMACCOUNT [u(cobj,ams)]=th u(attrib_set,%0,CHARACTERS,setdiff(get(%0/CHARACTERS),u(objid,%1)));@wipe %0/D`ACCOUNT;@select/inline t(%1)=1,{th u(delstat,%0/OLD,u(objid,%1))}

&INC`ACCOUNT`UNBIND [u(cobj,ams)]=@attach %!/INC`CHECKPC=%0,1;@assert/inline u(setr,accid,%q<t1acc>)=@attach %!/INC`MSG={ERROR: %q<t1name> is not a member of any accounts.};@attach %!/INC`ACCOUNT`REMFROMACCOUNT=%q<accid>,%q<t1objid>;@attach %!/INC`MSG={You have removed %q<t1name> from Account [name(%q<accid>)]};@attach %!/INC`MSG`NOTICE={You were removed you from [name(%q<accid>)]},%q<t1>;@attach %!/INC`MSG`CHAN={Removed %q<t1name> from [name(%q<accid>)]}

&INC`ACCOUNT`UNBOUND [u(cobj,ams)]=@assert/inline words(u(setr,unbound,switch(v(game),PennMUSH,lsearch(all,type,player,elock,!D`ACCOUNT:?*),search(eplayer=!hasattr(##,D`ACCOUNT)))))=@attach %!/INC`MSG={There are no accountless PCs in the Database. Hooray!};@pemit %#=u(HEADER,Unbound Characters);@pemit %#=align(-6 3 3 27 25 9,Dbref,Sta,Alt,Name,IP,Last On);@pemit %#=u(SEPARATOR);@dolist/inline %q<unbound>={@pemit %#=u(FUN`ACCOUNT`CHARLINE,##)};@pemit %#=u(SUBHEADER)

&INC`ACCOUNT`EMAIL [u(cobj,ams)]=@select/inline u(OPEN_CREATION)=1,{@assert/inline isdbref(u(setr,accid,u(accid,%#)))=@pemit %#=ERROR: This character is not bound to an Account.;th u(attrib_set,%q<accid>,EMAIL,%0);@attach %!/INC`MSG={You have [if(strlen(%0),set your Account email to: %0,unset your Account email.)]}},{@assert/inline u(isadmin,%#)=@attach %!/INC`MSG={Only Staff may set emails!};@attach %!/INC`CHECKPC=%0,1;@assert/inline u(setr,accid,%q<t1acc>)=@pemit %#=ERROR: %q<t1name> is not bound to an Account.;th u(attrib_set,%q<accid>,EMAIL,%1);@attach %!/INC`MSG={%q<t1name>'s Email has been set to: %1};@attach %!/INC`MSG`NOTICE={Your Email was set to: %1},get(%q<accid>/CHARACTERS)}

&INC`ACCOUNT`DELETE [u(cobj,ams)]=@assert/inline strlen(%0)=@attach %!/INC`MSG={ERROR: Account ID empty.};@attach %!/INC`ACCOUNT`FIND=%0;@attach %!/INC`VERIFY={ansi(hr,WARNING:) This will delete Account %0. All records will be deleted. This will not delete any characters! Are you sure? Enter the command again within ten seconds to continue.},ACCOUNT DELETE %q<accid>;@attach %!/INC`MSG={[name(%q<accid>)] deleted!};@attach %!/INC`MSG`NOTICE={Your account was deleted.},u(setr,chars,get(%q<accid>/CHARACTERS));@attach %!/INC`MSG`CHAN={[name(%q<accid>)] deleted!};@dolist/inline %q<chars>={@wipe ##/D`ACCOUNT};@attach %!/DELETE=%q<accid>

&PLAYER`CREATE`ACCOUNT [u(cobj,ams)]=@attach %!/INC`MSG=Welcome to [mudname())]! No account was found for this character. [if(u(OPEN_CREATION),If you have no account\, type [u(pueblize,+accout/new)]. If you have one\, use +account/request <existing character name> to send a request.,Please contact admin to get setup with an account.)],%#

&PLAYER`CONNECT`ACCOUNT [u(cobj,ams)]=@break/inline u(isguest,%0);@assert/inline gt(sub(secs(),u(csecs,%0)),300);@break/inline isdbref(u(accid,%0));@trigger u(cao)/PLAYER`CREATE`ACCOUNT=%0

&OBJECT`RENAME`FIXACCOUNT [u(cobj,ams)]=@select/inline %2=PLAYER,{@assert/inline isdbref(u(setr,accid,accid(%0)));th u(setstat,u(adb)/%q<accid>`OLD,%0,%1)}

&OBJECT`DESTROY`CLEANACCOUNTS [u(cobj,ams)]=@select/inline %2=PLAYER,{@assert/inline isdbref(u(setr,accid,accid(%0,1)));@attach %!/INC`ACCOUNT`REMFROMACCOUNT=%q<accid>,%0}

@@ ****** ALTS SECTION *******

&CMD`+ALTS`PENNMUSH [u(cobj,ams)]=$^(?\:\+)?alts(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+ALTS`MAIN
@set [u(cobj,ams)]/CMD`+ALTS`PENNMUSH=regexp
&CMD`+ALTS`RHOSTMUSH [u(cobj,ams)]=$^(?\:\+)?alts(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+ALTS`MAIN
@set [u(cobj,ams)]/CMD`+ALTS`RHOSTMUSH=regexp
&CMD`+ALTS`MAIN [u(cobj,ams)]=th u(setq,sysname,ALTS);@attach %!/INC`GETSWITCH=%1;@attach %!/INC`ALTS`[u(strfirstof,%q<switch>,MAIN)]=%2,%3
@set [u(cobj,ams)]/CMD`+ALTS`[switch(v(game),PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&SWITCHES`ALTS`PLAYER [u(cobj,ams)]=LIST|PRIORITY
&SWITCHES`ALTS`ADMIN [u(cobj,ams)]=

&INC`ALTS`MAIN [u(cobj,ams)]=@attach %!/INC`CHECKPC=u(strfirstof,%0,%#),1;@assert/inline get(%q<t1>/D`ALTS)=@attach %!/INC`MSG=[name(%q<t1>)] is not on any alts lists.;@attach %!/IN`MSG=Alts of [ansi(h,%q<t1name>)] ([u(hideidle,%q<t1>)]): [u(FUN`ALTS`LIST,%q<t1>)]

&INC`ALTS`LIST [u(cobj,ams)]=@assert/inline u(setr,accid,accid(%:))=@attach %!/INC`MSG=ERROR: This character is not bound to an account.;@assert/inline strlen(%0)=@attach %!/INC`MSG=ERROR: List or target field empty. Please enter a name or a number to list this alt under.;@select/inline cand(strlen(%0),strlen(%1))=1,{@attach %!/INC`CHECKPC=%0,1;@assert/inline strmatch(accid(%q<t1objid>),%q<accid>)=@attach %!/INC`MSG=ERROR: %q<t1name> is not one of your registered characters.;@assert/inline cand(gte(u(setr,list,%1),0),isint(%1))=@attach %!/INC`MSG=ERROR: Alts list must be a whole number 0 or greater.},0,{@attach %!/INC`CHECKPC=%#,1;@assert/inline cand(gte(u(setr,list,%0),0),isint(%0))=@attach %!/INC`MSG=ERROR: Alts list must be a whole number 0 or greater.};&D`ALTS %q<t1>=%q<list>;@attach %!/INC`MSG=Okay! %q<t1name> will [if(%q<list>,now appear in Alts List #%q<list>.,not appear in any Alts lists.)]

&FUN`ALTS`LIST [u(cobj,ams)]=if(get(%0/D`ALTS),u(strfirstof,u(itemize,iter(u(sortname,squish(iter(get(u(accid,%0)/CHARACTERS),if(eq(default(%0/D`ALTS,0),default(%i0/D`ALTS,0)),%i0)))),u(moniker,%i0)[if(not(%1),\([u(hideidle,%i0)]\))],%b,|),|,and,\,),None),None)

&INC`ALTS`PRIORITY [u(cobj,ams)]=@assert/inline u(setr,accid,accid(%:))=@attach %!/INC`MSG=ERROR: This character is not bound to an account.;@select/inline t(strlen(%0))=1,{@select/inline cand(strlen(%0),strlen(%1))=1,{@attach %!/INC`CHECKPC=%0,1;@assert/inline strmatch(accid(%q<t1objid>),%q<accid>)=@attach %!/INC`MSG=ERROR: %q<t1name> is not one of your registered characters.;@assert/inline cand(gte(u(setr,list,%1),0),isint(%1))=@attach %!/INC`MSG=ERROR: Alts priority must be a whole number 0 or greater.},0,{@attach %!/INC`CHECKPC=%#,1;@assert/inline cand(gte(u(setr,list,%0),0),isint(%0))=@attach %!/INC`MSG=ERROR: Alts priority must be a whole number 0 or greater.};&D`ALTS`PRIORITY %q<t1>=%q<list>;@attach %!/INC`MSG=Okay! %q<t1name>'s Priority is now: %q<list>},0,{@attach %!/INC`ALTS`PRIORITY`LIST}

&INC`ALTS`PRIORITY`LIST [u(cobj,ams)]=@attach %!/INC`MSG=Your Alts by Priority: [iter(revwords(u(sortpriority,u(alts,%#))),u(moniker,%i0) ([default(%i0/D`ALTS`PRIORITY,0)]),%b,\,%b)]

@@ ******* IP SECTION *********

&CMD`+IP`PENNMUSH [u(cobj,ams)]=$^(?\:\+)?(?\:ip|sitematch|matchsite)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+IP`MAIN
@set [u(cobj,ams)]/CMD`+IP`PENNMUSH=regexp
&CMD`+IP`RHOSTMUSH [u(cobj,ams)]=$^(?\:\+)?(?\:ip|sitematch|matchsite)(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+IP`MAIN
@set [u(cobj,ams)]/CMD`+IP`RHOSTMUSH=regexp
&CMD`+IP`MAIN [u(cobj,ams)]=th u(setq,sysname,IP);@attach %!/INC`GETSWITCH=%1;@attach %!/INC`IP`[u(strfirstof,%q<switch>,MAIN)]=%2,%3
@set [u(cobj,ams)]/CMD`+IP`[switch(v(game),PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&SWITCHES`IP`PLAYER [u(cobj,ams)]=
&SWITCHES`IP`ADMIN [u(cobj,ams)]=GUESTS|IP

&INC`IP`MAIN [u(cobj,ams)]=@break/inline u(isguest,%#)=@attach %!/INC`MSG=ERROR: Guests cannot use +ip.;@select/inline u(isadmin,%#)=0,{@attach %!/INC`IP`IPSHOW=%#,0},{@attach %!/INC`CHECKPC=u(strfirstof,%0,%#),1,IP;@break/inline u(isguest,%q<t1>)=@attach %!/INC`MSG=ERROR: To match Guests, please use +ip/guests;@attach %!/INC`IP`IPSHOW=%q<t1>,0}

&INC`IP`GUESTS [u(cobj,ams)]=@select/inline u(isadmin,%#)=0,{@attach %!/INC`CHECKPC=%#,1,1;@attach %!/INC`IP`IPSHOW=%#,1},{@attach %!/INC`CHECKPC=%0,1,1;@attach %!/INC`IP`IPSHOW=%q<t1>,1}

&INC`IP`IP [u(cobj,ams)]=@assert/inline strlen(%0)=@attach %!/INC`MSG=ERROR: An IP address is required.;@attach %!/INC`IP`IPSHOW=%0,1,1

&INC`IP`IPSHOW [u(cobj,ams)]=@assert/inline gt(words(u(setr,ips,if(%2,%0,u(mysql,GET`LOGIN_[if(%1,GUEST,ID)],%q<t1id>)))),0)=@attach %!/INC`MSG=ERROR: No IP logs found to match against.;th u(setq,pcs,u(sortname,u(mysql,GET`OBJIDS_FROM_IPS[if(%1,_GUEST)],u(SQL`IN`STRING,%q<ips>))));th if(%1,u(setq,pcs,u(filter,NOTGUEST,%q<pcs>)));@assert/inline words(%q<pcs>)=@attach %!/INC`MSG=ERROR: No Matching Logs found.;@pemit %#=u(header,Site matches for [if(%2,%0,name(%0))][if(%1,%B\(Showing Guests\))]);@dolist/inline %q<pcs>={@pemit %#=ljust(ansi(h,u(pueblize,u(moniker,%i0),+finger [name(%i0)]))[ansi(h,\(%i0\))],50,.)[u(lastidle,%i0)]%R[iter(u(mysql2,get`logins,u(objid,%i0)),align(1 39 20 10,if(u(setr,sucfail,elements(%i0,1,^)),ansi(hg,O),ansi(hx,X)),elements(%i0,2,^),u(fancytime,elements(%i0,3,^)),if(%q<sucfail>,,elements(%i0,4,^))),|,%R)]};@pemit %#=u(subheader)

&Q`GET`LOGIN_ID [u(cobj,ams)]=SELECT login_address FROM $LOGINS$ WHERE player_id=? AND login_guest=0 AND login_result=1
&Q`GET`LOGIN_GUEST [u(cobj,ams)]=SELECT login_address FROM $LOGINS$ WHERE player_id=? AND login_result=1

&Q`GET`OBJIDS_FROM_IPS [u(cobj,ams)]=SELECT DISTINCT objid from $LOGINS$ as logins LEFT JOIN $PLAYERS$ as players ON players.player_id=logins.login_id WHERE logins.login_address IN (!) AND logins.login_guest=0
&Q`GET`OBJIDS_FROM_IPS_GUEST [u(cobj,ams)]=SELECT DISTINCT objid from $LOGINS$ as logins LEFT JOIN $PLAYERS$ as players ON players.player_id=logins.login_id WHERE logins.login_address IN (!)

&Q`GET`LOGINS [u(cobj,ams)]=SELECT login_result,login_site,UNIX_TIMESTAMP(login_date),login_reason from $LOGINS$ as logins LEFT JOIN $PLAYERS$ as players ON players.player_id=logins.login_id WHERE players.objid=? ORDER BY login_date ASC LIMIT 10

&TRG`IP`CLEANCONNLOGS [u(cobj,ams)]=@attach %!/INC`IDCHECK=%0;@assert/inline %q<id>;th u(setq,keepids,u(mysql,GET`GOOD_LOGINS,%q<id>));@attach %!/INC`DOSQL=DELETE`OLD_LOGINS=%q<id>,u(SQL`IN`NUMBER,%q<keepids>)

&Q`GET`GOOD_LOGINS [u(cobj,ams)]=SELECT login_id FROM $LOGINS$ WHERE player_id=? ORDER BY login_date DESC LIMIT 20
&Q`DELETE`OLD_LOGINS [u(cobj,ams)]=DELETE FROM $LOGINS$ WHERE player_id=? AND login_id NOT IN (!)

&PLAYER`CONNECT`IPLOG [u(cobj,ams)]=@attach %!/INC`IDCHECK=%0;@assert/inline %q<id>;@attach %!/INC`DOSQL=INSERT`LOGIN,%q<id>,secs(),1,success,get(%0/LASTIP),get(%0/LASTSITE),u(isguest,%0);@trigger %!/TRG`IP`CLEANCONNLOGS=%0

&Q`INSERT`LOGIN [u(cobj,ams)]=INSERT INTO $LOGINS$ (player_id,login_date,login_result,login_reason,login_address,login_site,login_guest) VALUES (?,FROM_UNIXTIME('?'),?,?,?,?,?)

&PLAYER`CONNECTFAIL`IPLOG [u(cobj,ams)]=@attach %!/INC`IDCHECK=%0;@assert/inline %q<id>;@attach %!/INC`DOSQL=INSERT`LOGIN,%q<id>,secs(),0,failure: %1,get(%0/LASTIP),get(%0/LASTSITE);@@ @trigger %!/TRG`IP`CLEANCONNLOGS=%0

&SOCKET`LOGINFAIL`IPLOG [u(cobj,ams)]=@select/inline isdbref(%4)=1,{@trigger %!/PLAYER`CONNECTFAIL`IPLOG=%4,%3;th u(setq,isgod,strmatch(#1,%4))[u(setq,admin,u(isadmin,%4))];@attach %!/INC`MSG`SYSCHAN={[if(cor(%q<isgod>,%q<admin>),ansi(hr,WARNING:),ansi(hy,ALERT:))]%BFailed [switch(1,%q<isgod>,ansi(hr,GOD),%q<admin>,ansi(hr,ADMIN),Player)] ([name(%4)]) login attempt from IP '%1' HOST '[host(%0)]' PORT '%0'. Consecutive Failure %2: %3. [if(strmatch(get(%4/LASTSITE),host(%0)),,ansi(hr,ALERT:)%BAttempt not from previous LASTSITE!)]};@select/inline cor(%q<isgod>,%q<admin>)=1,{@pemit/port %0=[ansi(hrf,WARNING:)]%BAdmin login failures are logged.};@select/inline %2=>1,{@pemit/port %0=If you have forgotten your password, ask an admin for a reset. Too many login attempts will cause a temporary lockout.}}

&OBJECT`DESTROY`IPLOGS [u(cobj,ams)]=@select/inline %2=PLAYER,{@attach %!/INC`DOSQL=DELETE`ALL_LOGS,%0}
&Q`DELETE`ALL_LOGS [u(cobj,ams)]=DELETE logins FROM $LOGINS$ INNER JOIN $PLAYERS$ ON logins.player_id=players.player_id WHERE players.objid=?

@@ ***** BANLIST SECTION *******
&CMD`+BANLIST`PENNMUSH [u(cobj,ams)]=$^(?\:\+)?banlist(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+BANLIST`MAIN
@set [u(cobj,ams)]/CMD`+BANLIST`PENNMUSH=regexp
&CMD`+BANLIST`RHOSTMUSH [u(cobj,ams)]=$^(?\:\+)?banlist(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+BANLIST`MAIN
@set [u(cobj,ams)]/CMD`+BANLIST`RHOSTMUSH=regexp
&CMD`+BANLIST`MAIN [u(cobj,ams)]=@assert/inline u(isadmin,%#)=@force/inline %#=HUH_COMMAND;th u(setq,sysname,BANLIST);@attach %!/INC`GETSWITCH=%1;@attach %!/INC`BANLIST`[u(strfirstof,%q<switch>,MAIN)]=%2,%3
@set [u(cobj,ams)]/CMD`+BANLIST`[switch(v(game),PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&SWITCHES`BANLIST`PLAYER [u(cobj,ams)]=
&SWITCHES`BANLIST`ADMIN [u(cobj,ams)]=BANIP|BANPLAYER|DELETE|DURATION|COMMENT|MESSAGE

&INC`BANLIST`MAIN [u(cobj,ams)]=@select/inline t(strlen(%0))=0,{@attach %!/INC`BANLIST`LIST},1,{@attach %!/INC`BANLIST`DETAILS}

&INC`BANLIST`ID [u(cobj,ams)]=@assert/inline u(valnum,%0)=@attach %!/INC`MSG=Entry must be in ID number format.;@assert/inline hasattr(u(bandb)/%0)=@attach %!/INC`MSG=Entry '%0' not found.

&INC`BANLIST`LIST [u(cobj,ams)]=@pemit %#=u(HEADER,mudname() Ban List);@pemit %#=align(4 21 25 25,ID,IP,Affected,Until);@dolist/inline u(setr,list,sort(u(reglattr,u(bandb)/^\\d+$)))={@pemit %#=align(4 21 25 25,##,get(u(bandb)/##),get(u(bandb)/##`AFFNAMES),u(setq,col,if(gte(get(u(bandb)/##`UNTIL),secs()),n,hr))[ansi(%q<col>,u(fancytime,convsecs(get(u(bandb)/##`UNTIL))))])};@pemit %#=u(SUBHEADER,words(%q<list>) Entries)

&INC`BANLIST`DETAILS [u(cobj,ams)]=@attach %!/INC`BANLIST`ID;@pemit %#=u(HEADER,Banlist Entry %0);@pemit %#=IP: [get(u(bandb)/%0)];@pemit %#=AFFECTED: [get(u(bandb)/%0`AFFNAMES)];@pemit %#=Set by [name(get(u(bandb)/%0`SETBY))] on [u(fancytime,convsecs(get(u(bandb)/%0`SETON)))];@dolist/inline u(sortattr,u(lattr,u(bandb)/%0`COMMENT`*))={@pemit %#=u(SEPARATOR,Comment [last(##,`)]);@pemit %#=name(get(u(bandb)/##`BY)) commented on [u(fancytime,convsecs(get(u(bandb)/##`ON)))]:%R[get(u(bandb)/##)]};@pemit %#=u(HEADER)

&INC`BANLIST`BANIP [u(cobj,ams)]=@assert/inline u(iswizard,%#)=@attach %!/INC`MSG=Permission denied.;@assert/inline strlen(u(setr,ip,%0))=@attach %!/INC`MSG=ERROR: No IP entered to ban.;@attach %!/INC`BANLIST`BAN=%0,trim(before(%1,/)),trim(after(%1,/))

&INC`BANLIST`BANPLAYER [u(cobj,ams)]=@assert/inline u(iswizard,%#)=@attach %!/INC`MSG=Permission denied.;@attach %!/INC`CHECKPC=%0,1,BANLIST;th u(setq,ip,get(%q<t1>/lastip));@attach %!/INC`BANLIST`BAN=%0,trim(before(%1,/)),trim(after(%1,/))

&INC`BANLIST`BAN [u(cobj,ams)]=@attach %!/INC`BANLIST`BADMATCH=%q<ip>;@break/inline words(u(setr,banned,u(FUN`CHECKBAN,%q<ip>)))=@attach %!/INC`MSG=The IP matches (without wildcards) existing entries in the Ban Database: [u(itemize,%q<banned>)];@assert/inline strlen(%1)=@attach %!/INC`MSG=ERROR: Duration value empty.;@assert/inline isint(u(setr,dur,u(stringsecs,%1)))=@attach %!/INC`MSG=ERROR: Duration did not compute to a time value. see help stringsecs() for proper syntax.;@assert/inline strlen(%2)=@attach %!/INC`MSG=ERROR: A comment is necessary to apply a ban.;th u(setq,affects,u(FUN`BANAFFECTS,%q<ip>));@attach %!/INC`VERIFY={WARNING: This will affect sites used by [u(setr,affnames,u(strfirstof,u(itemize,iter(%q<affects>,name(%i0),%b,|),|,and,\,),<nobody>))] for [etime(%q<dur>)]. These characters will be @booted upon completion. Are you sure? Enter again within ten seconds to verify.},BAN %q<affects> %q<dur>,BANLIST;&[u(setr,banid,nextslot(u(bandb)))] u(bandb)=%q<ip>;@attach %!/INC`BANLIST`COMMENT`MAKE=%q<banid>,%2;&%q<banid>`AFFECTED u(bandb)=%q<affects>;&%q<banid>`AFFNAMES u(bandb)=%q<affnames>;&%q<banid>`UNTIL u(bandb)=u(setr,end,add(secs(),%q<dur>));&%q<banid>`SETON u(bandb)=secs();&%q<banid>`SETBY u(bandb)=%:;@dolist/inline filterbool(#lambda/conn(\%0),%q<affects>)={@pemit %i0=You have been banned from [mudname()] until [convsecs(%q<end>)].;@boot %i0};@attach %!/INC`MSG`SYSCHAN={[ansi(h,\[%n\])] banned %q<ip> ([ansi(h,%q<affnames>)]) until [convsecs(%q<end>)] for: %2};@attach %!/INC`MSG=Banned.

&INC`BANLIST`BADMATCH [u(cobj,ams)]=th foreach(#lambda/u(setr,quest,add(%q<quest>,strmatch(?,\%0))),%0);@break/inline %q<quest>=@attach %!/INC`MSG=ERROR: Question marks are not allowed in IP entries.;th foreach(#lambda/u(setr,aster,add(%q<aster>,strmatch(*,\%0))),%0);@break/inline gt(%q<aster>,1)=@attach %!/INC`MSG=ERROR: no more than one asterisk per match.;@break/inline cor(strmatch(*.,%0),strmatch(*.,%0))=@attach %!/INC`MSG=ERROR: That would ban EVERYONE.;@break/inline and(%q<aster>,not(strmatch(*,right(%0,1))))=@attach %!/INC`MSG=ERROR: Asterisks may only be at the end of an IP entry.

&INC`BANLIST`DELETE [u(cobj,ams)]=@assert/inline u(iswizard,%#)=@attach %!/INC`MSG=Permission denied.;@attach %!/INC`BANLIST`ID;@attach %!/INC`VERIFY={[ansi(hr,WARNING:)] This will delete Banlist entry %0. Are you sure? Enter again within ten seconds to verify.},BANLIST DELETE %0;@attach %!/INC`MSG`SYSCHAN={[ansi(h,\[%n\])] lifted BanID %0: [get(u(bandb)/%0)] ([get(u(bandb)/%0`AFFNAMES)]).};@attach %!/INC`MSG=Unbanned.;@attach %!/WIPE=u(bandb),%0

&INC`BANLIST`DURATION [u(cobj,ams)]=@assert/inline u(iswizard,%#)=@attach %!/INC`MSG=Permission denied.;@attach %!/INC`BANLIST`ID;@assert/inline strlen(%1)=@attach %!/INC`MSG=ERROR: Duration value empty.;@assert/inline isint(u(setr,dur,stringsecs(%1)))=@attach %!/INC`MSG=ERROR: Duration did not compute to a time value. see help stringsecs() for proper syntax.;@attach %!/INC`MSG`SYSCHAN={[ansi(h,\[%n\])] reset ban duration for BanID %0: [get(u(bandb)/%0)] ([get(u(bandb)/%0`AFFNAMES)]) to [etime(%q<dur>)] - until [convsecs(add(secs(),%q<dur>))]};&%0`UNTIL u(bandb)=add(secs(),%q<dur>);@attach %!/INC`MSG=Duration reset.

&INC`BANLIST`COMMENT [u(cobj,ams)]=@attach %!/INC`BANLIST`ID;@assert/inline strlen(%1)=@attach %!/INC`MSG=Comment text field empty.;@attach %!/INC`BANLIST`COMMENT`MAKE;@attach %!/INC`MSG=Comment posted.;@attach %!/INC`MSG`SYSCHAN={[ansi(h,\[%n\])] new comment posted to [pueblize(+banlist %0,+banlist %0)]}

&INC`BANLIST`COMMENT`MAKE [u(cobj,ams)]=&[u(setr,attr,%0`COMMENT`[nextslot(u(bandb),%0`COMMENT)])] u(bandb)=%1;&%q<attr>`ON u(bandb)=secs();&%q<attr>`BY u(bandb)=%:

&INC`BANLIST`MESSAGE [u(cobj,ams)]=@assert/inline u(iswizard,%#)=@attach %!/INC`MSG=Permission denied.;@attach %!/INC`BANLIST`ID

&FUN`BANAFFECTS [u(cobj,ams)]=setunion(iter(wildgrepi(u(ipdb),*`*,%0),first(%i0,`)),,,namei)

&FUN`CHECKBAN [u(cobj,ams)]=filterbool(#lambda/eq(comp(%0,get(u(bandb)/\%0),I),0),regu(lattr,u(bandb)/^\\d+$))

&FUN`CHECKLOGINS [u(cobj,ams)]=filterbool(#lambda/strmatch(%0,get(u(bandb)/\%0)),regu(lattr,u(bandb)/^\\d+$))

&SOCKET`CONNECT`BANLIST [u(cobj,ams)]=@assert/inline u(setr,banid,first(u(FUN`CHECKLOGINS,%1)));@select/inline gt(secs(),get(u(bandb)/%q<banid>`UNTIL))=1,{@attach %!/INC`MSG`SYSCHAN={[ansi(hr,WARNING:)] EXPIRED Banned address %1 (match: BanID %q<banid>: [get(u(bandb)/%q<banid>)]) has connected.}},0,{@pemit/port %0=u(setr,message,strfirstof(get(u(bandb)/%q<banid>`MESSAGE),u(VAR`BANLIST`MESSAGE)));@boot/port %0;@attach %!/INC`MSG`SYSCHAN={[ansi(hr,WARNING:)] Banned address %1 (match: BanID %q<banid>: [get(u(bandb)/%q<banid>)]) attempted to connect. Message sent to them: '%q<message>'}}

&VAR`BANLIST`MESSAGE [u(cobj,ams)]=Your site has been banned from [mudname()]. Contact staff at [game_config(SYSTEM`PUBLIC_EMAIL)] with any inquiries.

@@ ****** APPROVAL SECTION *********

&CMD`+APPROVE`PENNMUSH [u(cobj,ams)]=$^(?\:\+)?(approve|unapprove)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+APPROVE`MAIN
@set [u(cobj,ams)]/CMD`+APPROVE`PENNMUSH=regexp
&CMD`+APPROVE`RHOSTMUSH [u(cobj,ams)]=$^(?\:\+)?(approve|unapprove)(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+APPROVE`MAIN
@set [u(cobj,ams)]/CMD`+APPROVE`RHOSTMUSH=regexp
&CMD`+APPROVE`MAIN [u(cobj,ams)]=th u(setq,sysname,APPROVE);@attach %!/INC`GETSWITCH=%2;@attach %!/INC`%1`[u(strfirstof,%q<switch>,MAIN)]=%2,%3
@set [u(cobj,ams)]/CMD`+APPROVE`[switch(v(game),PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&INC`APPROVE`MAIN [u(cobj,ams)]=@select/inline cand(u(isadmin,%#),strlen(%0))=1,{@attach %!/INC`CHECKPC=%0,1;@break/inline u(isapproved,%q<t1>)=@attach %!/INC`MSG=ERROR: They are already approved!;@attach %!/INC`APPROVE`DOAPPROVE=%q<t1>;@attach %!/INC`MSG=You have approved %q<t1name> for play!;@attach %!/INC`MSG`SYSCHAN=%q<t1name> approved for play!},{@attach %!/INC`MSG=You [if(u(isapproved,%#),ansi(hg,are),ansi(hr,are not))] are approved for play!}

&INC`APPROVE`DOAPPROVE [u(cobj,ams)]=@set %0=D`APPROVED:1
&INC`APPROVE`DOUNAPPROVE [u(cobj,ams)]=@set %0=D`APPROVED:0

&INC`UNAPPROVE`MAIN [u(cobj,ams)]=@select/inline u(isadmin,%#)=1,{@attach %!/INC`CHECKPC=%0,1,APPROVE;@assert/inline u(isapproved,%q<t1>)=@attach %!/INC`MSG=ERROR: They are not approved!;@attach %!/INC`APPROVE`DOUNAPPROVE=%q<t1>;@attach %!/INC`MSG=You have unapproved %q<t1name> for play!;@attach %!/INC`MSG`SYSCHAN=%q<t1name> unapproved for play.;@attach %!/INC`MSG`PUBCHAN=%q<t1name> unapproved for play.},{@attach %!/INC`MSG=You [if(u(isapproved,%#),ansi(hg,are),ansi(hr,are not))] are approved for play!}


@@ ********* STAFF SECTION ********
&CMD`+STAFF`PENNMUSH [u(cobj,ams)]=$^(?\:\+)?(staff|admin|wizlist)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+STAFF`MAIN
@set [u(cobj,ams)]/CMD`+STAFF`PENNMUSH=regexp
&CMD`+STAFF`RHOSTMUSH [u(cobj,ams)]=$^(?\:\+)?(staff|admin|wizlist)(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+STAFF`MAIN
@set [u(cobj,ams)]/CMD`+STAFF`RHOSTMUSH=regexp
&CMD`+STAFF`MAIN [u(cobj,ams)]=th u(setq,sysname,STAFF);@attach %!/INC`GETSWITCH=%2;@attach %!/INC`%1`[u(strfirstof,%q<switch>,MAIN)]=%2,%3
@set [u(cobj,ams)]/CMD`+STAFF`[switch(v(game),PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&CMD`+STAFF [u(cobj,ams)]=$^(?\:\+)?(staff|admin|wizlist)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/INC`PARTIAL=%2,setunion(get(u(cao)/VAR`STAFF`PLAYFLAGS),if(isadmin(%#),get(u(cao)/VAR`STAFF`ADMINFLAGS)),|,|),|,%1,switch,switch;@attach %!/INC`STAFF`[strfirstof(%q<switch>,MAIN)]=%3,%4
@set u(cao)/CMD`+STAFF=regexp

&INC`WIZLIST`MAIN [u(cobj,ams)]=@attach %!/INC`STAFF`MAIN
&INC`ADMIN`MAIN [u(cobj,ams)]=@attach %!/INC`STAFF`MAIN

&SWITCHES`STAFF`ADMIN [u(cobj,ams)]=ADD|REM|ORDER|ON|OFF|VAC

&INC`STAFF`MAIN [u(cobj,ams)]=@assert/inline words(u(setr,staff,u(sortstaff,lsearch(all,type,player,elock,D`STAFF:>0))))=@pemit %#=msghead(STAFF) ERROR: There are no Staff registered!;@pemit %#=u(header,mudname() Staff);@pemit %#=align(3 20 3 40 9,Idl,Name,Bit,Position,Duty/Last);@@ @pemit %#=separator();@dolist/inline %q<staff>=@pemit %#=u(u(cao)/FUN`Staff`WIZLIST,%i0,%#);@select/inline t(strlen(get(u(pco)/WIZLIST`MSG)))=1,{@pemit %#=separator();@pemit %#=u(u(pco)/WIZLIST`MSG)};@pemit %#=subheader()

&FUN`STAFF`WIZLIST [u(cobj,ams)]=align(3 20 3 40 9,hideidle(%0),u(moniker,%0),switch(1,u(iswizard,%0),ansi(hr,WIZ),u(isadmin,%0),ansi(hc,ROY),ansi(hx,N/A)),default(%0/JOB,???),switch(1,cand(objeval(%#,conn(%0)),hasflag(%0,ON-VACATION)),Vacation,t(get(%0/DUTY)),ansi(hg,On),lastidle(%0)))

&INC`STAFF`ADD [u(cobj,ams)]=@attach %!/INC`CHECKPC=%0,1;@break/inline strlen(getstat(u(pco)/WIZLIST,%q<t1objid>))=@pemit %#=msghead(STAFF) ERROR: They are already on the Staff list!;@select/inline gt(strlen(%1),0)=1,{@assert/inline valnum(%1)=@pemit %#=msghead(STAFF) ERROR: Order Must be a whole positive number.;th setstat(u(pco)/WIZLIST,%q<t1objid>,%1)},0,{th setstat(u(pco)/WIZLIST,%q<t1objid>,u(setr,order,add(1,iter(get(u(pco)/WIZLIST),last(%i0,~)))))};@pemit %#=msghead(STAFF) You have added %q<t1name> to Staff!;@pemit %q<t1>=msghead(STAFF) You have been added to Staff!;@select/inline gt(v(VAR`STAFF`ALERTMODE),0)=1,{@nscemit/noisy u(VAR`STAFF`ALERTSCHANNEL)=ansi(h,%n) has added %q<t1name> to Staff!}

&INC`STAFF`REM [u(cobj,ams)]=@attach %!/INC`CHECKPC=%0,1,STAFF;@assert/inline strlen(getstat(u(pco)/WIZLIST,%q<t1objid>))=@pemit %#=msghead(STAFF) ERROR: They are not on the Staff list!;@pemit %#=msghead(STAFF) You have removed %q<t1name> from Staff!;@pemit %q<t1>=msghead(STAFF) You have been removed from Staff!;th delstat(u(pco)/WIZLIST,%q<t1objid>);@select/inline gt(v(VAR`STAFF`ALERTMODE),0)=1,{@nscemit/noisy u(VAR`STAFF`ALERTSCHANNEL)=ansi(h,%n) has removed %q<t1name> from Staff!}

&INC`STAFF`VAC [u(cobj,ams)]=@select/inline hasflag(%#,ON-VACATION)=0,{@pemit %#=msghead(STAFF) You go On Vacation!;@set %#=ON-VACATION},1,{@pemit %#=msghead(STAFF) You come off Vacation!;@set %#=!ON-VACATION}

&INC`STAFF`ORDER [u(cobj,ams)]=@attach %!/INC`CHECKPC=%0,1,STAFF;@assert/inline strlen(getstat(u(pco)/WIZLIST,%q<t1objid>))=@pemit %#=msghead(STAFF) ERROR: They are not on the Staff list!;@assert/inline strlen(%1)=@pemit %#=msghead(STAFF) ERROR: Order field empty.;@assert/inline valnum(%1)=@pemit %#=msghead(STAFF) ERROR: Order Must be a whole positive number.;th setstat(u(pco)/WIZLIST,%q<t1objid>,%1);@pemit %#=msghead(STAFF) You have set %q<t1name>'s Staff order to %1!;@pemit %q<t1>=%n has set your Staff order to %1!;@select/inline gt(v(VAR`STAFF`ALERTMODE),0)=1,{@nscemit/noisy u(VAR`STAFF`ALERTSCHANNEL)=ansi(h,%n) has set %q<t1name>'s Staff order to %1!}

&INC`STAFF`ON [u(cobj,ams)]=@select/inline t(default(%#/DUTY,0))=1,{@pemit %#=msghead(STAFF) You are already On-duty!},0,{@pemit %#=msghead(STAFF) You are now ON DUTY!;&duty %#=1;@@ @select/inline nor(hasflag(%#,DARK),hidden(%#))=1,{@nscemit/noisy u(CMO`PUBLIC)=[ansi(h,%n)] is now ON DUTY!}}

&INC`STAFF`OFF [u(cobj,ams)]=@select/inline t(default(%#/DUTY,0))=0,{@pemit %#=msghead(STAFF) You are already Off-duty!},1,{@pemit %#=msghead(STAFF) You are now OFF DUTY!;&duty %#=0;@@ @select/inline nor(hasflag(%#,DARK),hidden(%#))=1,{@nscemit/noisy u(CMO`PUBLIC)=[ansi(h,%n)] is now OFF DUTY!}}

&OBJECT`DESTROY`CLEANSTAFF [u(cobj,ams)]=@select/inline %2=PLAYER,{th delstat(u(pco)/WIZLIST,%0)}

&PLAYER`CONNECT`STAFFDUTY [u(cobj,ams)]=@select/inline t(getstat(u(pco)/WIZLIST,%0))=1,{@wait 3=@pemit %0=msghead(STAFF) You are [if(hasflag(%0,DARK),DARK,not Dark)], [if(hidden(%0),Hidden,not Hidden)] and [if(hasflag(%0,VACATION),on Vacation,if(default(%0/duty,0),On Duty,Off Duty))].}

@@ ********* BUILDER SECTION ********
@select/inline isdbref(u(build))=0,{@tel pcreate(Buildstaff,digest(md5,secs()))=u(cao)}
&build u(coi)=locate(u(cao),Buildstaff,PXxi)
@lock/zone u(build)=POWER^BUILDER
@set u(build)=!UNREGISTERED SHARED
@power u(build)=builder no_pay no_quota
@lset u(build)/zone=v

&OBJECT`CREATE`BUILDER [u(cobj,ams)]=@assert/inline hastype(%0,ROOM EXIT);@assert/inline haspower(owner(%0),BUILDER);@chown/preserve %0=u(build)

&CMD`+BUILDER [u(cobj,ams)]=$^(?\:\+)?(builder)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/INC`PARTIAL=%2,setunion(get(u(cao)/VAR`BUILDER`PLAYFLAGS),if(isadmin(%#),get(u(cao)/VAR`BUILDER`ADMINFLAGS)),|,|),|,BUILDER,switch,switch;@attach %!/INC`BUILDER`[strfirstof(%q<switch>,MAIN)]=%3,%4
@set u(cao)/CMD`+BUILDER=regexp

&INC`BUILDER`MAIN [u(cobj,ams)]=@select/inline isadmin(%#)=1,{@select/inline strlen(%0)=0,{@assert/inline words(u(setr,build,lsearch(all,eplayer,\[haspower(##,BUILDER)\])))=@pemit %#=msghead(BUILDER) There are no Builder Characters.;@pemit %#=header(mudname() Builder Characters);@pemit %#=iter(%q<build>,ansi(h,%i0 - [name(%i0)]) - [powers(%i0)],%b,%R);@pemit %#=header()},{@attach %!/INC`CHECKPC=%0,1,BUILDER;@pemit %#=header(%q<t1name>'s Belongings);@dolist/inline THING ROOM EXIT=@select/inline gt(words(u(setr,search,lsearch(%q<t1>,type,%i0))),0)=1,{@pemit %#=subheader(Type: %i0);@dolist/inline %q<search>=@pemit %#=[rjust(pueblize(%i0,brief %i0),7)] - [name(%i0)]};@pemit %#=header()}},0,{@pemit %#=msghead(BUILDER) You [if(haspower(%#,BUILDER),ansi(hg,are),ansi(hr,are not))] A Builder!}

&INC`BUILDER`ADD [u(cobj,ams)]=@attach %!/INC`CHECKPC=%0,1,BUILDER;@break/inline haspower(%q<t1>,BUILDER)=@pemit %#=msghead(BUILDER) ERROR: They are already a Builder.;@set %q<t1>=!UNREGISTERED;@power %q<t1>=builder no_quota tel_anywhere open_anywhere link_anywhere;give %q<t1>=100000;@pemit %#=msghead(BUILDER) You have made %q<t1name> a Builder.;@pemit %q<t1>=msghead(BUILDER) %n has granted you Builder powers.;@select/inline gt(v(VAR`BUILDER`ALERTMODE),0)={@nscemit/noisy u(VAR`BUILDER`ALERTSCHANNEL)=%n has made %q<t1name> a Builder.}

&INC`BUILDER`REM [u(cobj,ams)]=@attach %!/INC`CHECKPC=%0,1,BUILDER;@assert/inline haspower(%q<t1>,BUILDER)=@pemit %#=msghead(BUILDER) ERROR: They are not a Builder.;@set %q<t1>=!UNREGISTERED;@power %q<t1>=!builder !no_quota !tel_anywhere !open_anywhere !link_anywhere;@select/inline lt(money(%q<t1>),100000)=1,{give %q<t1>=100000};give %q<t1>=-99000;@pemit %#=msghead(BUILDER) You have revoked %q<t1name>'s Builder powers.;@pemit %q<t1>=msghead(BUILDER) %n has revoked your Builder powers.;@select/inline gt(v(VAR`BUILDER`ALERTMODE),0)={@nscemit/noisy u(VAR`BUILDER`ALERTSCHANNEL)=%n has revoked %q<t1name>'s Builder powers.}

&VAR`BUILDER`ADMINFLAGS [u(cobj,ams)]=ADD|REM

&VAR`BUILDER`ALERTMODE [u(cobj,ams)]=1
&VAR`BUILDER`ALERTSCHANNEL [u(cobj,ams)]=u(CMO`STAFFREP)

@@ ******** IDLERS SECTION ******
&CMD`+IDLERS [u(cobj,ams)]=$^(?\:\+)?(idlers)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/INC`PARTIAL=%2,setunion(get(u(cao)/VAR`%1`PLAYFLAGS),if(isadmin(%#),get(u(cao)/VAR`%1`ADMINFLAGS)),|,|),|,%1,switch,switch;@attach %!/INC`%1`[strfirstof(%q<switch>,MAIN)]=%3,%4
@set u(cao)/CMD`+IDLERS=regexp

&INC`IDLERS`MAIN [u(cobj,ams)]=@select/inline gt(strlen(%0),0)=1,{@assert/inline valnum(u(setr,days,%0))=@pemit %#=msghead(IDLERS) ERROR: Day field must be a whole, positive integer!},{th u(setq,days,30)};@assert/inline words(u(setr,idlers,sortkey(#lambda/convtime(get(\%0/LASTLOGOUT)),setdiff(lsearch(all,eplayer,\[cand(gt(sub(secs(),convtime(get(##/LASTLOGOUT))),mul(86400,%q<days>)),not(haspower(##,GUEST)),not(isadmin(##)))\]),u(ap)),n,%b,|)))=@pemit %#=msghead(IDLERS) Nobody's been offline longer than %q<days>.;@pemit %#=header(Players over %q<days> Idle)%R[ljust(DBREF,7)][ljust(NAME,30)][ljust(STATUS,10)][ljust(IP,22)]LAST ON%R[subheader()];th iter(lnum(1,ceil(fdiv(words(u(setr,list,%q<idlers>),|),30))),nspemit(%#,iter(elements(%q<list>,lnum(add(1,mul(sub(inum(0),1),30)),mul(inum(0),30)),|,|),rjust(num(%i0),5) %B[ljust(pueblize(name(%i0),+finger [name(%i0)]),30)][ljust(if(isadmin(%i0),ansi(hy,ADM),if(approved(%i0),ansi(hg,APP),ansi(hr,UNAPP))),10)][ljust(pueblize(get(%i0/LASTIP),+ip [name(%i0)]),22)][if(gte(conn(%i0),0),ansi(hg,ago(idle(%i0))),ansi(hx,elements(get(%i0/LAST),2 3)))],|,%R)));@pemit %#=header()

&VAR`IDLERS`ADMINFLAGS [u(cobj,ams)]=
&VAR`IDLERS`PLAYFLAGS [u(cobj,ams)]=


@@ SQL SECTION

&SQL`INSTALL [u(cobj,ams)]=PLAYERS|LOGINS
&SQL`TABLE`LOGINS [u(cobj,ams)]=logins
&SQL`TABLE`PLAYERS [u(cobj,ams)]=players

&Q`INSTALL`PLAYERS [u(cobj,ams)]=CREATE TABLE IF NOT EXISTS $PLAYERS$ (player_id BIGINT(31) UNSIGNED NOT NULL AUTO_INCREMENT,objid VARCHAR(30) NOT NULL,player_name VARCHAR(60) NOT NULL DEFAULT 'Unset',PRIMARY KEY(player_id),UNIQUE KEY player_objid (objid)) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1

&Q`INSTALL`LOGINS [u(cobj,ams)]=CREATE TABLE IF NOT EXISTS $LOGINS$ (login_id BIGINT(31) UNSIGNED NOT NULL AUTO_INCREMENT, player_id BIGINT(31) UNSIGNED NOT NULL,login_date DATETIME,login_result BOOL NOT NULL DEFAULT TRUE,login_reason VARCHAR(80),login_address VARCHAR(39) NOT NULL,login_site varchar(100),login_guest BOOL NOT NULL DEFAULT FALSE,PRIMARY KEY(login_id),FOREIGN KEY(player_id) REFERENCES $PLAYERS$(player_id) ON UPDATE CASCADE ON DELETE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1