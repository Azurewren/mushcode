@@ DEPENDENCIES: Core
@@ RECOMMENDED: BBS - Installing the BBS will give each group their own +gboards.
@@ NOTE: Installation requires a @shutdown/reboot or @restart u(cobj,gms) to install grpperm().

th u(NEWCOBJ,Group Management System <GMS>,gms,,,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)
th u(NEWCOBJ,Group Object Parent <GOP>,gop,u(cobj,gms),,1,WIZARD SAFE,INHERIT SIDEFX SAFE)

&FUN`ISADMIN [u(cobj,gop)]=vol_isadmin(%#)
&FUN`MEMBER [u(cobj,gop)]=[cor(match(v(MEMBERS),objid(%#)),u(FUN`ISADMIN))]
@lock/basic [u(cobj,gop)]=FUN`MEMBER/1
@lset [u(cobj,gop)]/basic=visual
@lset [u(cobj,gop)]/basic=!no_inherit

&FUN`AUTHCHECK`MODERATE [u(cobj,gop)]=[cor(grpperm(%#,%!,MODERATE),u(FUN`ISADMIN))]
@lock/enter [u(cobj,gop)]=FUN`AUTHCHECK`MODERATE/1
@lset [u(cobj,gop)]/enter=visual
@lset [u(cobj,gop)]/enter=!no_inherit

&RANK [u(cobj,gop)]=@@ Empty attr for Rhost.
&RANK`1 [u(cobj,gop)]=@@ Empty attr for Rhost.
&RANK`2 [u(cobj,gop)]=@@ Empty attr for Rhost.
&RANK`3 [u(cobj,gop)]=@@ Empty attr for Rhost.
&RANK`4 [u(cobj,gop)]=@@ Empty attr for Rhost.

&RANK`1`NAME [u(cobj,gop)]=Leader
&RANK`1`PERM [u(cobj,gop)]=MODERATE MANAGE GBADMIN IC OOC GEMIT
&RANK`2`NAME [u(cobj,gop)]=Second
&RANK`2`PERM [u(cobj,gop)]=MODERATE MANAGE GBADMIN IC OOC GEMIT
&RANK`3`NAME [u(cobj,gop)]=Officer
&RANK`3`PERM [u(cobj,gop)]=MODERATE MANAGE IC OOC
&RANK`4`NAME [u(cobj,gop)]=Member
&RANK`4`PERM [u(cobj,gop)]=
&RANK`ALL`PERM [u(cobj,gop)]=IC OOC
&SET [u(cobj,gop)]=@@ Empty attr for Rhost.
&SET`STARTRANK [u(cobj,gop)]=4
&SET`IC [u(cobj,gop)]=1
&SET`OOC [u(cobj,gop)]=1
&SET`MAJOR [u(cobj,gop)]=0
&SET`SYSALERT [u(cobj,gop)]=3
&SET`SORT [u(cobj,gop)]=99

@@ &COLOR`GROUP`NAME u(pco)=hx
@@ &COLOR`GROUP`ICNAME u(pco)=hx
@@ &COLOR`GROUP`OOCNAME u(pco)=hx
@@ &COLOR`GROUP`ICDIVIDER u(pco)=c
@@ &COLOR`GROUP`ICEDGE u(pco)=c
@@ &COLOR`GROUP`OOCDIVIDER u(pco)=c
@@ &COLOR`GROUP`OOCEDGE u(pco)=c
@@ &COLOR`GROUP`OOCTAG u(pco)=r

&CMD`+GROUP`PENNMUSH [u(cobj,gms)]=$^(?s)(?\:\+)?g(roups|roup|who|create|desc|rename|set|option|muzzle|unmuzzle|gag|ungag|title|invite|invites|uninvite|join|refuse|add|leave|kick|addperm|delperm|addpriv|delpriv|privlist|rank|addrank|delrank|namerank|disband|ooc|ic|radio|emit|focus|log|recall)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+GROUP`MAIN
@set [u(cobj,gms)]/CMD`+GROUP`PENNMUSH=regexp
&CMD`+GROUP`RHOSTMUSH [u(cobj,gms)]=$^(?s)(?\:\+)?g(roups|roup|who|create|desc|rename|set|option|muzzle|unmuzzle|gag|ungag|title|invite|invites|uninvite|join|refuse|add|leave|kick|addperm|delperm|addpriv|delpriv|privlist|rank|addrank|delrank|namerank|disband|ooc|ic|radio|emit|focus|log|recall)(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+GROUP`MAIN
@set [u(cobj,gms)]/CMD`+GROUP`RHOSTMUSH=regexp
&CMD`+GROUP`MAIN [u(cobj,gms)]=@attach %!/INC`CHOOSE=+g,%1,%2,%3,%4
@set [u(cobj,gms)]/CMD`+GROUP`[switch(%va,PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&CMD`+DIVISION`PENNMUSH [u(cobj,gms)]=$^(?s)(?\:\+)?d(ivisions|assign|kick|unassigned|create|order|rename|disband|rank|title|addrank|delrank|namerank)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+DIVISION`MAIN
@set [u(cobj,gms)]/CMD`+DIVISION`PENNMUSH=regexp
&CMD`+DIVISION`RHOSTMUSH [u(cobj,gms)]=$^(?s)(?\:\+)?d(ivisions|assign|kick|unassigned|create|order|rename|disband|rank|title|addrank|delrank|namerank)(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+DIVISION`MAIN
@set [u(cobj,gms)]/CMD`+DIVISION`RHOSTMUSH=regexp
&CMD`+DIVISION`MAIN [u(cobj,gms)]=@attach %!/INC`CHOOSE=+d,%1,%2,%3,%4
@set [u(cobj,gms)]/CMD`+DIVISION`[switch(%va,PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&SYSTEM`NAME [u(cobj,gms)]=GROUP

&INC`CHOOSE [u(cobj,gms)]=@select/inline 1=cor(strmatch(%0,+g),strmatch(%0,+d)),{@attach %!/INC`PARTIAL=%2,setunion(get(%!/SWITCHES`PLAYER`%0`%1),if(u(isadmin`%va,%#),get(%!/SWITCHES`ADMIN`%0`%1)),|,|),|,switch,switch;@attach %!/INC`CHOOSE`%0`%1`[u(strfirstof`%va,%q<switch>,MAIN)]=%3,%4},{@attach %!/INC`MSG=ERROR: Unknown code error. Please contact staff.}

&SWITCHES`PLAYER`+G`OOC [u(cobj,gms)]=GAG|UNGAG|ON|OFF|RECALL
&SWITCHES`PLAYER`+G`IC [u(cobj,gms)]=GAG|UNGAG|ON|OFF|RECALL
&SWITCHES`PLAYER`+G`RADIO [u(cobj,gms)]=GAG|UNGAG|ON|OFF|RECALL

&INC`CHOOSE`+G`CREATE`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`CREATE
&INC`CODE`CREATE [u(cobj,gms)]=@check u(isadmin`%va,%#)=@attach %!/INC`MSG=ERROR: Permission denied. Admin-only command.;@attach %!/INC`CODE`DOCREATE=%0,1;@attach %!/INC`MSG=You have created the [ansi(hw,%q<gname1>)];@select/inline u(setr`%va,res,t(strlen(%1))[isdbref(pmatch(%1))])=11,{@attach %!/INC`CHECKPC=%1,1;@attach %!/INC`CODE`ADDTOGROUP=%q<gid1>,%q<t1objid>,{%n added you to the %q<gname1> Group!},1;@attach %!/INC`MSG=You set %q<t1name> as leader of the %q<gname1>!},10,{@attach %!/INC`MSG=The group was created, but '%1' does not match a player!},0*,{@attach %!/INC`MSG=The Group '%0' was created.};@attach %!/INC`MSG`CHAN=Created group '%q<gname1>'.[if(%q<t1>,%b%q<t1name> is its leader.)];@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Created the Group.[if(isobjid(%q<t1objid>),%B%q<t1name> is its leader.)]};@attach %!/INC`CODE`SWITCH=%q<gid1>

&INC`CODE`DOCREATE [u(cobj,gms)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: Group name field empty.;@check valid(name,%0)=@attach %!/INC`MSG=ERROR: Bad name for a group!;@stop isdbref(u(find_in`%va,u(cobj,gop),%0))=@attach %!/INC`MSG=ERROR: A Group already has that name!;@check strlen(%0);th u(setr`%va,gid%1,create(u(setr`%va,gname%1,trim(stripansi(%0)))));@check isdbref(r(gid%1))=@attach %!/INC`MSG=ERROR: Group could not be created.;@tel [r(gid%1)]=[u(cobj,gop)];@parent [r(gid%1)]=[u(cobj,gop)];@power [r(gid%1)]=many_attribs;@set [r(gid%1)]=[switch(%va,PennMUSH,WIZARD SAFE,RhostMUSH,INHERIT SAFE)]

&INC`CHOOSE`+D`CREATE`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`CREATE`DIV
&INC`CODE`CREATE`DIV [u(cobj,gms)]=@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%0)=@attach %!/INC`MSG=ERROR: Division name field empty.;@check valid(name,%0)=@attach %!/INC`MSG=ERROR: Division name was not accepted. Keep it simple!;@stop words(u(wildgrepi`%va,%q<gid1>,DIVISION`*,u(setr`%va,divname,trim(%0))))=@attach %!/INC`MSG=ERROR: A division already has that name.;th u(attrib_set`%va,%q<gid1>,u(setr`%va,attr,DIVISION`[u(setr`%va,div,u(nextslot,%q<gid1>,DIVISION))]),%q<divname>);th u(attrib_set`%va,%q<gid1>,%q<attr>`RANK`1,Division Leader);th u(attrib_set`%va,%q<gid1>,%q<attr>`RANK`2,Second in Command);th u(attrib_set`%va,%q<gid1>,%q<attr>`RANK`3,Member);@select/inline u(setr`%va,res,t(strlen(%1))[isdbref(pmatch(%1))])=11,{@attach %!/INC`CHECKPC=%1,1;@attach %!/INC`CODE`ADDTODIVISION=%q<gid1>,%q<t1objid>,{%n added you to the %q<gname1>'s new division: %0},1,%q<div>;@attach %!/INC`MSG=You set %q<t1name> as leader of the %q<gname1>'s Division: %0!},10,{@attach %!/INC`MSG=The Division was created\, but '%1' does not match a player!},0*,{@attach %!/INC`MSG=The Division '%0' was created.};@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Created the Division '%0' as division %q<div>.[if(isobjid(%q<t1objid>),%B%q<t1name> is its leader.)]}

&FUN`FINDGROUP [u(cobj,gms)]=u(namegrab`%va,u(FUN`LISTGROUPS),%0)

&FUN`LISTGROUPS [u(cobj,gms)]=u(sortgroups,u(sortname`%va,children(u(cobj,gop))))

&INC`CODE`MAKELOG [u(cobj,gms)]=@@ th u(attrib_set`%va,%1,u(setr`%va,log,LOG`[u(nextslot,%1,LOG)]),%2);@@ &%q<log>`SUBMITTER %1=%0;@@ &%q<log>`SUBMITTED %1=secs()

&INC`CODE`VALGROUP [u(cobj,gms)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: No group entered to check.;@check u(valnum,%1)=@attach %!/INC`MSG=ERROR: Code error\, contact staff.;@check isdbref(u(setr`%va,gid%1,u(u(cobj,gms)/FUN`FINDGROUP,%0)))=@attach %!/INC`MSG=ERROR: Group not found.;th u(setq`%va,gname%1,name(r(gid%1)))

&INC`CODE`VALDIV [u(cobj,gms)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: No division entered to check.;@select/inline u(valnum,%0)=1,{@check hasattr(%q<gid1>/DIVISION`[u(setr`%va,div,trim(%0))])=@attach %!/INC`MSG=ERROR: Division by that ID does not exist.},0,{@check words(u(setr`%va,div,last(first(u(wildgrepi`%va,%q<gid1>,DIVISION`*,%0*)),`)))=@attach %!/INC`MSG=ERROR: Division called '%0' not found.};th u(setq`%va,divname,get(%q<gid1>/DIVISION`%q<div>))

&INC`CHOOSE`+G`RENAME`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`RENAME
&INC`CODE`RENAME [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of %q<gname1>.;@check u(FUN`GRPPERM,%:,%q<gid1>,RENAME)=@attach %!/INC`MSG=ERROR: Permission Denied.;@check strlen(%0)=@attach %!/INC`MSG=ERROR: Name field empty.;@stop isdbref(u(find_in`%va,u(cobj,gop),%0))=@attach %!/INC`MSG=ERROR: A Group already has that name.;@name %q<gid1>=%0;@attach %!/INC`CODE`MAKELOG=%:,q<gid1>,{Group renamed to: %0};@attach %!/INC`CODE`CHAT={%n Renamed the Group to %0},OOC,1

&INC`CHOOSE`+G`DESC`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`DESC
&INC`CODE`DESC [u(cobj,gms)]=@check u(isadmin`%va,%#)=@attach %!/INC`MSG=ERROR: Permission Denied.;@check strlen(%0%1)=@attach %!/INC`MSG=ERROR: Desc field empty.;@describe %q<gid1>=%0%1;@attach %!/INC`CODE`MAKELOG=%:,q<gid1>,{Group redesced to: %0%1};@attach %!/INC`CODE`CHAT={%n described the group: %0%1},OOC,1

&INC`CHOOSE`+D`RENAME`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`RENAME`DIV
&INC`CODE`RENAME`DIV [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of %q<gname1>.;@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: Permission Denied.;@attach %!/INC`CODE`VALDIV=%0;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Name field empty.;@check valid(name,%1)=@attach %!/INC`MSG=ERROR: Division name was not accepted. Keep it simple!;@stop words(u(wildgrepi`%va,%q<gid1>,DIVISION`*,u(setr`%va,newdivname,trim(%1))))=@attach %!/INC`MSG=ERROR: A division by that name already exists.;&DIVISION`%q<div> %q<gid1>=%1;@attach %!/INC`CODE`MAKELOG=%:,q<gid1>,{Division %q<div>: %q<divname> renamed to: %q<newdivname>};@attach %!/INC`CODE`CHAT={%n Renamed Division %q<div>: %q<divname> to %q<newdivname>},OOC,1

&INC`CHOOSE`+D`ORDER`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`ORDER`DIV
&INC`CODE`ORDER`DIV [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of %q<gname1>.;@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: Permission Denied.;@attach %!/INC`CODE`VALDIV=%0;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Order field empty.;@check u(valnum,u(setr`%va,ord,trim(%1)))=@attach %!/INC`MSG=ERROR: Order must be a whole positive number.;&DIVISION`%q<div>`ORDER %q<gid1>=%q<ord>;@attach %!/INC`CODE`MAKELOG=%:,q<gid1>,{Division %q<div>: %q<divname> order set to: %q<ord>};@attach %!/INC`CODE`CHAT={%n Set Division %q<div>: %q<divname> ORDER to %q<ord>},OOC,1

&ISGROUPMEMBER [u(cobj,gms)]=elock(if(isdbref(%1),%1,u(FUN`FINDGROUP,%1)),%0)

&INC`CHOOSE`+G`DISBAND`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,%0,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`DISBAND
&INC`CODE`DISBAND [u(cobj,gms)]=@check u(FUN`GRPPERM,%:,%q<gid1>,DISBAND)=@attach %!/INC`MSG=ERROR: Permission denied.;@select/inline t(u(FUN`GETSET,%q<gid1>,MAJOR))=1,{@check u(iswizard`%va,%#)=@attach %!/INC`MSG=ERROR: Disbanding of MAJOR groups is WIZ-ONLY.};@check strmatch(%0,%q<gname1>)=@attach %!/INC`MSG=ERROR: To disband a group\, you must also enter its exact name.;@attach %!/INC`VERIFY={WARNING: This will completely disband %q<gname1>. Are you sure you want to continue? Enter the same command again within 10 seconds to Verify!},FAC DELETE %q<gid1>;@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n has Disbanded the Group!},OOC,1;@parent %q<gid1>;@name %q<gid1>=%q<gname1>-OLD;@attach %!/INC`MSG=The Group has been disbanded. It has been moved to storage. If this was in error\, please have a wizard [ansi(h,@parent %q<gid1>=[u(cobj,gop)])] and [ansi(h,@name %q<gid1>=%q<gname1>)];@attach %!/INC`MSG`CHAN=DISBANDED Group: %q<gname1>. If this was in error\, a wizard can undo this by typing [ansi(h,@parent %q<gid1>=[u(cobj,gop)])] and [ansi(h,@name %q<gid1>=%q<gname1>)]. If This was intentional\, a wizard will need to manually dispose of object %q<gid1> and any Boards it contains. Deletion or relocation will initiate player setting cleanup.;@dolist/inline get(%q<gid1>/MEMBERS)={@attach %!/WIPE=##,D`CACHE}

&PLAYER`CONNECT`GROUPCLEAN [u(cobj,gms)]=@check u(nattr`%va,%0/D`GROUP`*);@check words(u(setr`%va,dbs,edit(u(lattr`%va,%0/D`GROUP`#*),D`GROUP`,)));@check words(u(setr`%va,purge,setdiff(%q<dbs>,lthings(u(cobj,gop)))));@dolist %q<purge>={@attach %!/WIPE=%0,D`GROUP`##;@attach %!/WIPE=%0,D`CACHE}

&PLAYER`DISCONNECT`CLEANGAG [u(cobj,gms)]=@stop %1;@wipe %0/D`GROUP`#*`*GAG

&INC`CHOOSE`+D`DISBAND`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`DISBAND`DIV
&INC`CODE`DISBAND`DIV [u(cobj,gms)]=@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CODE`VALDIV=%0;@attach %!/INC`VERIFY={[ansi(hr,WARNING:)] This will completely disband %q<gname1>'s [u(numth,%q<div>)] Division: %q<divname>. Are you sure you want to continue? Enter the same command again within 10 seconds to Verify!},DIV DISBAND %q<gid1> %q<div>;@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n has Disbanded Division %q<div>: %q<divname>},OOC,1;@dolist get(%q<gid1>/DIVISION`%q<div>`MEMBERS)={@attach %!/WIPE=##,D`GROUP`%q<gid1>`DIVISON`%q<div>};@attach %!/WIPE=%q<gid1>,DIVISION`%q<div>

@@ GROUP LISTING

&INC`CHOOSE`+G`ROUP`MAIN [u(cobj,gms)]=@select/inline gt(strlen(%0),0)=1,{@attach %!/INC`CODE`SWITCH},0,{@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`LISTMEMBERS}

&INC`CHOOSE`+G`WHO`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,%0,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`LISTMEMBERS=%0,%1,1

&INC`CHOOSE`+G`FOCUS`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=%0,1;@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group!;@attach %!/INC`MSG=You are now managing: [ansi(hw,%q<gname1>)];th u(setstat,%#,D`GROUP,Group,%q<gid1>)

&INC`CODE`SWITCH [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=%0,1;@attach %!/INC`CODE`LISTMEMBERS=0,1;@select/inline cand(u(isgroupmember,%:,%q<gid1>),not(strmatch(u(getstat,%#,D`GROUP,Group),%q<gid1>)))=1,{@attach %!/INC`MSG=You are now managing: [ansi(hw,%q<gname1>)];th u(setstat,%#,D`GROUP,Group,%q<gid1>)}

&INC`CODE`LISTMEMBERS [u(cobj,gms)]=@pemit %#=u(header,if(%2,ONLINE%B)MEMBERS: %q<gname1>);@select/inline cand(not(%2),hasattr(%q<gid1>/DESCRIBE))=1,{@pemit %#=get(%q<gid1>/DESCRIBE);@pemit %#=u(separator)};@select/inline cand(gt(strlen(u(setr`%va,type,u(FUN`GETSET,%q<gid1>,TYPE))),0),hasattr(%!/INC`CODE`LISTMEMBERS`%q<type>))=1,{@attach %!/INC`CODE`LISTMEMBERS`%q<type>},0,{@pemit %#=ansi(u(color`%va,%#,GROUPS,COLUMN_NAMES),align(20 20 25 10,Name,Rank,Title,Last/Idle))%R[u(separator)];@dolist/inline u(sortrank,if(%2,u(sortname`%va,setinter(u(filter,ISOBJID,get(%q<gid1>/MEMBERS)),u(lwhoid`%va,%#))),u(sortname`%va,u(filter,ISOBJID,get(%q<gid1>/MEMBERS)))))={@pemit %#=align(20 20 25 >10,u(mxpmenu`%va,u(moniker`%va,##),+finger [name(##)]),get(%q<gid1>/RANK`[u(FUN`GETRANK,%q<gid1>,##,1)]`NAME),get(##/D`GROUP`%q<gid1>`TITLE),u(lastidle,##,%#))}};@pemit %#=u(header)

&SORTRANK [u(cobj,gms)]=u(SORTRANK`%va,%0,if(strlen(%1),%1,%B),if(strlen(%2),%2,%B))
&SORTRANK`PENNMUSH [u(cobj,gms)]=sortkey(#lambda/u(FUN`GETRANK,%q<gid1>,\%0,1),%0,n,%1,%2)
&SORTRANK`RHOSTMUSH [u(cobj,gms)]=sortby(#lambda/[lit([ncomp(u(FUN`GETRANK,%q<gid1>,%0,1),u(FUN`GETRANK,%q<gid1>,%1,1))])],%0,%1,%2)

&INC`CODE`LISTMEMBERS`FACTION [u(cobj,gms)]=@pemit %#=ansi(u(color`%va,%#,GROUPS,COLUMN_NAMES),iter(lnum(1,div(u(width`%va,%#),38)),Name[space(29)]Rank%B));@pemit %#=u(separator);th step(FUN`LISTMEMBERS`FACTION,u(sortrank,if(%2,u(sortname`%va,setinter(u(filter,ISOBJID,get(%q<gid1>/MEMBERS)),u(lwhoid`%va,%#))),u(sortname`%va,u(filter,ISOBJID,get(%q<gid1>/MEMBERS))))),bound(div(u(width`%va,%#),38),1,10))

@@ I don't even know what this one is here for anymore.
@@ &FUN`LISTMEMBERS`FACTION [u(cobj,gms)]=pemit(%#,u(table`%va,iter(lnum(0,sub(%+,1)),u(mxpmenu`%va,u(setr`%va,name,u(moniker`%va,v(%i0))),+finger %q<name>)%B[rjust(left(u(setr`%va,rank,u(FUN`GETRANK,%q<gid1>,v(%i0),1)-[u(strfirstof`%va,get(v(%i0)/D`GROUP`%q<gid1>`TITLE),get(%q<gid1>/RANK`[u(FUN`GETRANK,%q<gid1>,v(%i0),1)]`NAME))]),sub(37,strlen(%q<name>),1)),sub(37,strlen(%q<name>),1))],%b,|),37,u(width`%va,%#),|))

&FUN`LISTMEMBERS`FACTION [u(cobj,gms)]=pemit(%#,trim(iter(iter(lnum(0,sub(%+,1)),u(mxpmenu`%va,u(setr`%va,name,u(moniker`%va,v(%i0))),+finger %q<name>)%B[rjust(left(u(setr`%va,rank,u(FUN`FACRANK,%q<gid1>,v(%i0))),sub(37,strlen(%q<name>),1)),sub(37,strlen(%q<name>),1))],%b,|),ljust(%i0,38),|,%b)))

&FUN`FACRANK [u(cobj,gms)]=u(FUN`GETRANK,%0,%1,1)-[u(strfirstof`%va,get(%1/D`GROUP`%0`TITLE),get(%0/RANK`[u(FUN`GETRANK,%0,%1,1)]`NAME))]

&INC`CODE`LISTMEMBERS`DIVISIONAL [u(cobj,gms)]=@pemit %#=ansi(u(color`%va,%#,GROUP,COLUMN_NAMES),align(19 5 21 20 10,Name,R#,Rank,Title,Last/Idle));@pemit %#=u(separator,Command Staff);@dolist/inline u(sortrank,u(filter,COMMAND,u(setr`%va,mainlist,if(%2,u(sortname`%va,setinter(u(filter,ISOBJID,get(%q<gid1>/MEMBERS)),u(lwhoid`%va,%#))),u(sortname`%va,u(filter,ISOBJID,get(%q<gid1>/MEMBERS))))),%b,%b,%q<gid1>))={@pemit %#=align(19 5 21 19 >10,u(mxpmenu`%va,u(moniker`%va,%i0),+finger [name(%i0)]),u(FUN`GETRANK,%q<gid1>,##,1),get(%q<gid1>/RANK`[u(FUN`GETRANK,%q<gid1>,##,1)]`NAME),get(##/D`GROUP`%q<gid1>`TITLE),u(lastidle,##,%#))};@dolist/inline u(sortdiv,u(lattr`%va,%q<gid1>/DIVISION`*))={@pemit %#=u(separator,get(%q<gid1>/[u(choosegame,%i0,%d0)]));th u(setq`%va,div,u(choosegame,%i0,%d0));@dolist/inline u(sortdivrank,u(filter,DIVMEMBERS,%q<mainlist>,%b,%b,%q<gid1>,%q<div>))={@pemit %#=align(19 5 21 19 >10,u(mxpmenu`%va,u(moniker`%va,u(choosegame,%i0,%d0)),+finger [name(u(choosegame,%i0,%d0))]),u(FUN`GETRANK,%q<gid1>,u(choosegame,%i0,%d0),1)-[get(u(choosegame,%i0,%d0)/D`GROUP`%q<gid1>`[u(choosegame,%i1,%d1)]`RANK)],get(%q<gid1>/[u(choosegame,%i1,%d1)]`RANK`[get(u(choosegame,%i0,%d0)/D`GROUP`%q<gid1>`[u(choosegame,%i1,%d1)]`RANK)]),u(strfirstof`%va,get(u(choosegame,%i0,%d0)/D`GROUP`%q<gid1>`[u(choosegame,%i1,%d1)]`TITLE),get(u(choosegame,%i0,%d0)/D`GROUP`%q<gid1>`TITLE)),u(lastidle,u(choosegame,%i0,%d0),%#))}};@select/inline gt(words(u(setr`%va,unset,u(filter,NOTDIV,%q<mainlist>,%b,%b,%q<gid1>))),0)=1,{@pemit %#=u(separator,Unassigned Members);@dolist/inline u(sortrank,%q<unset>)=@pemit %#=align(19 5 21 19 >10,u(mxpmenu`%va,u(moniker`%va,##),+finger [name(%i0)]),u(FUN`GETRANK,%q<gid1>,%i0,1),get(%q<gid1>/RANK`[u(FUN`GETRANK,%q<gid1>,%i0,1)]`NAME),get(##/D`GROUP`%q<gid1>`TITLE),u(lastidle,##,%#))}

&FIL`DIVMEMBERS [u(cobj,gms)]=t(match(get(%1/%2`MEMBERS),objid(%0)))

&SORTDIV [u(cobj,gms)]=u(SORTDIV`%va,%0,if(strlen(%1),%1,%B),if(strlen(%2),%2,%B))
&SORTDIV`PENNMUSH [u(cobj,gms)]=sortkey(#lambda/default(%q<gid1>/\%0`ORDER,99),%0,n,%1,%2)
&SORTDIV`RHOSTMUSH [u(cobj,gms)]=sortby(#lambda/[lit([ncomp(default(%q<gid1>/%0`ORDER,99),default(%q<gid1>/%1`ORDER,99))])],%0,%1,%2)

&SORTDIVRANK [u(cobj,gms)]=u(SORTDIVRANK`%va,%0,if(strlen(%1),%1,%B),if(strlen(%2),%2,%B))
&SORTDIVRANK`PENNMUSH [u(cobj,gms)]=sortkey(#lambda/default(\%0/D`GROUP`%q<gid1>`%q<div>`RANK,99),%0,n,%1,%2)
&SORTDIVRANK`RHOSTMUSH [u(cobj,gms)]=sortby(#lambda/[lit([ncomp(default(%0/D`GROUP`%q<gid1>`%q<div>`RANK,99),default(%1/D`GROUP`%q<gid1>`%q<div>`RANK,99))])],%0,%1,%2)

&FIL`COMMAND [u(cobj,gms)]=lte(u(FUN`GETRANK,%1,%0,1),u(FUN`GETSET,%1,COMMAND))
&FIL`NOTDIV [u(cobj,gms)]=cand(gt(u(FUN`GETRANK,%1,%0,1),u(FUN`GETSET,%1,COMMAND)),not(u(lmax`%va,iter(u(lattr`%va,%1/DIVISION`*`MEMBERS),match(get(%1/%i0),objid(%0))))))

&INC`CHOOSE`+D`IVISIONS`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`LISTDIVS

&INC`CODE`LISTDIVS [u(cobj,gms)]=@pemit %#=u(HEADER,DIVISIONS: %q<gname1>);@pemit %#=ansi(u(color`%va,%#,GROUPS,COLUMN_NAMES),align(24 21 20 10,Name,Rank,Title,Last/Idle));@dolist/inline u(sortdiv,u(lattr`%va,%q<gid1>/DIVISION`*))={@pemit %#=u(separator,ID \([last(##,`)]\) - [get(%q<gid1>/##)]);th u(setq`%va,div,##);@dolist/inline u(sortdivrank,u(filter,DIVMEMBERS,get(%q<gid1>/##`MEMBERS),%b,%b,%q<gid1>,%q<div>))={@pemit %#=align(24 21 19 >10,u(mxpmenu`%va,u(moniker`%va,u(choosegame,%i0,%d0)),+finger [name(u(choosegame,%i0,%d0))]),get(%q<gid1>/[u(choosegame,%i1,%d1)]`RANK`[get(u(choosegame,%i0,%d0)/D`GROUP`%q<gid1>`[u(choosegame,%i1,%d1)]`RANK)]),u(strfirstof`%va,get(u(choosegame,%i0,%d0)/D`GROUP`%q<gid1>`[u(choosegame,%i1,%d1)]`TITLE),get(u(choosegame,%i0,%d0)/D`GROUP`%q<gid1>`TITLE)),u(lastidle,u(choosegame,%i0,%d0),%#))}};@pemit %#=u(subheader)

&INC`CHOOSE`+G`ROUPS`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`GROUPLIST

&FUN`GETSET [u(cobj,gms)]=get(%0/SET`%1)

&FUN`LISTRANKNAMES [u(cobj,gms)]=u(itemize`%va,u(strfirstof`%va,iter(filterbool(#lambda/eq(u(FUN`GETRANK,%0,\%0,1),%1),get(%0/MEMBERS)),u(mxpmenu`%va,u(moniker`%va,%i0),+finger [name(%i0)]),%b,|),None),|,and,\,)

&INC`CODE`GROUPLIST [u(cobj,gms)]=@pemit %#=u(header,mudname() Group List);@pemit %#=u(separator,Major Groups)%R[ansi(u(color`%va,%#,GROUPS,COLUMN_NAMES),align(27 20 20 7,Name,Leader,Second,Members))];@dolist/inline u(filter,MAJORGROUPS,u(setr`%va,grouplist,u(FUN`LISTGROUPS)))={@pemit %#=align(27 20 20 7,u(mxpmenu`%va,if(strlen(setr(col,u(strfirstof`%va,u(color`%va,%#,GROUP,##,,1),u(FUN`GETSET,##,COLOR)))),ansi(%q<col>,name(##)),u(moniker`%va,##)),+group [name(##)]),u(FUN`LISTRANKNAMES,##,1),u(FUN`LISTRANKNAMES,##,2),rjust(words(setinter(u(lwhoid`%va,%#),u(setr`%va,members,get(##/MEMBERS)))),2,0)/[rjust(words(%q<members>),2,0)])};@pemit %#=u(separator,Minor Groups)%R[ansi(u(color`%va,%#,GROUPS,COLUMN_NAMES),align(27 20 20 7,Name,Leader,Second,Members))];@dolist/inline u(filter,MINORGROUPS,%q<grouplist>)={@pemit %#=align(27 20 20 7,u(mxpmenu`%va,if(strlen(setr(col,u(strfirstof`%va,u(color`%va,%#,GROUP,##,,1),u(FUN`GETSET,##,COLOR)))),ansi(%q<col>,name(##)),u(moniker`%va,##)),+group [name(##)]),u(FUN`LISTRANKNAMES,##,1),u(FUN`LISTRANKNAMES,##,2),rjust(words(setinter(u(lwhoid`%va,%#),u(setr`%va,members,get(##/MEMBERS)))),2,0)/[rjust(words(%q<members>),2,0)])};@pemit %#=u(subheader,'+group <groupname>' for details)

&FIL`MAJORGROUPS [u(cobj,gms)]=u(FUN`GETSET,%0,MAJOR)
&FIL`MINORGROUPS [u(cobj,gms)]=eq(u(FUN`GETSET,%0,MAJOR),0)

@@ MEMBERSHIP CONTROL
&INC`CODE`ADDTOGROUP [u(cobj,gms)]=&MEMBERS %0=setunion(get(%0/MEMBERS),objid(%1));@attach %!/INC`MSG`NOTICE=%2,%1;&D`GROUPS %1=setunion(get(%1/D`GROUPS),num(%0));th u(attrib_set`%va,%1,D`GROUP`%0`RANK,u(strfirstof`%va,%3,u(FUN`GETSET,%0,STARTRANK),3));&INVITES %0=setdiff(get(%0/INVITES),objid(%1));@attach %!/WIPE=%1,D`CACHE

&INC`CODE`ADDTODIVISION [u(cobj,gms)]=&DIVISION`%4`MEMBERS %0=setunion(get(%0/DIVISION`%1`MEMBERS),objid(%1));@attach %!/INC`MSG`NOTICE=%2,%1;th u(attrib_set`%va,%1,D`GROUP`%0`DIVISION`%4`RANK,%#)

&INC`CODE`REMFROMGROUP [u(cobj,gms)]=&MEMBERS %0=setdiff(get(%0/MEMBERS),objid(%1));@attach %!/INC`MSG`NOTICE=%2,%1;th u(delstat,%0,RANK,objid(%1));@attach %!/WIPE=%1,D`GROUP`%0;@dolist/inline u(filter,ISDIVMEMBER,u(lattr`%va,%0/DIVISION`*`MEMBERS),%b,%b,%1,%0)=@attach %!/INC`CODE`REMFROMDIVISION=%0,%1,,,elements(##,2,`);&D`GROUPS %1=setdiff(get(%1/D`GROUPS),num(%0));@attach %!/WIPE=%1,D`CACHE

&FIL`ISDIVMEMBER [u(cobj,gms)]=match(get(%2/%0),objid(%1))

&INC`CODE`REMFROMDIVISION [u(cobj,gms)]=&DIVISION`%4`MEMBERS %0=setdiff(get(%0/DIVISION`%4`MEMBERS),objid(%1));@attach %!/INC`MSG`NOTICE=%2,%1;th u(delstat,%0,DIVISION`%4`RANK,objid(%1))

&INC`CHOOSE`+G`ADD`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,if(strlen(%1),%1),u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`ADD
&INC`CODE`ADD [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@check u(FUN`GRPPERM,%:,%q<gid1>,ADD)=@attach %!/INC`MSG=ERROR: You do not have permission to do that.;@attach %!/INC`CHECKPC=%0,1;@stop match(get(u(cobj,gop)/%q<gid1>`MEMBERS),%q<t1objid>)=@attach %!/INC`MSG=ERROR: They are already a member of the Group.;@attach %!/INC`CODE`ADDTOGROUP=%q<gid1>,%q<t1objid>,Added you to the %q<gname1> Group!;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Added %q<t1name>.};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n added %q<t1name> to the Group!},OOC,1

&INC`CHOOSE`+D`ASSIGN`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`ASSIGN`DIV
&INC`CODE`ASSIGN`DIV [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: You do not have permission to do that.;@attach %!/INC`CHECKPC=%0,1;@check match(get(%q<gid1>/MEMBERS),%q<t1objid>)=@attach %!/INC`MSG=ERROR: They are not a member of the Group!;@attach %!/INC`CODE`VALDIV=%1;@stop match(get(%q<gid1>/DIVISION`%q<div>`MEMBERS),%q<t1objid>)=@attach %!/INC`MSG=ERROR: They are already a member of that Division.;@attach %!/INC`CODE`ADDTODIV=%q<gid1>,%q<t1objid>,{Added you to the %q<gname1>'s [u(numth,%q<div>)] Division: %q<divname>},%q<div>;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Added %q<t1name> to Division %q<div>: %q<divname>};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n added %q<t1name> to the [u(numth,%q<div>)] Division: %q<divname>},OOC,1

&INC`CODE`ADDTODIV [u(cobj,gms)]=&DIVISION`%3`MEMBERS %0=setunion(get(%0/DIVISION`%3`MEMBERS),%1);@attach %!/INC`MSG`NOTICE=%2,%1;&D`GROUP`%0`DIVISION`%3`RANK %1=lmath(max,iter(u(lattr`%va,%0/DIVISION`%3`RANK`*),last(%i0,`)))

&INC`CODE`REMFROMDIV [u(cobj,gms)]=&DIVISION`%3`MEMBERS %0=setdiff(get(%0/DIVISION`%3`MEMBERS),%1);@attach %!/INC`MSG`NOTICE=%2,%1;@wipe %1/D`GROUP`%0`DIVISION`%3

&INC`CHOOSE`+D`KICK`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`KICK`DIV
&INC`CODE`KICK`DIV [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: You do not have permission to do that.;@attach %!/INC`CHECKPC=%0,1;@check match(get(%q<gid1>/MEMBERS),%q<t1objid>)=@attach %!/INC`MSG=ERROR: They are not a member of the Group.;@check lte(u(FUN`GETRANK,%q<gid1>,%:),u(FUN`GETRANK,%q<gid1>,%q<t1objid>))=@attach %!/INC`MSG=ERROR: Cannot kick those of higher rank.;@attach %!/INC`CODE`VALDIV=%1;@check match(get(%q<gid1>/DIVISION`%q<div>`MEMBERS),%q<t1objid>)=@attach %!/INC`MSG=ERROR: They are not a member of that Division.;@attach %!/INC`CODE`REMFROMDIV=%q<gid1>,%q<t1objid>,{Removed you from the %q<divname> division!},%q<div>;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{%q<t1name> was kicked from Division %q<div>: %q<divname>};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n removed %q<t1name> from Division %q<div>: %q<divname>},OOC,1

&INC`CHOOSE`+G`LEAVE`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`LEAVE
&INC`CODE`LEAVE [u(cobj,gms)]=@check match(get(%q<gid1>/MEMBERS),%:)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@stop eq(1,u(FUN`GETRANK,%q<gid1>,%:))=@attach %!/INC`MSG=ERROR: Leaders may not leave their groups. Please contact staff.;@attach %!/INC`CODE`REMFROMGROUP=%q<gid1>,%:,{You left the %q<gname1> Group!};@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{%q<t1name> left the group.};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n left the Group},OOC,1

&INC`CHOOSE`+G`KICK`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`KICK
&INC`CODE`KICK [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: You do not have permission to do that.;@attach %!/INC`CHECKPC=%0,1;@check match(get(%q<gid1>/MEMBERS),%q<t1objid>)=@attach %!/INC`MSG=ERROR: They are not a member of the Group.;@check lte(u(FUN`GETRANK,%q<gid1>,%:),u(FUN`GETRANK,%q<gid1>,%q<t1objid>))=@attach %!/INC`MSG=ERROR: Cannot kick those of higher rank.;@attach %!/INC`CODE`REMFROMGROUP=%q<gid1>,%q<t1objid>,{Removed you from the %q<gname1> Group!};@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{%q<t1name> was kicked.};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n removed %q<t1name> from the Group},OOC,1

&INC`CHOOSE`+G`INVITE`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`INVITE
&INC`CODE`INVITE [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: You do not have permission to do that.;@select/inline gt(strlen(%0),0)=1,{@attach %!/INC`CHECKPC=%0,1;@stop u(isgroupmember,%q<t1objid>,%q<gid1>)=@attach %!/INC`MSG=ERROR: They are already a member of the Group.;@stop match(get(%q<gid1>/INVITES),%q<t1objid>)=@attach %!/INC`MSG=ERROR: %q<t1name> has already been invited to %q<gname1>.;&INVITES %q<gid1>=setunion(get(%q<gid1>/INVITES),%q<t1objid>);@attach %!/INC`MSG=%n has invited you to join the %q<gname1>! To accept\, type [u(mxpmenu`%va,ansi(h,+gjoin %q<gname1>),+gjoin %q<gname1>)] or Refuse using [u(mxpmenu`%va,ansi(h,+grefuse %q<gname1>),+grefuse %q<gname1>)].,%q<t1>;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Invite sent to %q<t1name>.};@attach %!/INC`MSG=You have invited %q<t1name> to the %q<gname1>},0,{@attach %!/INC`MAIN`SHOWINVITES}

&INC`CHOOSE`+G`UNINVITE`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`UNINVITE
&INC`CODE`UNINVITE [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: You do not have permission to do that.;@select/inline gt(strlen(%0),0)=1,{@attach %!/INC`CHECKPC=%0,1;@stop u(isgroupmember,%q<t1objid>,%q<gid1>)=@attach %!/INC`MSG=ERROR: They're already a member of the group.;@check match(get(%q<gid1>/INVITES),%q<t1objid>)=@attach %!/INC`MSG=ERROR: %q<t1name> has not been invited to %q<gname1>.;&INVITES %q<gid1>=setdiff(get(%q<gid1>/INVITES),%q<t1objid>);@attach %!/INC`MSG=%n withdrew your invitation to join the %q<gname1>!,%q<t1>;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Invite withdrawn from %q<t1name>.};@attach %!/INC`MSG=You have withdrawn the invitation to %q<t1name> for the %q<gname1>},0,{@attach %!/INC`MAIN`SHOWINVITES}

&INC`MAIN`SHOWINVITES [u(cobj,gms)]=@pemit %#=u(header,%q<gname1>'s Pending Invites);@pemit %#=u(itemize`%va,iter(u(setr`%va,invites,u(filter,ISOBJID,get(%q<gid1>/INVITES))),name(%i0),%b,|),|,and,\,);@pemit %#=u(subheader);&INVITES %q<gid1>=%q<invites>

&INC`CHOOSE`+G`JOIN`MAIN [u(cobj,gms)]=@select/inline gt(strlen(%0),0)=1,{@attach %!/INC`CODE`VALGROUP=%0,1;@attach %!/INC`CODE`JOIN},0,{@attach %!/INC`CODE`MYINVITES}
&INC`CODE`JOIN [u(cobj,gms)]=@stop match(get(u(cobj,gop)/%q<gid1>`MEMBERS),%:)=@attach %!/INC`MSG=ERROR: You are already a member of the Group.;@check match(get(%q<gid1>/invites),%:)=@attach %!/INC`MSG=ERROR: You have not been invited to join that Group.;@attach %!/INC`CODE`ADDTOGROUP=%q<gid1>,%:,{You have joined the %q<gname1> Group!};@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{%q<t1name> joined.};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n joined the Group!},OOC,1

&INC`CHOOSE`+G`REFUSE`MAIN [u(cobj,gms)]=@select/inline gt(strlen(%0),0)=1,{@attach %!/INC`CODE`VALGROUP=%0,1;@attach %!/INC`CODE`REFUSE},0,{@attach %!/INC`CODE`MYINVITES}
&INC`CODE`REFUSE [u(cobj,gms)]=@stop match(get(u(cobj,gop)/%q<gid1>`MEMBERS),%:)=@attach %!/INC`MSG=ERROR: You are already a member of the Group.;@check match(get(%q<gid1>/INVITES),%:)=@attach %!/INC`MSG=ERROR: You have not been invited to join that Group.;&INVITES %q<gid1>=setdiff(get(%q<gid1>/INVITES),%:);@attach %!/INC`MSG=You have rejected joining the %q<gname1> Group!;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{%q<t1name> rejected joining.};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n rejected [poss(%#)] invitation!},OOC,1

&INC`CHOOSE`+G`INVITES`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`MYINVITES
&INC`CODE`MYINVITES [u(cobj,gms)]=@check u(setr`%va,groups,u(filter,INVITES,u(FUN`LISTGROUPS),%b,%b,%#))=@attach %!/INC`MSG=You have no pending invites.;@pemit %#=u(header,Your Group Invites);@pemit %#=iter(%q<groups>,u(mxpmenu`%va,name(%i0),+gjoin [name(%i0)]),,%R);@pemit %#=u(subheader)

&FIL`INVITES [u(cobj,gms)]=match(get(%0/INVITES),objid(%1))

&INC`CHOOSE`+G`RANK`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`RANK
&INC`CODE`RANK [u(cobj,gms)]=@select/inline t(strlen(%0))=1,{@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: You do not have permission to do that.;@attach %!/INC`CHECKPC=%0,1;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Rank field empty.;@check u(valnum,%1)=@attach %!/INC`MSG=ERROR: Ranks must be whole numbers.;@check lt(u(FUN`GETRANK,%q<gid1>,%:),%1)=@attach %!/INC`MSG=ERROR: New Rank must be less than your own.;@check cor(u(isadmin`%va,%#),lt(u(FUN`GETRANK,%q<gid1>,%:),u(FUN`GETRANK,%q<gid1>,%q<t1objid>)))=@attach %!/INC`MSG=ERROR: Cannot change the rank of superiors.;@check hasattrp(%q<gid1>/RANK`%1)=@attach %!/INC`MSG=ERROR: Rank '%1' does not exist!;&D`GROUP`%q<gid1>`RANK %q<t1objid>=%1;@attach %!/INC`MSG=Changed your rank in the %q<gname1> Group to %1!,%q<t1>;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Changed %q<t1name>'s Rank to %1};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n set %q<t1name>'s Rank to %1},OOC,1},{@pemit %#=u(header,Ranks: %q<gname1>);@pemit %#=ansi(u(color`%va,%#,GROUPS,COLUMN_NAMES),align(5 28 30,Rank,Name,Permissions));@dolist/inline u(sortattr`%va,setdiff(u(lattrp`%va,%q<gid1>/RANK`*),RANK`ALL))={@pemit %#=u(FUN`RANKDISPLAY,%q<gid1>,last(##,`));@pemit %#=u(separator)};@pemit %#=u(FUN`RANKDISPLAY,%q<gid1>,ALL);@pemit %#=u(subheader)}

&FUN`RANKDISPLAY [u(cobj,gms)]=align(5 28 [sub(u(width`%va,%#),35)],%1,get(%0/RANK`%1`NAME),lcstr(get(%0/RANK`%1`PERM)))

&INC`CHOOSE`+D`RANK`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`RANK`DIV
&INC`CODE`RANK`DIV [u(cobj,gms)]=@attach %!/INC`CODE`VALDIV=before(%0,/);@select/inline t(strlen(after(%0,/)))=1,{@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: You do not have permission to do that.;@attach %!/INC`CHECKPC=after(%0,/),1,;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Rank field empty.;@check u(valnum,%1)=@attach %!/INC`MSG=ERROR: Ranks must be whole numbers.;@check cor(u(isadmin`%va,%#),lte(u(FUN`GETRANK,%q<gid1>,%:),u(FUN`GETRANK,%q<gid1>,%q<t1objid>)))=@attach %!/INC`MSG=ERROR: Cannot change the rank of superiors.;@check hasattr(%q<gid1>/DIVISION`%q<div>`RANK`%1)=@attach %!/INC`MSG=ERROR: Rank '%1' does not exist.;&D`GROUP`%q<gid1>`DIVISION`%q<div>`RANK %q<t1objid>=%1;@attach %!/INC`MSG=Changed your rank in the %q<gname1> Group's [u(numth,%q<div>)] Division: %q<divname>\, to %1,%q<t1>;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Changed %q<t1name>'s Division %q<div>: %q<divname> Rank to %1};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n set %q<t1name>'s Division %q<div>: %q<divname> Rank to %1},OOC,1},{@pemit %#=u(header,Ranks: %q<gname1> - Division %q<div>: %q<divname>);@pemit %#=ansi(u(color`%va,%#,GROUPS,COLUMN_NAMES),align(5 28,Rank,Name));@pemit %#=u(separator);@dolist/inline u(sortattr`%va,u(lattrp`%va,%q<gid1>/DIVISION`%q<div>`RANK`*))={@pemit %#=u(FUN`RANKDISPLAY`DIV,%q<gid1>,%q<div>,last(##,`))};@pemit %#=u(subheader)}

&FUN`RANKDISPLAY`DIV [u(cobj,gms)]=align(5 28,%2,get(%0/DIVISION`%1`RANK`%2))

@@ PERMISSIONS AND DISCIPLINE
&FUN`GRPPERM [u(cobj,gms)]=cor(u(isadmin`%va,%0),t(cor(match(u(FUN`GETPERM,%1,u(FUN`GETRANK,%1,objid(%0))),%2),match(get(%0/D`GROUP`%1`PRIV),%2))))

&FUN`GETPERM [u(cobj,gms)]=setunion(ucstr(get(%0/RANK`%1`PERM)),ucstr(get(%0/RANK`ALL`PERM)))

&FUN`GETRANK [u(cobj,gms)]=switch(1,cand(u(isadmin`%va,%1),not(%2)),0,default(%1/D`GROUP`%0`RANK,udefault(FUN`GETSET,4,%0,STARTRANK)))

&INC`CODE`PERMFIRST [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@check lte(u(FUN`GETRANK,%q<gid1>,%:),1)=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(u(setr`%va,rank,%0))=@attach %!/INC`MSG=ERROR: No Rank entered.;@check cor(u(valnum,%q<rank>),strmatch(%q<rank>,ALL))=@attach %!/INC`MSG=ERROR: Valid ranks are numerical or All.;@select/inline u(valnum,%q<rank>)=1,{@check hasattrp(%q<gid1>/RANK`%q<rank>)=@attach %!/INC`MSG=ERROR: Group lacks rank %q<rank>.;@stop lt(%q<rank>,u(FUN`GETRANK,%q<gid1>,%:))=@attach %!/INC`MSG=ERROR: May not change permissions for your own rank.};@check strlen(%1)=@attach %!/INC`MSG=ERROR: Permissions field empty.;th u(setq`%va,perms,setunion(v(PERMISSIONS`NORMAL),if(u(isadmin`%va,%#),v(PERMISSIONS`ADMIN))));@check lmath(min,iter(u(setr`%va,entry,ucstr(%1)),match(%q<perms>,%i0)))=@attach %!/INC`MSG=ERROR: The following permissions were not found: [u(itemize`%va,setdiff(%q<entry>,%q<perms>),%b,and,\,)]

&INC`CHOOSE`+G`ADDPERM`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`ADDPERM
&INC`CODE`ADDPERM [u(cobj,gms)]=@attach %!/INC`CODE`PERMFIRST;&RANK`%q<rank>`PERM %q<gid1>=u(setr`%va,newperms,setunion(%q<entry>,ucstr(get(%q<gid1>/RANK`%q<rank>`PERM))));@attach %!/INC`CODE`FINPERM

&INC`CHOOSE`+G`DELPERM`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`DELPERM
&INC`CODE`DELPERM [u(cobj,gms)]=@attach %!/INC`CODE`PERMFIRST;&RANK`%q<rank>`PERM %q<gid1>=u(setr`%va,newperms,setdiff(%q<entry>,ucstr(get(%q<gid1>/RANK`%q<rank>`PERM))));@attach %!/INC`CODE`FINPERM

&INC`CODE`FINPERM [u(cobj,gms)]=@attach %!/INC`MSG=Permissions for [ucstr(%q<rank>)] are now: [u(itemize`%va,get(%q<gid1>/RANK`%q<rank>`PERM),%b,and,\,)];@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Changed [ucstr(%q<rank>)] Permissions to: [u(itemize`%va,get(%q<gid1>/RANK`%q<rank>`PERM),%b,and,\,)]};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n changed [ucstr(%q<rank>)] Permissions to: [u(itemize`%va,get(%q<gid1>/RANK`%q<rank>`PERM),%b,and,\,)]},OOC,1

&PERMISSIONS`NORMAL [u(cobj,gms)]=MODERATE MANAGE IC OOC GBADMIN GEMIT TITLESELF
&PERMISSIONS`ADMIN [u(cobj,gms)]=ADD DISBAND RENAME

&INC`CODE`PRIVFIRST [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@check lte(u(FUN`GETRANK,%q<gid1>,%:),1)=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%0)=@attach %!/INC`MSG=ERROR: No Player entered.;@attach %!/INC`CHECKPC=%0,1;@check match(get(%q<gid1>/MEMBERS),%q<t1objid>)=@attach %!/INC`MSGHEAD=ERROR: %q<t1name> is not in the %q<gname1>.;@stop strmatch(%#,%q<t1>)=@attach %!/INC`MSG=ERROR: May not change permissions for yourself.;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Permissions field empty.;th u(setq`%va,perms,setunion(v(PERMISSIONS`NORMAL),if(u(isadmin`%va,%#),v(PERMISSIONS`ADMIN))));@check lmath(min,iter(u(setr`%va,entry,ucstr(%1)),match(%q<perms>,%i0)))=@attach %!/INC`MSG=ERROR: The following permissions were not found: [u(itemize`%va,setdiff(%q<entry>,%q<perms>),%b,and,\,)]

&INC`CHOOSE`+G`ADDPRIV`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`ADDPRIV
&INC`CODE`ADDPRIV [u(cobj,gms)]=@attach %!/INC`CODE`PRIVFIRST;&D`GROUP`%q<gid1>`PRIV %q<t1>=u(setr`%va,newperms,setunion(%q<entry>,ucstr(get(%q<t1>/D`GROUP`%q<gid1>`PERM))));@attach %!/INC`CODE`FINPRIV

&INC`CHOOSE`+G`DELPRIV`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`DELPRIV
&INC`CODE`DELPRIV [u(cobj,gms)]=@attach %!/INC`CODE`PRIVFIRST;&D`GROUP`%q<gid1>`PRIV %q<t1>=u(setr`%va,newperms,setdiff(%q<entry>,ucstr(get(%q<t1>/D`GROUP`%q<gid1>`PERM))));@attach %!/INC`CODE`FINPRIV

&INC`CODE`FINPRIV [u(cobj,gms)]=@attach %!/INC`MSG=Priveleges for %q<t1name> are now: [u(itemize`%va,get(%q<t1>/D`GROUP`%q<gid1>`PRIV),%b,and,\,)];@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Changed %q<t1name> Priveleges to: [u(itemize`%va,get(%q<t1>/D`GROUP`%q<gid1>`PRIV),%b,and,\,)]};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n changed %q<t1name> Priveleges to: [u(itemize`%va,get(%q<t1>/D`GROUP`%q<gid1>`PRIV),%b,and,\,)]},OOC,1

&INC`CHOOSE`+G`PRIVLIST`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`PRIVLIST
&INC`CODE`PRIVLIST [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of that group.;@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: Permission denied.;@check words(u(setr`%va,holders,u(choosegame,lsearch(all,type,player,elock,D`GROUP`%q<gid1>`PRIV:?*),search(EPLAYER=\[hasattr(##/D`GROUP`%q<gid1>`PRIV)\]))))=@attach %!/INC`MSG=No players hold priveleges within the %q<gname1>.;@pemit %#=u(HEADER,Priveleges: %q<gname1>);@pemit %#=ansi(u(color`%va,%#,GROUPS,COLUMN_NAMES),align(20 40,Name,Permissions));@dolist/inline %q<holders>={@pemit %#=align(20 [sub(u(width`%va,%#),21)],u(mxpmenu`%va,u(moniker`%va,##),+finger [name(##)]),lcstr(get(##/D`GROUP`%q<gid1>`PRIV)));@select/inline #@=0,{@pemit %#=u(SEPARATOR)},1,{@pemit %#=u(SUBHEADER)}}

&INC`CHOOSE`+G`MUZZLE`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`MUZZLE
&INC`CODE`MUZZLE [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of %q<gname1>.;@check u(FUN`GRPPERM,%:,%q<gid1>,MODERATE)=@attach %!/INC`MSG=ERROR: You lack permission to do that.;@attach %!/INC`CHECKPC=before(%0,/),1;@check u(isgroupmember,%q<t1objid>,%q<gid1>)=@attach %!/INC`MSG=ERROR: Must target a group member.;@check lt(u(FUN`GETRANK,%q<gid1>,%:),u(FUN`GETRANK,%q<gid1>,%q<t1objid>))=@attach %!/INC`MSG=ERROR: Only subordinates may be muzzled.;@check strlen(after(%0,/))=@attach %!/INC`MSG=ERROR: Channel Type Empty. Your choices are IC and OOC!;@attach %!/INC`PARTIAL=after(%0,/),IC|OOC,|,chan,Channel Type;@stop gt(get(%q<t1>/D`GROUP`%q<gid1>`MUZZLE`%q<chan>),secs())=@attach %!/INC`MSG=%q<t1name> is already %q<chan> muzzled.;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Muzzle duration empty.;@check gt(u(setr`%va,duration,u(stringsecs`%va,%1)),0)=@attach %!/INC`MSG=ERROR: Duration was not accepted by stringsecs. Please see [u(mxpmenu`%va,help stringsecs(),help stringsecs())].;&D`GROUP`%q<gid1>`MUZZLE`%q<chan> %q<t1>=u(setr`%va,until,add(secs(),%q<duration>));@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Muzzled %q<t1name> from [ucstr(%q<chan>)] channels for [etime(%q<duration>)] - Until [convsecs(%q<until>)]};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n muzzled %q<t1name> from [ucstr(%q<chan>)] channels for [etime(%q<duration>)] - Until [convsecs(%q<until>)]},OOC,1

&INC`CHOOSE`+G`UNMUZZLE`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`UNMUZZLE
&INC`CODE`UNMUZZLE [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of %q<gname1>.;@check u(FUN`GRPPERM,%:,%q<gid1>,MODERATE)=@attach %!/INC`MSG=ERROR: You lack permission to do that.;@attach %!/INC`CHECKPC=before(%0,/),1;@check u(isgroupmember,%q<t1objid>,%q<gid1>)=@attach %!/INC`MSG=ERROR: Must target a group member.;@check lt(u(FUN`GETRANK,%q<gid1>,%:),u(FUN`GETRANK,%q<gid1>,%q<t1objid>))=@attach %!/INC`MSG=ERROR: Only subordinates may be unmuzzled.;@check strlen(after(%0,/))=@attach %!/INC`MSG=ERROR: Channel Type Empty. Your choices are IC and OOC!;@attach %!/INC`PARTIAL=after(%0,/),IC|OOC,|,chan,Channel Type;@check gt(get(%q<t1>/D`GROUP`%q<gid1>`MUZZLE`%q<chan>),secs())=@attach %!/INC`MSG=%q<t1name> is not %q<chan> muzzled.;&D`GROUP`%q<gid1>`MUZZLE`%q<chan> %q<t1>;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Unmuzzled %q<t1name> from [ucstr(%q<chan>)] channels};@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n unmuzzled %q<t1name> from [ucstr(%q<chan>)] channels},OOC,1

&INC`CHOOSE`+G`SET`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`SET
&INC`CODE`SET [u(cobj,gms)]=@select/inline gt(strlen(%0),0)=1,{@check lte(u(FUN`GETRANK,%q<gid1>,%:),1)=@attach %!/INC`MSG=ERROR: You lack permission to do that.;@check strlen(%0)=@attach %!/INC`MSG=ERROR: Setting field empty.;@attach %!/INC`PARTIAL=%0,u(setr`%va,choices,COLOR|STARTRANK|IC|OOC|COMMAND|CHANNELRANK|SYSALERT[if(u(isadmin`%va,%#),|MAJOR|TYPE|SORT|ABBREVIATION)]),|,c,choice;@select/inline t(strlen(%1))=0,{&SET`%qc %q<gid1>;@attach %!/INC`MSG=Option restored to group defaults.},1,{@select/inline hasattr(%!/INC`CODE`SET`CHECK`%qc)=1,{@attach %!/INC`CODE`SET`CHECK`%qc};&SET`%qc %q<gid1>=u(strfirstof`%va,%q<entry>,%1)};@select/inline %qc=MAJOR,{@dolist/inline get(%q<gid1>/MEMBERS)={@attach %!/WIPE=##,D`CACHE}};@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Setting %qc: %1};@attach %!/INC`MSG=You have changed %q<gname1>'s %qc Setting to: %1;@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n changed %qc Setting to: %1},OOC,1},0,{@pemit %#=u(header,%q<gname1> - Settings);@dolist/inline lattrp(%q<gid1>/SET`*)={@pemit %#=rjust(last(##,`),10): [get(%q<gid1>/##)]};@pemit %#=u(subheader)}

&INC`CODE`SET`CHECK`STARTRANK [u(cobj,gms)]=@check u(valnum,%1)=@attach %!/INC`MSG=ERROR: STARTRANK must be a number!;@stop lte(%1,2)=@attach %!/INC`MSG=ERROR: STARTRANK may not be higher than 3.;@stop lte(%1,u(FUN`GETRANK,%q<gid1>,%:))=@attach %!/INC`MSG=ERROR: Cannot raise STARTRANK beyond your own rank.;@check hasattrp(%q<gid1>/RANK`[abs(%1)])=@attach %!/INC`MSG=ERROR: Cannot find that rank.;th u(setq`%va,entry,abs(%1))
&INC`CODE`SET`CHECK`IC [u(cobj,gms)]=@check isint(%1)=@attach %!/INC`MSG=ERROR: IC must be a number!;th u(setq`%va,entry,t(%1))
&INC`CODE`SET`CHECK`OOC [u(cobj,gms)]=@check isint(%1)=@attach %!/INC`MSG=ERROR: OOC must be a number!;th u(setq`%va,entry,t(%1))
&INC`CODE`SET`CHECK`COLOR [u(cobj,gms)]=@stop strmatch(u(setr`%va,error,ansi(%1,test)),#-*)=@attach %!/INC`MSG=ERROR: That color returned an ansi() error: %q<error>

&INC`CHOOSE`+G`ADDRANK`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`ADDRANK
&INC`CODE`ADDRANK [u(cobj,gms)]=@check lte(u(FUN`GETRANK,%q<gid1>,%:),1)=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%0)=@attach %!/INC`MSG=ERROR: Rank value field empty.;@check u(valnum,%0)=@attach %!/INC`MSG=ERROR: Ranks must be whole positive integers.;th u(setq`%va,newrank,abs(trim(%0)));@stop hasattrp(%q<gid1>/RANK`%q<newrank>)=@attach %!/INC`MSG=ERROR: Rank already exists. Use +gnamerank to change the name!;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Rank name field empty.;@stop cor(strmatch(%1,*%r*),strmatch(%1,*%t*))=@attach %!/INC`MSG=ERROR: Rank names may not contain linebreaks or indents.;th u(attrib_set`%va,%q<gid1>,RANK`%q<newrank>`NAME,%1);@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Made Rank: %q<newrank> (%1)};@attach %!/INC`MSG=You have created the new Rank %q<newrank> (%1) in %q<gname1>;@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n created the new rank %q<newrank> (%1)},OOC,1

&INC`CHOOSE`+D`ADDRANK`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`ADDRANK`DIV
&INC`CODE`ADDRANK`DIV [u(cobj,gms)]=@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CODE`VALDIV=before(%0,/);@check strlen(after(%0,/))=@attach %!/INC`MSG=ERROR: Rank value field empty.;@check u(valnum,after(%0,/))=@attach %!/INC`MSG=ERROR: Ranks must be whole positive integers.;th u(setq`%va,newrank,abs(trim(after(%0,/))));@stop hasattrp(%q<gid1>/DIVISION`%q<div>`RANK`%q<newrank>)=@attach %!/INC`MSG=ERROR: Rank already exists. Use +dnamerank to change the name!;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Rank name field empty.;@stop cor(strmatch(%1,*%r*),strmatch(%1,*%t*))=@attach %!/INC`MSG=ERROR: Rank names may not contain linebreaks or indents.;th u(attrib_set`%va,%q<gid1>,DIVISION`%q<div>`RANK`%q<newrank>,%1);@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Made Division %q<div> '%q<divname>' Rank: %q<newrank> (%1)};@attach %!/INC`MSG=You have created the new Rank %q<newrank> (%1) in %q<gname1>'s [u(numth,%q<div>)] Division: %q<divname>;@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n created the new Division %q<div> '%q<divname>' rank %q<newrank> (%1)},OOC,1

&INC`CHOOSE`+G`DELRANK`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`DELRANK
&INC`CODE`DELRANK [u(cobj,gms)]=@check lte(u(FUN`GETRANK,%q<gid1>,%:),1)=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%0)=@attach %!/INC`MSG=ERROR: Rank value field empty.;@check u(valnum,%0)=@attach %!/INC`MSG=ERROR: Ranks must be whole positive integers.;th u(setq`%va,rank,abs(trim(%0)));@check hasattrp(%q<gid1>/RANK`%q<rank>)=@attach %!/INC`MSG=ERROR: Added rank does not exist.;@stop lte(%q<rank>,4)=@attach %!/INC`MSG=ERROR: Ranks 1-4 cannot be deleted.;@stop u(choosegame,nsearch(all,type,player,elock,D`GROUP`%q<gid1>`RANK:%q<rank>),words(search(EPLAYER=\[eq(get(##/D`GROUp`%q<gid1>`RANK),%q<rank>)\])))=@attach %!/INC`MSG=ERROR: Some group members are Rank %q<rank>. Please move them into another rank first.;th u(setq`%va,rankname,default(%q<gid1>/RANK`%q<rank>`NAME,Unset));@attach %!/WIPE=%q<gid1>,RANK`%q<rank>;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Deleted Rank: %q<rank> (%q<rankname>)};@attach %!/INC`MSG=You have deleted rank %q<rank> (%q<rankname>) in %q<gname1>;@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n deleted rank %q<rank> (%q<rankname>)},OOC,1

&INC`CHOOSE`+D`DELRANK`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`DELRANK`DIV
&INC`CODE`DELRANK`DIV [u(cobj,gms)]=@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CODE`VALDIV=before(%0,/);@check strlen(after(%0,/))=@attach %!/INC`MSG=ERROR: Rank value field empty.;@check u(valnum,after(%0,/))=@attach %!/INC`MSG=ERROR: Ranks must be whole positive integers.;th u(setq`%va,rank,abs(trim(after(%0,/))));@check hasattrp(%q<gid1>/DIVISION`%q<div>`RANK`%q<rank>)=@attach %!/INC`MSG=ERROR: Added rank does not exist.;@stop lte(%q<rank>,3)=@attach %!/INC`MSG=ERROR: Ranks 1-3 cannot be deleted.;@stop u(choosegame,nsearch(all,type,player,elock,D`GROUP`%q<gid1>`DIVISION`%q<div>`RANK:%q<rank>),words(search(EPLAYER=\[eq(get(##/D`GROUP`%q<gid1>`DIVISION`%q<div>`RANK),%q<rank>)\])))=@attach %!/INC`MSG=ERROR: Some group members are Rank %q<rank> in that Division. Please move them into another rank first.;th u(setq`%va,rankname,default(%q<gid1>/DIVISION`%q<div>`RANK`%q<rank>,Unset));@attach %!/WIPE=%q<gid1>,DIVISION`%q<div>`RANK`%q<rank>;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Deleted Rank: %q<rank> (%q<rankname>)};@attach %!/INC`MSG=You have deleted rank %q<rank> (%q<rankname>) in %q<gname1>'s [u(numth,%q<div>)] Division: %q<divname>;@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n deleted Division %q<div> '%q<divname>' rank %q<rank> (%q<rankname>)},OOC,1

&INC`CHOOSE`+G`NAMERANK`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`NAMERANK
&INC`CODE`NAMERANK [u(cobj,gms)]=@check lte(u(FUN`GETRANK,%q<gid1>,%:),1)=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%0)=@attach %!/INC`MSG=ERROR: Rank value field empty.;@check u(valnum,%0)=@attach %!/INC`MSG=ERROR: Ranks must be whole positive integers.;th u(setq`%va,rank,abs(trim(%0)));@check hasattrp(%q<gid1>/RANK`%q<rank>)=@attach %!/INC`MSG=ERROR: Added rank does not exist.;@check strlen(%1)=@attach %!/INC`MSG=ERROR: New rank name field empty.;@stop cor(strmatch(%1,*%r*),strmatch(%1,*%t*))=@attach %!/INC`MSG=ERROR: Rank names may not contain linebreaks or indents.;&RANK`%q<rank>`NAME %q<gid1>=trim(%1);@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Renamed Rank: %q<rank> (%1)};@attach %!/INC`MSG=You have renamed rank %q<rank> (%1) in %q<gname1>;@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n renamed rank %q<rank> (%1)},OOC,1

&INC`CHOOSE`+D`NAMERANK`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`NAMERANK`DIV
&INC`CODE`NAMERANK`DIV [u(cobj,gms)]=@check u(FUN`GRPPERM,%:,%q<gid1>,MANAGE)=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CODE`VALDIV=before(%0,/);@check strlen(after(%0,/))=@attach %!/INC`MSG=ERROR: Rank value field empty.;@check u(valnum,after(%0,/))=@attach %!/INC`MSG=ERROR: Ranks must be whole positive integers.;th u(setq`%va,rank,abs(trim(after(%0,/))));@check hasattrp(%q<gid1>/DIVISION`%q<div>`RANK`%q<rank>)=@attach %!/INC`MSG=ERROR: Added rank does not exist.;@check strlen(%1)=@attach %!/INC`MSG=ERROR: New rank name field empty.;@stop cor(strmatch(%1,*%r*),strmatch(%1,*%t*))=@attach %!/INC`MSG=ERROR: Rank names may not contain linebreaks or indents.;&DIVISION`%q<div>`RANK`%q<rank> %q<gid1>=trim(%1);@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{Renamed Division %q<div> '%q<divname>' Rank: %q<rank> (%1)};@attach %!/INC`MSG=You have renamed Division %q<div> '%q<divname>' rank %q<rank> (%1) in %q<gname1>;@attach %!/INC`CODE`CHAT={[ansi(hw,ALERT:)] %n renamed Division %q<div> '%q<divname>' rank %q<rank> (%1)},OOC,1

&INC`CHOOSE`+G`TITLE`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`TITLE
&INC`CODE`TITLE [u(cobj,gms)]=@check u(isgroupmember,%:,%q<gid1>)=@attach %!/INC`MSG=ERROR: You are not a member of %q<gname1>.;@attach %!/INC`CHECKPC=%0,1;@check u(isgroupmember,%q<t1objid>,%q<gid1>)=@attach %!/INC`MSG=ERROR: %q<t1name> is not a member of %q<gname1>.;@check cor(if(strmatch(%q<t1>,%#),u(FUN`GRPPERM,%:,%q<gid1>,TITLESELF),0),u(FUN`GRPPERM,%:,%q<gid1>,MANAGE))=@attach %!/INC`MSG=ERROR: Permission denied.;th u(setq`%va,title,%1);@check cor(strmatch(%#,%q<t1>),lt(u(FUN`GETRANK,%q<gid1>,%:),u(FUN`GETRANK,%q<gid1>,%q<t1objid>)))=@attach %!/INC`MSG=ERROR: Only subordinates may be retitled.;@stop cor(strmatch(%q<title>,*|*),strmatch(%q<title>,*~*),strmatch(%q<title>,*%r*),strmatch(%q<title>,*%t*))=@attach %!/INC`MSG=ERROR: Titles may not contain a ~, |, tab, or linebreak.;@stop gt(strlen(%q<title>),u(chan_title_len))=@attach %!/INC`MSG=ERROR: That title is too long.;&D`GROUP`%q<gid1>`TITLE %q<t1>=%q<title>;@attach %!/INC`MSG=You have set [if(strmatch(%#,%q<t1>),your,%q<t1name>'s)] Title in [ansi(hw,%q<gname1>)] to: %q<title>;@select/inline strmatch(%#,%q<t1>)=0,{@attach %!/INC`MSG=your title in [ansi(hw,%q<gname1>)] is now: %q<title>,%q<t1>;@attach %!/INC`CODE`MAKELOG=%:,%q<gid1>,{if(strmatch(%#,%q<t1>),%n,%q<t1name>)'s TITLE set to: %q<title>}

&INC`CHOOSE`+G`OPTION`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`OPTION
&INC`CODE`OPTION [u(cobj,gms)]=@select/inline t(strlen(%0))=1,{@check strlen(%0)=@attach %!/INC`MSG=ERROR: Setting field empty.;@check match(u(setr`%va,choices,ALLIC|ALLOOC|ALLGB|IC|OOC|GB),u(setr`%va,c,ucstr(trim(first(%0)))),|)=@attach %!/INC`MSG=ERROR: That is not a valid choice. Your options are: [u(itemize`%va,%q<choices>,|,and,\,)];@select/inline t(match(ALLIC|ALLOOC|ALLGB,%qc,|))=1,{@select/inline t(strlen(%1))=0,{th u(delstat,%#,D`GROUP,%qc);@attach %!/INC`MSG=You have restored your %qc option back to defaults.},{th u(setstat,%#,D`GROUP,%qc,u(setr`%va,res,switch(1,cor(t(match(1 yes on true,%1)),gt(%1,0)),1,cor(t(match(0 no off false,%1)),lte(%1,0)),0,0)));@attach %!/INC`MSG=You have set your %qc option to: [if(%q<res>,On,Off)]}},0,{@select/inline t(strlen(%1))=0,{th u(delstat,%#,D`GROUP`%q<gid1>,%qc);@attach %!/INC`MSG=You have restored your %qc option back to defaults.},{th u(setstat,%#,D`GROUP`%q<gid1>,%qc,u(setr`%va,res,switch(1,cor(t(match(1 yes on true,%1)),gt(%1,0)),1,cor(t(match(0 no off false,%1)),lte(%1,0)),0,0)));@attach %!/INC`MSG=You have set your %qc option to: [if(%q<res>,On,Off)]}}},{@pemit %#=u(header,Global Group Options);@dolist/inline ALLIC ALLOOC ALLGB={@pemit %#=rjust(##,10): [if(u(strfirstof`%va,u(getstat,%#,D`GROUP,##),1),On,Off)]};@pemit %#=u(header,%q<gname1> - Options);@dolist/inline IC OOC GB={@pemit %#=rjust(##,10): [if(u(strfirstof`%va,u(getstat,%#,D`GROUP`%q<gid1>,##),1),On,Off)]};@pemit %#=u(subheader)}


@@ CHANNEL CONTROLS

&INC`CHOOSE`+G`RADIO`MAIN [u(cobj,gms)]=@attach %!/INC`CHOOSE`+G`IC`MAIN
&INC`CHOOSE`+G`RADIO`GAG [u(cobj,gms)]=@attach %!/INC`CHOOSE`+G`IC`GAG
&INC`CHOOSE`+G`RADIO`UNGAG [u(cobj,gms)]=@attach %!/INC`CHOOSE`+G`IC`UNGAG
&INC`CHOOSE`+G`RADIO`ON [u(cobj,gms)]=@attach %!/INC`CHOOSE`+G`IC`ON
&INC`CHOOSE`+G`RADIO`OFF [u(cobj,gms)]=@attach %!/INC`CHOOSE`+G`IC`OFF

&INC`CHOOSE`+G`IC`RECALL [u(cobj,gms)]=@attach %!/INC`JAILCHECK;@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`RECALL=IC,%0

&INC`CHOOSE`+G`IC`MAIN [u(cobj,gms)]=@attach %!/INC`JAILCHECK;@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`CHAT=%0[if(strlen(%1),=%1)],IC,0
&INC`CHOOSE`+G`IC`GAG [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@stop hasattrval(%#/D`GROUP`%q<gid1>`ICGAG)=@attach %!/INC`MSG=You are already gagging %q<gname1>'s IC channel!;&D`GROUP`%q<gid1>`ICGAG %#=1;@attach %!/INC`MSG=You will no longer hear %q<gname1>'s IC channel.
&INC`CHOOSE`+G`IC`UNGAG [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@check hasattrval(%#/D`GROUP`%q<gid1>`ICGAG)=@attach %!/INC`MSG=You are not gagging %q<gname1>'s IC channel!;&D`GROUP`%q<gid1>`ICGAG %#;@attach %!/INC`MSG=You will once again hear %q<gname1>'s IC channel.
&INC`CHOOSE`+G`IC`ON [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@force/inline %#=+goption ic=1
&INC`CHOOSE`+G`IC`OFF [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@force/inline %#=+goption ic=0

&INC`CHOOSE`+G`OOC`RECALL [u(cobj,gms)]=@attach %!/INC`JAILCHECK;@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`RECALL=OOC,%0

&INC`CHOOSE`+G`OOC`MAIN [u(cobj,gms)]=@attach %!/INC`JAILCHECK;@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`CHAT=%0[if(strlen(%1),=%1)],OOC,0
&INC`CHOOSE`+G`OOC`GAG [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@stop hasattrval(%#/D`GROUP`%q<gid1>`OOCGAG)=@attach %!/INC`MSG=You are already gagging %q<gname1>'s OOC channel!;&D`GROUP`%q<gid1>`OOCGAG %#=1;@attach %!/INC`MSG=You will no longer hear %q<gname1>'s OOC channel.
&INC`CHOOSE`+G`OOC`UNGAG [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@check hasattrval(%#/D`GROUP`%q<gid1>`OOCGAG)=@attach %!/INC`MSG=You are not gagging %q<gname1>'s OOC channel!;&D`GROUP`%q<gid1>`OOCGAG %#;@attach %!/INC`MSG=You will once again hear %q<gname1>'s OOC channel.
&INC`CHOOSE`+G`OOC`ON [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@force/inline %#=+goption ooc=1
&INC`CHOOSE`+G`OOC`OFF [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@force/inline %#=+goption ooc=0

&INC`CHOOSE`+G`EMIT`MAIN [u(cobj,gms)]=@attach %!/INC`JAILCHECK;@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@check u(FUN`GRPPERM,%:,%q<gid1>,GEMIT)=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%0)=@attach %!/INC`MSG=ERROR: Must enter a Channel Type. Choices are: IC and OOC!;@attach %!/INC`PARTIAL=%0,IC|OOC,|,chan,Channel Type;@attach %!/INC`CODE`CHAT=%1,%q<chan>,,1

&INC`CODE`CHAT [u(cobj,gms)]=@check strlen(%0)=@pemit %#=What will you say?;@select/inline cor(%2,%3)=0,{@check u(strfirstof`%va,u(FUN`GETSET,%q<gid1>,u(setr`%va,chan,%1)),1)=@attach %!/INC`MSG=ERROR: That channel is not enabled.;@check u(strfirstof`%va,u(getstat,%#,D`GROUP,ALL%q<chan>),1)=@attach %!/INC`MSG=ERROR: You have universally disabled Group %q<chan> Channels!;@check u(game_config,GROUPS,%q<chan>_CHANNEL)=@attach %!/INC`MSG=ERROR: %q<chan> Group Channels are globally disabled.;@check u(FUN`GRPPERM,%:,%q<gid1>,%q<chan>)=@attach %!/INC`MSG=ERROR: Permission denied.;@check cor(gt(secs(),u(setr`%va,until,default(%#/D`GROUP`%q<gid1>`MUZZLE`%q<chan>,0))),u(isadmin`%va,%#))=@attach %!/INC`MSG=ERROR: You are muzzled from [name(%q<gid1>)]'s [ucstr(%q<chan>)] Channels until [convsecs(%q<until>)].;@check u(strfirstof`%va,u(getstat,%#,D`GROUP`%q<gid1>,%q<chan>),1)=@attach %!/INC`MSG=ERROR: Cannot use a channel while it is disabled.;@stop get(%#/D`GROUp`%q<gid1>`%q<chan>GAG)=@attach %!/INC`MSG=ERROR: Cannot use a channel while gagging it.;@stop strmatch(left(%0,1),|)=@attach %!/INC`MSG=ERROR: The Emit feature is disabled.};@check words(u(setr`%va,list,u(filter,CHANLISTEN,setunion(lwho(),),%B,%b,%q<gid1>,%q<chan>,%2)));@select/inline %va=PennMUSH,{@message %q<list>=%0,%!/FUN`CHATFORMAT,##,%#,%0,%q<chan>,%2,%q<gid1>,,,%3},RhostMUSH,{@pemit/list %q<list>=udefault(FUN`CHATFORMAT,%0,##,%#,%0,%q<chan>,%2,%q<gid1>,,,%3)};@select/inline not(%2)=1,{@attach %!/INC`CODE`CHANLOG=%0,%2,left(%q<chan>,1),%q<gid1>,%#,%3}

&FIL`CHANLISTEN [u(cobj,gms)]=cand(u(isgroupmember,%0,%1),if(u(isadmin`%va,%0),if(u(strfirstof`%va,u(getstat,%0,D`GROUP,ALL%2),1),1,strmatch(%1,u(getstat,%0,D`GROUP,GROUP))),1),u(strfirstof`%va,u(getstat,%0,D`GROUP`%1,%2),1),if(%3,lte(u(FUN`GETRANK,%1,objid(%0)),u(FUN`GETSET,%1,SYSALERT)),1),not(get(%0/D`GROUP`%1`%2GAG)))

&INC`CODE`CHANLOG [u(cobj,gms)]=th u(attrib_set`%va,%3,u(setr`%va,attr,%2`[u(nextslot,%3,%2)]),%0);&%q<attr>`BY %3=objid(%4);&%q<attr>`ON %3=secs();&%q<attr>`AS %3=name(%4);&%q<attr>`TYPE %3=%1;&%q<attr>`GEMIT %3=%5;@select/inline gt(u(setr`%va,count,u(nattr`%va,%3/%2`*)),u(game_config,groups,buffer))=1,{@dolist/inline elements(u(sortattr`%va,u(lattr`%va,%3/%2`*)),lnum(1,sub(%q<count>,u(game_config,groups,buffer))))=@attach %!/WIPE=%3,##}

&STARTUP [u(cobj,gms)]=@trigger %!/LOOP`GROUPCHAN_CLEANUP;@select/inline %va=PennMUSH,{@function grpperm=%!,grpperm;@function/restrict grpperm=localize},RhostMUSH,{@function/privileged grpperm=%!/grpperm}

&GRPPERM [u(cobj,gms)]=u(FUN`GRPPERM,%0,%1,%2)

&LOOP`GROUPCHAN_CLEANUP [u(cobj,gms)]=@dolist u(FUN`LISTGROUPS)={@wait #@=@trigger %!/LOOP`GROUPCHAN_CLEANUP`GROUP=##};@wait [u(game_config,groups,interval)]={@trigger %!/LOOP`GROUPCHAN_CLEANUP}

&LOOP`GROUPCHAN_CLEANUP`GROUP [u(cobj,gms)]=@dolist/inline u(filter,MSGTIMEOUT,u(lattr`%va,%0/I`*),%b,%b,%0,u(setr`%va,timeout,u(game_config,groups,timeout)))={@attach %!/WIPE=%0,##};@dolist/inline u(filter,MSGTIMEOUT,u(lattr`%va,%0/O`*),%b,%b,%0,%q<timeout>)={@attach %!/WIPE=%0,##}

&FIL`MSGTIMEOUT [u(cobj,gms)]=gt(sub(secs(),get(%1/%0`ON)),%2)

&INC`CHOOSE`+G`RECALL`MAIN [u(cobj,gms)]=@attach %!/INC`CODE`VALGROUP=u(strfirstof`%va,u(getstat,%#,D`GROUP,Group),0),1;@attach %!/INC`CODE`RECALL
&INC`CODE`RECALL [u(cobj,gms)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: No chat type entered!;@attach %!/INC`PARTIAL=%0,IC|OOC,|,chat,chat;@select/inline u(valnum,%1)=1,{th u(setq`%va,amt,%1)},{th u(setq`%va,amt,10)};@pemit %#=u(header,%q<gname1> [ucstr(%q<chat>)] Log);@dolist u(setr`%va,total,revwords(elements(revwords(u(sortattr`%va,u(lattr`%va,%q<gid1>/[left(%q<chat>,1)]`*))),lnum(1,%q<amt>))))={@pemit %#=%[[u(fancytime`%va,get(%q<gid1>/##`ON),%#)]%] [u(FUN`CHATFORMAT,%#,get(%q<gid1>/##`BY),get(%q<gid1>/##),%q<chat>,get(%q<gid1>/##`TYPE),%q<gid1>,1,get(%q<gid1>/##`AS),get(%q<gid1>/##`GEMIT))];@select/inline eq(words(%q<total>),#@)=1,{@pemit %#=u(SUBHEADER)}}

&FUN`CHATFORMAT [u(cobj,gms)]=if(cor(%6,%8),,switch(1,hasflag(%0,PARANOID),%[[name(%1)]%(%1%)%],hasflag(%0,NOSPOOF),%[[name(%1)]:%]))[ansi(c,<)][ansi(u(strfirstof`%va,u(color`%va,%0,GROUP,%5,,1),u(FUN`GETSET,%5,COLOR),hx),u(moniker`%va,%5))][if(cand(%4,not(%8)),ansi(c,-)SYS,switch(%3,OOC,ansi(c,-)[ansi(r,ucstr(%3))],IC,))][ansi(c,>)]%B[if(cor(%4,%8),%2,if(u(FUN`GETSET,%5,CHANNELRANK),\[[u(strfirstof`%va,u(FUN`GETRANK,%5,%1),?)]\]%B)[if(strlen(get(%1/D`GROUP`%5`TITLE)),get(%1/D`GROUP`%5`TITLE)%B)][u(speech`%va,%1,%2,%0,%7,GROUP,u(lwhoid))])]

th u(NEWCONF,pconf,GROUP,QUOTES,,For group quotations.,COLOR)
th u(NEWCONF,pconf,GROUP,SPEECH,,For group dialogue.,COLOR)

&CMD`CHAT`PENNMUSH [u(cobj,gms)]=$^(?s)(-|=)(\w+)?(?\:/(\S+)?)?(?\: +(.+))?$:@attach %!/CMD`CHAT`MAIN
@set [u(cobj,gms)]/CMD`CHAT`PENNMUSH=regexp
&CMD`CHAT`RHOSTMUSH [u(cobj,gms)]=$^(?s)(-|=)(\\w+)?(?\:/(\\S+)?)?(?\: +(.+))?$:@attach %!/CMD`CHAT`MAIN
@set [u(cobj,gms)]/CMD`CHAT`RHOSTMUSH=regexp
&CMD`CHAT`MAIN [u(cobj,gms)]=@attach %!/INC`JAILCHECK;@attach %!/INC`PARTIAL=%3,GAG|UNGAG|ON|OFF|RECALL,|,switch,switch;th u(setq`%va,grab,u(namegrab`%va,filterbool(#lambda/cand(u(isgroupmember,%:,\%0),if(strlen(%q<switch>),1,u(strfirstof`%va,get(%#/D`GROUP`\%0`[switch(%1,-,IC,=,OOC,OOC)]),1))),u(FUN`LISTGROUPS)),u(strfirstof`%va,%2,u(getstat,%#,D`GROUP,Group))));@attach %!/INC`CODE`VALGROUP=%q<grab>,1;th u(setstat,%#,D`GROUP,Group,%q<gid1>);@select/inline gt(strlen(%q<switch>),0)=1,{@attach %!/INC`CHOOSE`+G`[switch(%1,-,IC,=,OOC,OOC)]`%q<switch>=%4},{@check strlen(%4)=@pemit %#=What will you say?;@attach %!/INC`CODE`CHAT=%4,switch(%1,-,IC,=,OOC,OOC),0}
@set [u(cobj,gms)]/CMD`CHAT`[switch(%va,PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

@@ MAINTENANCE
&PLAYER`CONNECT [u(cobj,gms)]=@dolist/inline u(lattr`%va,%!/PLAYER`CONNECT`*)={@trigger %!/##=%0,%1,%2,%3,%4,%5,%6,%7,%8,%9}
&OBJECT`DESTROY [u(cobj,gms)]=@dolist/inline u(lattr`%va,%!/OBJECT`DESTROY`*)={@trigger %!/##=%0,%1,%2,%3,%4,%5,%6,%7,%8,%9}

&PLAYER`CONNECT`GROUPCHECK [u(cobj,gms)]=@wait 2=@dolist u(filter,INVITES,u(FUN`LISTGROUPS,%b,%b,%0))={@attach %!/INC`MSG=The [name(%i0)] have invited you to join their group! To accept\, type [u(mxpmenu`%va,ansi(h,+gjoin [name(%i0)]),+gjoin [name(%i0)])]}

&OBJECT`DESTROY`CLEANUP [u(cobj,gms)]=@select/inline %2=PLAYER,{@dolist/inline u(filter,ISGROUPMEMBER,u(FUN`LISTGROUPS),%B,%B,%0)={@attach %!/INC`CODE`REMFROMGROUP=%i0,%0}}

&FIL`ISGROUPMEMBER [u(cobj,gms)]=match(get(%0/MEMBERS),%1)

@@ CONFIG

th u(NEWCONF,config,GROUPS,IC_CHANNEL,1,Enable Group IC channels?,BOOL)
th u(NEWCONF,config,GROUPS,OOC_CHANNEL,1,Enable Group OOC channels?,BOOL)
th u(NEWCONF,config,GROUPS,BUFFER,100,Size of channel buffer in lines?,POSINT)
th u(NEWCONF,config,GROUPS,TIMEOUT,259200,How long messages are stored?,DURATION)
th u(NEWCONF,config,GROUPS,INTERVAL,259200,Interval between timeout checks?,DURATION)


@@ HELP FILES
@@ COMMUNITY - GROUPS
+help/add Groups=[u(cobj,gms)]/HLP`GROUPS
+help/category Groups=Community
+help/metatags Groups=Guilds Organizations
&HLP`GROUPS [u(cobj,gms)]=The Group System provides organization for players, usually for IC factions, etc. Think of it like an MMORPG Guild system. Staff are considered members of all groups and can use any group resource.%R%R[ansi(hc,Concepts)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,rank)] - Rank 1 is a group leader\, with all numerically higher values being progressively lower in rank. This way the rank structure can extend as far as a group leader wishes. Many commands can be restricted by rank. Staff are considered Rank 0 for code purposes.%R[ansi(h,titles)] - titles represent codenames\, aliases\, etc\, or humorous notations\, and display on the group's +gwho and channels.%R[ansi(h,focus)] - While you can be in many groups at once\, group commands can only affect one at a time. The group you are FOCUSED on is which one they will affect.)]%R%R[ansi(hc,Basic Commands)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+groups)] - List all groups in the game.%R[ansi(h,+group <group>)] - Show info about a group. <group> can be its name or alias. Also changes FOCUS if you're a group member.%R[ansi(h,+gwho \[<group>\])] - Check online players of the focused group\, or a targeted group. Doesn't change FOCUS.%R[ansi(h,+gfocus <group>)] - Changes group focus if a member.)]

+shelp/add Groups=[u(cobj,gms)]/SHLP`GROUPS
+shelp/category Groups=Community
&SHLP`GROUPS [u(cobj,gms)]=[ansi(hc,Staff Commands)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+gcreate <groupname>\[=<player>\])] - This command creates a new Group. If a given player exists\, they will be made Group Leader \(rank 1.\) If they are not found\, the group will still be created.%R[ansi(h,+grename <newname>)] - Renames a Group.%R[ansi(h,+gdesc <description)] - Set a group's description.%R[ansi(h,+gadd <name>)] - Adds a player to the group\, skipping the invite process. Can be granted to players via the special ADD Permission.%R[ansi(h,+gadd <player>=<group>)] - Like above\, but adds to specific group without changing focus.%R[ansi(h,+gdisband <groupname>)] - Must be focused to the group AND typing its name. Only a WIZ can disband Major groups.)]%R%RAs a failsafe, disbanded groups are not deleted\, only renamed and their link to the Group Parent object via @parent broken. A WIZ must finalize the deletion. Player settings will not be lost unless the group object is deleted. Disbanding can be undone by fixing the @name and @parent'ing the group object back to [u(cobj,gop)].

+help/add Groups/Membership=[u(cobj,gms)]/HLP`GROUPS`MEMBERSHIP
&HLP`GROUPS`MEMBERSHIP [u(cobj,gms)]=[ansi(hc,Inviting Members)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+ginvite)] - Show all extended invitations.%R[ansi(h,+ginvite <player>)] - Send an invite.%R[ansi(h,+guninvite <player>)] - Revoke a pending invitation.)]%R%R[ansi(hc,Joining Groups)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+ginvites)] - Shows all groups who've invited you to join.%R[ansi(h,+gjoin <group>)] - Accepts an offered invite.%R[ansi(h,+grefuse <group>)] - Rejects an offered invite.)]%R%R[ansi(hc,Removing Members)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+gleave)] - Leaves a group.%R[ansi(h,+gkick <player>)] - Removes <player> from group. Requires MANAGE permission.)]

+help/add Groups/Administration=[u(cobj,gms)]/HLP`GROUPS`ADMINISTRATION
&HLP`GROUPS`ADMINISTRATION [u(cobj,gms)]=[ansi(hc,Leader Commands)]%ROnly the group leader is allowed to alter the rank structure and associated permissions.%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+gaddrank <#>=<rankname>)] - Create a new rank.%R[ansi(h,+gdelrank <#>)] - Remove a rank\, if no players in it.%R[ansi(h,+gnamerank <#>=<newname>)] - Renames a rank.%R[ansi(h,+gaddperm <#>=<perm list>)] - Adds <perm list> to a rank's Permissions. ALL may be targeted too!%R[ansi(h,+gdelperm <#>=<perm list>)] - Removes <perm list> from a rank's permissions.%R[ansi(h,+gaddpriv <player>=<perm list>)] - Extend a Permission to a specific player.%R[ansi(h,+gdelpriv <player>=<perm list>)] - Revoke a Permission granted to a player.%R[ansi(h,+gprivlist)] - View all priveleges granted to specific group members.)]%R%R[ansi(hc,Priveleged Commands)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+grank <player>=<#>)] - Alter a player's rank to <#>. Can only be used on subordinates\, and not to your own rank or better.%R[ansi(h,+gtitle <player>=<title>)] - Set a player's title. Setting to nothing clears it. Can only re-title subordinates.%R[ansi(h,+glog <#>)] - Looks back <#> amount of events and displays related logs.)]%R%R[ansi(hc,Member Commands)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+grank)] - Display rank structure and permissions granted.)]%R%R[ansi(hc,Permissions)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,moderate)] - Passes the group's /moderate lock for use with +key. May use +gmuzzle and edit board posts on the +gbs.%R[ansi(h,manage)] - may manage invites\, kick players\, and alter player rank. Also grants divisional alteration powers.%R[ansi(h,gbadmin)] - may use +gb admin commands such as +gbnewgroup\, +gblock\, and +gbcleargroup.%R[ansi(h,gemit)] - May use +gemit.%R[ansi(h,ic)] and [ansi(h,ooc)] - grants access to the IC and OOC group channels.%R[ansi(h,titleself)] - May use +gtitle... but only on yourself.)]

+help/add Groups/Divisions=[u(cobj,gms)]/HLP`GROUPS`DIVISIONS
&HLP`GROUPS`DIVISIONS [u(cobj,gms)]=Divisions are groups within a group. Codedly they are simply extra labels to help with organizing members. Divisions have no extra permissions, and ranks are completely for show.%R%R[ansi(hc,Administrating Divisions)]%RThis requires the Manage permission.%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+dcreate <name>)] - Creates a new division.%R[ansi(h,+drename <#>=<new name>)] - Renames a division.%R[ansi(h,+ddisband <division name or #>)] - Delete a division.%R[ansi(h,+daddrank <div>/<ranknumber>=<name>)] - Adds a new rank to a Division.%R[ansi(h,+ddelrank <div>/<rank>)] - Removes a rank if unused.%R[ansi(h,+dnamerank <div>/<rank>=<newname>)] - Renames a division rank.%R[ansi(h,+dassign <player>=<division name or #>)] - Add a player to <Division.>%R[ansi(h,+dkick <player>=<division name or #>)] - Remove a player from <division.>%R[ansi(h,+drank <division>/<player>=<#>)] - Sets a player's rank in <division.>)]%R%R[ansi(hc,Member Commands)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+divisions)] - Show all Divisions.%R[ansi(h,+drank <division>)] - Display Rank information for <division>.)]

+help/add Groups/Settings=[u(cobj,gms)]/HLP`GROUPS`SETTINGS
&HLP`GROUPS`SETTINGS [u(cobj,gms)]=[ansi(hc,Group Settings)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,Channelrank)] - <bool> - Display rank tags in group channels.%R[ansi(h,Color)] - <colorcode> - What color the group channels and group name will be\, unless personally overriden.%R[ansi(h,Command)] - <rank> - The tier at which Divisional display Type will consider someone part of the command staff.%R[ansi(h,IC)] - <bool> - enable or disable the IC/RADIO channel.%R[ansi(h,OOC)] - <bool> - enable or disable the OOC channel.%R[ansi(h,Major)] - <bool> - display group in the Major category in +groups.%R[ansi(h,Type)] - <typeword> - The group display uses special rules governed by <typeword>. If set to nothing\, or an invalid typeword\, uses default display. See further on.%R[ansi(h,Startrank)] - <rank> - the Rank at which a newly added player begins. Defaults to 4 if this is ever rendered invalid.%R[ansi(h,ABBREVIATION)] - The abbreviation used for Who list and other areas if the Group is MAJOR=1.%R[ansi(h,Sysalert)] - <rank> - Anyone at or above this rank will receive group system alerts regarding major events.%R%ROnly the group leader may alter these using:%R[ansi(h,+gset <setting>=<value>)]%R'bool' refers to a true false value. 0 = false\, 1 = true.%RTYPE\, MAJOR\, and ABBREVIATION may only be changed by staff.)]%R%R[ansi(hc,Display Types)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,FACTION)] - Alters display for large and officialized factions. +group <name> and +gwho will use a variable width roster showing only name\, rank number\, and the first found of either <title> or <rankname>\, such as 1-Field Marshal \(or if a title was set\, 1-Grand Poobah\).%R[ansi(h,DIVISIONAL)] - For well-organized groups that make use of divisions a lot. +group <name> and +gwho become a fusion of traditional +groups display and +divisions\, showing first anyone who is at or over COMMAND rank\, followed by every division\, then anyone who isn't in a division. The R# column is <grouprank>-<divrank>.)]

+help/add Groups/Options=[u(cobj,gms)]/HLP`GROUPS`OPTIONS
&HLP`GROUPS`OPTIONS [u(cobj,gms)]=[ansi(hc,Personal Options)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,ALLIC)] - <bool> - Disable ALL IC channels. You will not hear any group messages.%R[ansi(h,ALLOOC)] - <bool> - Disable ALL group OOC channels. You will not hear any group messages.%R[ansi(h,ALLGB)] - <bool> - Disable ALL group board checking with +bbscan.%R[ansi(h,IC)] - <bool> - Reception of the IC/RADIO channels.%R[ansi(h,OOC)] - <bool> - Reception of the OOC radio channels and SYS alerts.%R[if(isdbref(u(cobj,bbs)),[ansi(h,GB)] - <bool> - Whether you will see the group's boards show up on +bbscan.%R)]Color of a group channel may be changed via +config. +help +config%R%RTo change an option:%R[ansi(h,+goption <option>=<value>)]%R'bool' refers to a true false value. 0 = false\, 1 = true.)]

+help/add Groups/Channels=[u(cobj,gms)]/HLP`GROUPS`CHANNELS
&HLP`GROUPS`CHANNELS [u(cobj,gms)]=Groups have both IC and OOC softcoded channels that work much like normal @channels.%R%RNote: +gradio is an alias for +gic%R%R[ansi(hc,Basic Commands)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+gic/on)] - Joins the group's IC channel.%R[ansi(h,+gic/off)] - Leaves group's IC channel.%R[ansi(h,+gooc/on)] - Joins the group's OOC channel.%R[ansi(h,+gooc/off)] - Leaves the group's OOC channel.%R[ansi(h,+gic/gag)] - Stop receiving a group's messages. Resets on logout. Reversed with /ungag%R[ansi(h,+gooc/gag)] - Like above.)]%R%R[ansi(hc,Moderator Commands)]%RMuzzled players cannot use a group's channels for a set duration.%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+gmuzzle)] - Show all muzzled players.%R[ansi(h,+gmuzzle <player>/<ic/ooc>=<duration>)] - Muzzles a player from group channels. <duration> must be in stringsecs\(\) compatible format - [u(mxpmenu`%va,help stringsecs\(\))]%R[ansi(h,+gunmuzzle <player>/<ic/ooc>)] - Removes an existing muzzle.)]%R%R[ansi(hc,Sending Messages)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+gemit <ic/ooc>=<message>)] - Send a sourceless message on the channel. GEMIT permission required.%R[ansi(h,+gooc <speech>)] - speaks over the group's OOC channel.%R[ansi(h,+gic <speech>)] - Speaks over the group's IC channel.%R[ansi(h,+gradio <speech>)] - Alternate for +gic%R%R[ansi(h,=<group> <speech>)] - Shortcut for a specific group's OOC channels.%R[ansi(h,-<group> <speech>)] - Shortcut for a group's IC channels.%R%R<group> must be a single word in this usage. The command performs partial matching based on what groups you are a member of and haven't disabled reception for. You may also use the /gag\, /ungag\, /on\, and /off switches with it. Extra filtering is not performed if using a switch!%R%R[ansi(h,+grecall <ic/ooc>=<#>)] - recall a number of lines of previous chat\, similar to @chan/recall.)]

+help/add Groups/Boards=[u(cobj,gms)]/HLP`GROUPS`BOARDS
&HLP`GROUPS`BOARDS [u(cobj,gms)]=Each Group has its own set of Boards that use much of the same conventions as the Global BBS. The commands and features are completely identical, with one difference: they all begin with [ansi(h,+gb)] instead of [ansi(h,+bb)]!%R[ansi(hc,See Also:)] [u(mxpmenu`%va,+help BBS)]%R%R[ansi(hc,Reading Boards)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+gbread <#>\[/<#>\])] - In group mode\, takes an optional =<groupname> to specify which group. otherwise\, uses current focus.%R[ansi(h,+gbscan <groupname>)] - Like +bbscan\, but can be pointed at a specific group. otherwise\, uses focus.)]%R%R[ansi(hc,Managing Boards)]%RYou must have the GBADMIN Permission to use these commands. Anyone with it passes all group board locks and can use +gbremove\, +gbedit\, etc on any post.%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+gbnewgroup <name>)] - Creates a new board.%R[ansi(h,+gbcleargroup <board>)] - Deletes a board and all posts.%R[ansi(h,+gborder <board>=<#>)] - Reorders board display order.%R[ansi(h,+gbconfig <board>/<parameter>=<value>)] - Sets a board's <option> to <value>. Entering no <value> clears the option. Available Options:)]%R[align(10 67,,[ansi(h,anonymous)] - Set to <name> makes all posts appear to be from <name> as long as it's set. GBADMIN still see real poster.%R[ansi(h,timeout)] - See [u(mxpmenu`%va,+help BBS/Timeouts)])]%R%R[ansi(hc,Securing Boards)]%RGroup Boards can be locked so that only certain people of a certain rank or better may see or post to them.%R%R[ansi(hc,Locktypes)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,write)] - Controls who may post to a board.%R[ansi(h,read)] - Controls who can see a board and read its posts. Boards you cannot see will not be displayed on +gbread!)]%R%R[ansi(hc,Managing GBLocks)]%R[align(5 [sub(u(width`%va,%#),6)],,[ansi(h,+gblock <board>/<locktype>=<rank>)] - Locks Board. Examples: +gblock 4/WRITE=1%R[ansi(h,+gbunlock <board>/<locktype>)] - Unlocks a board.)]

@@ MIGRATION
&MIGRATE`GROUPS [u(cobj,migrate)]=@check isdbref(u(setr`%va,gop,u(%q<index>/gop)))=@attach %!/INC`MSG=ERROR: Cannot find the 1.0 Group Object Parent <GOP>. Cannot continue.;@dolist/inline u(filter,isdbref,children(%q<gop>))={@parent ##=[u(cobj,gop)];@tel ##=[u(cobj,gop)];@unlock/basic ##;@unlock/enter ##}

&CONFLICT`GROUPS [u(cobj,migrate)]=@check isdbref(u(setr`%va,gso,u(%q<index>/gso)))=@attach %!/INC`MSG=ERROR: Cannot find the 1.0 Group System Object <GSO>. Cannot continue.;@set %q<gso>=HALT NO_COMMAND;@tel %q<gso>=u(cobj,oldbox)