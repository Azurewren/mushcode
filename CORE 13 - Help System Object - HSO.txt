@@ DEPENDENCIES - PGO SGO
@@ Player Globals Object <PGO> is needed to have an actual +help command to use.
@@ Staff Globals Object <SGO> is needed for the same reason as the PGO.

@@ This script will create default commands +help and +shelp and the objects their files will be stored on.
@@ Though this system is not required for core functionality, it is highly recommended as all other systems have included help files meant to be used with this help system.

@switch/inline isdbref(u(mco))=0,{@tel create(Help System Object <HSO>)=config(master_room)}
&hso u(coi)=locate(config(master_room),Help System Object <HSO>,TXxi)
@parent u(hso)=u(coi)
@set u(hso)=WIZARD SAFE !NO_COMMAND

@switch/inline and(isdbref(u(hso)),not(isdbref(get(u(hso)/VAR`HELP))))=1,{th attrib_set(u(hso)/VAR`HELP,create(HELP DATABASE));@tel get(u(hso)/VAR`HELP)=u(hso);@set get(u(hso)/VAR`HELP)=SAFE}

@switch/inline and(isdbref(u(hso)),not(isdbref(get(u(hso)/VAR`SHELP))))=1,{th attrib_set(u(hso)/VAR`SHELP,create(SHELP DATABASE));@tel get(u(hso)/VAR`SHELP)=u(hso);@set get(u(hso)/VAR`SHELP)=SAFE}

@switch/inline and(isdbref(u(hso)),not(isdbref(get(u(hso)/VAR`NEWS))))=1,{th attrib_set(u(hso)/VAR`NEWS,create(NEWS DATABASE));@tel get(u(hso)/VAR`NEWS)=u(hso);@set get(u(hso)/VAR`NEWS)=SAFE}

&CMD`+HELP u(PGO)=$^(?s)\+help(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.+?))?$:@include u(hso)/INC`MAIN=%0,lcstr(%1),%2,%3,HELP,mudname() Help Files,HELP,+help;@@ %0 = %0, %1 = switch, %2 = filenames, %3 = entry, %4 = database name, %5 = header display name, %6 = Announce, %7 = Command
@set u(PGO)/CMD`+HELP=regexp

&CMD`NEWS u(PGO)=$^(?s)(?\:\+)?news(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.+?))?$:@include u(hso)/INC`MAIN=%0,lcstr(%1),%2,%3,NEWS,mudname() News Files,NEWS,news;@@ %0 = %0, %1 = switch, %2 = filenames, %3 = entry, %4 = database name, %5 = header display name, %6 = Announce, %7 = Command
@set u(PGO)/CMD`NEWS=regexp
&STARTUP u(pgo)=@hook/override news=u(pgo),CMD`NEWS

&CMD`+SHELP u(SGO)=$^(?s)\+shelp(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.+?))?$:@include u(hso)/INC`MAIN=%0,lcstr(%1),%2,%3,SHELP,mudname() Staff Help Files,SHELP,+shelp;@@ %0 = %0, %1 = switch, %2 = filenames, %3 = entry, %4 = database name, %5 = header display name, %6 = Announce, %7 = Command
@set u(SGO)/CMD`+SHELP=regexp

&INC`MAIN u(hso)=@include u(ccs)/INC`PARTIAL=%1,setunion(get(u(hso)/VAR`PLAYFLAGS),if(isadmin(%#),get(u(hso)/VAR`ADMINFLAGS)),|,|),|,%6,switch,switch;th iter(%2,setq(chr(add(inum(0),64)),%i0),/);@assert isdbref(setr(db,get(u(hso)/VAR`%4)))=@pemit %#=announce(%6) ERROR: %6 Database object not found.;th setq(entry,%3);th setq(disp,%5);th setq(ann,%6);th setq(comm,%7);@include u(hso)/INC`[strfirstof(%q<switch>,SHOW)]

&VAR`ADMINFLAGS u(hso)=WIZHELP|ADDMAIN|EDITMAIN|RENMAIN|DELMAIN|CHCAT|VIEWCODE|ADDSUB|EDITSUB|RENSUB|DELSUB

&INC`SHOW u(hso)=@switch/inline words(%2,/)=0,{@include u(hso)/INC`SHOW`ALL},1,{@include u(hso)/INC`SHOW`TOPIC},2,{@include u(hso)/INC`SHOW`SUB},{@nspemit %#=announce(%q<ann>) ERROR: %q<comm> supports only 2 maximum arguments for viewing.}

&INC`SHOW`ALL u(hso)=@nspemit %#=header(%q<disp>);@dolist/inline/delimit | [setunion(setr(list1,ucstr(iter(lattr(%q<db>/*`CATEGORY),get(%q<db>/%i0),%b,|))),%q<list1>,|,|)]={@nspemit %#=subheader(capnames(%i0));@nspemit %#=table(iter(sortkey(#lambda/get(%q<db>/\%0`NAME),iter(regrepi(%q<db>,*`CATEGORY,^%i0$),before(%i0,`),%b,|),i,|,|),ljust(pueblize(ansi(h,setr(name,get(%q<db>/%i0`NAME))),[lcstr(%q<comm>)] %q<name>)%B,25,.)[rjust(u(u(hso)/FUN`HAVEREAD,%#,%q<ann>,%i0,%q<db>),1)][timefmt($x,get(%q<db>/%i0`TIMESTAMP))],|,|),37,78,|)};@nspemit %#=[subheader()]%R%TFor more information on the listed topics, please use '[ansi(h,lcstr(%7) <topic>)]'[if(isadmin(%#),%R%TWizards\, please see [pueblize(ansi(h,lcstr(%q<comm>)/wizhelp),lcstr(%q<comm>)/wizhelp)] for config information.)];@nspemit %#=header()

&FUN`HAVEREAD u(hso)=switch(1,gt(get(%3/%2`TIMESTAMP),getstat(%0/PDATA`%1`HAVEREAD,%2)),ansi(hr,*),t(words(filterbool(#lambda/gt(get(%3/\%0`TIMESTAMP),getstat(%0/PDATA`%1`HAVEREAD,%2_\[last(\%0,`)])),lattr(%3/%2`SUB`*)))),ansi(y,&),%B)

&INC`FINDMAIN u(hso)=@assert strlen(%qa)=@nspemit %#=announce(%q<ann>) ERROR: [capnames(%q<ann>)]file name segment empty.;@include u(ccs)/INC`PARTIAL=%qa,iter(u(u(hso)/FUN`LISTTOP,%q<db>),get(%q<db>/%i0`NAME),%B,|),|,%6,choice,%q<ann>file;@assert setr(topid,u(u(hso)/FUN`FINDTOP,%q<db>,%q<choice>))=@nspemit %#=announce(%q<ann>) ERROR: [capnames(%q<ann>)]file %qa not found!

&FUN`FINDTOP u(hso)=before(first(wildgrepi(%0,*`NAME,%1)),`)
&FUN`LISTTOP u(hso)=lattr(%0/*)
&FUN`TOPEXIST u(hso)=t(u(u(hso)/FUN`FINDTOP,%0,%1))
&FUN`ATTRNAME u(hso)=%0

&INC`FINDSUB u(hso)=@include u(ccs)/INC`PARTIAL=%qb,iter(lattr(%q<db>/%q<topid>`SUB`*),get(%q<db>/%i0`NAME),%B,|),|,%q<ann>,subchoice,sub%q<ann>file;@assert setr(subid,u(u(hso)/FUN`FINDSUB,%q<db>,%q<topid>,%q<subchoice>))=@nspemit %#=announce(%q<ann>) ERROR: Subfile not found.

&FUN`FINDSUB u(hso)=elements(firstof(wildgrepi(%0,%1`SUB`*`NAME,%2)),3,`)
&FUN`LISTSUB u(hso)=lattr(%0/%1`SUB`*)
&FUN`SUBEXIST u(hso)=t(u(u(hso)/FUN`FINDSUB,%0,%1,%2))

&INC`SHOW`TOPIC u(hso)=@include u(hso)/INC`FINDMAIN;@nspemit %#=header(%q<comm>: [setr(name,get(%q<db>/%q<topid>`NAME))]);@switch/inline isdbref(before(first(setr(contents,get(%q<db>/%q<topid>`CONTENTS))),/))=1,{@nspemit %#=u(before(first(setr(contents,get(%q<db>/%q<topid>`CONTENTS))),/)/[after(first(setr(contents,get(%q<db>/%q<topid>`CONTENTS))),/)])},0,{@nspemit %#=%q<contents>};@switch/inline t(setr(count,words(setr(subs,sortkey(#lambda/get(%q<db>/\%0`NAME),lattr(%q<db>/%q<topid>`SUB`*,|),i,|,|)),|)))=1,{@nspemit %#=subheader(Subfiles)%R%TTo read subfiles, use '[ansi(h,%q<comm> %q<name>/<file>)]';@nspemit %#=table(iter(%q<subs>,ljust(pueblize(ansi(h,setr(subname,get(%q<db>/%i0`NAME))),lcstr(%q<comm>) %q<name>/%q<subname>)%B,24,.)[rjust(u(u(hso)/FUN`HAVEREADSUB,%#,q<ann>,%q<db>,%q<topid>,%i0),%B,1)][timefmt($x,get(%q<db>/%i0`TIMESTAMP))],|,|),37,78,|)};@nspemit %#=header();th setstat(%#/PDATA`%q<ann>`HAVEREAD,%q<topid>,secs())

&FUN`HAVEREADSUB u(hso)=if(gt(get(%2/%4`TIMESTAMP),getstat(%0/PDATA`%1`HAVEREAD,%3_[last(%4,`)])),ansi(hr,*),%B)

&INC`SHOW`SUB u(hso)=@include u(hso)/INC`FINDMAIN;@include u(hso)/INC`FINDSUB;@nspemit %#=header(%q<disp>: [get(%q<db>/%q<topid>`NAME)]/[setr(name,get(%q<db>/%q<topid>`SUB`%q<subid>`NAME))]);@nspemit %#=get(%q<db>/%q<topid>`SUB`%q<subid>`CONTENTS);@nspemit %#=header()

&INC`ADDMAIN u(hso)=@assert strlen(%qa)=@nspemit %#=announce(%q<ann>) ERROR: Category name empty.;@assert strlen(%qb)=@nspemit %#=announce(%q<ann>) ERROR: Topic name empty.;@switch/inline gt(setr(topid,u(u(hso)/FUN`FINDTOP,%q<db>,%qb)),0)=1,{@assert strlen(%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: Contents segment empty.;&%q<topid>`CONTENTS %q<db>=%q<entry>;&%q<topid>`CATEGORY %q<db>=%qa;&%q<topid>`TIMESTAMP %q<db>=secs();@nspemit %#=announce(%q<ann>) [capnames(%q<ann>)]file '[get(%q<db>/%q<topid>`NAME)]' edited!},{@assert strlen(%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: Contents empty!;th setq(attr,setr(n,randword(setdiff(rand(1,9999),u(FUN`LISTTOP,%q<db>)))));&%q<attr>`NAME %q<db>=%qb;&%q<attr>`CATEGORY %q<db>=%qa;&%q<attr>`TIMESTAMP %q<db>=secs();&%q<attr>`CONTENTS %q<db>=%q<entry>;@nspemit %#=announce(%q<ann>) %qa / %qb [capnames(%q<ann>)]file created!}

&INC`EDITMAIN u(hso)=@include u(hso)/INC`FINDMAIN;@assert strlen(%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: Contents segment empty.;&%q<topid>`CONTENTS %q<db>=%q<entry>;&%q<topid>`TIMESTAMP %q<db>=secs();@nspemit %#=announce(%q<ann>) [capnames(%q<ann>)]file '[get(%q<db>/%q<topid>`NAME)]' edited!

&INC`RENMAIN u(hso)=@include u(hso)/INC`FINDMAIN;@assert strlen(%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: New Name segment empty.;@break u(u(hso)/FUN`FINDTOP,%q<db>,%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: A topic with that name already exists.;&%q<topid>`NAME %q<db>=%q<entry>;&%q<topid>`TIMESTAMP %q<db>=secs();@nspemit %#=announce(%q<ann>) [capnames(%q<ann>)]file renamed to '[get(%q<db>/%q<topid>`NAME)]'!

&INC`DELMAIN u(hso)=@include u(hso)/INC`FINDMAIN;@include u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)]%BThis will DELETE file %qa and any Subfiles. Are you SURE you want to do this? Enter the same command within 10 Seconds to verify.},%1 DELMAIN %qa,%1;@set %q<db>=!SAFE;@wipe %q<db>/%q<topid>;@set %q<db>=SAFE;@nspemit %#=announce(%q<ann>) File '[get(%q<db>/%q<topid>`NAME)]' deleted!

&INC`CHCAT u(hso)=@include u(hso)/INC`FINDMAIN;@assert strlen(%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: New Category segment empty.;@break strmatch(get(%q<db>/%q<topid>`CATEGORY),%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: It is already a member of that Category.;&%q<topid>`CATEGORY %q<db>=%q<entry>;&%q<topid>`TIMESTAMP %q<db>=secs();@nspemit %#=announce(%q<ann>) File '[get(%q<db>/%q<topid>`NAME)]' moved to Category %q<entry>!

&INC`ADDSUB u(hso)=@include u(hso)/INC`FINDMAIN;@assert strlen(%qb)=@nspemit %#=announce(%q<ann>) ERROR: Sub name empty.;@switch/inline gt(setr(subid,u(u(hso)/FUN`FINDSUB,%q<db>,%q<topid>,%qb)),0)=1,{@assert strlen(%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: Contents section empty.;&%q<topid>`SUB`%q<subid>`CONTENTS %q<db>=%q<entry>;&%q<topid>`SUB`%q<subid>`TIMESTAMP %q<db>=secs();@nspemit %#=announce(%q<ann>) [get(%q<db>/%q<topid>`NAME)] Sub-%q<ann>file '[get(%q<db>/%q<topid>`SUB`%q<subid>`NAME)]' edited!},0,{@assert strlen(%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: Contents section empty.;th setq(attr,%q<topid>`SUB`[randword(setdiff(rand(1,9999),iter(lattr(%q<db>/%q<topid>`SUB`*),last(%i0,`))))]);&%q<attr>`NAME %q<db>=%qb;&%q<attr>`TIMESTAMP %q<db>=secs();&%q<attr>`CONTENTS %q<db>=%q<entry>;@nspemit %#=announce(%q<ann>) '[get(%q<db>/%q<topid>`NAME)]' / %qb Sub-%q<ann>file set!}

&INC`EDITSUB u(hso)=@include u(hso)/INC`FINDMAIN;@include u(hso)/INC`FINDSUB;@assert strlen(%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: Contents section empty.;&%q<topid>`SUB`%q<subid>`CONTENTS %q<db>=%q<entry>;&%q<topid>`SUB`%q<subid>`TIMESTAMP %q<db>=secs();@nspemit %#=announce(%q<ann>) [get(%q<db>/%q<topid>`NAME)] Sub-%q<ann>file '[get(%q<db>/%q<topid>`SUB`%q<subid>`NAME)]' edited!

&INC`RENSUB u(hso)=@include u(hso)/INC`FINDMAIN;@include u(hso)/INC`FINDSUB;@assert strlen(%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: New subfile name section empty.;@break u(u(hso)/FUN`SUBEXIST,%q<db>,%q<topid>,%q<entry>)=@nspemit %#=announce(%q<ann>) ERROR: Subfile by that name already exists.;&%q<topid>`SUB`%q<subid>`NAME %q<db>=%q<entry>;&%q<topid>`SUB`%q<subid>`TIMESTAMP %q<db>=secs();@nspemit %#=announce(%q<ann>) [get(%q<db>/%q<topid>`NAME)] Sub-%q<ann>file '[get(%q<db>/%q<topid>`SUB`%q<subid>`NAME)]' renamed!

&INC`DELSUB u(hso)=@include u(hso)/INC`FINDMAIN;@include u(hso)/INC`FINDSUB;@include u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)]%BThis will DELETE subfile %qb. Are you SURE you want to do this? Enter the same command within 10 Seconds to verify.},%1 DELSUB %qa_%qb,%1;@set %q<db>=!SAFE;@wipe %q<db>/%q<topid>`SUB`%q<subid>;@set %q<db>=SAFE;@nspemit %#=announce(%q<ann>) [get(%q<db>/%q<topid>`NAME)] Sub-%q<ann>file '[get(%q<db>/%q<topid>`SUB`%q<subid>`NAME)]' deleted!

&INC`VIEWCODE u(hso)=@switch/inline words(%2,/)=0,{@nspemit %#=announce(%q<ann>) ERROR: Must include an article to retrieve!},1,{@include u(hso)/INC`GET`TOPIC},2,{@include u(hso)/INC`GET`SUB},{@nspemit %#=announce(%q<ann>) ERROR: %q<comm> supports only 2 maximum arguments for retrieving unformatted text.}

&INC`GET`TOPIC u(hso)=@include u(hso)/INC`FINDMAIN;@nspemit %#=decompose(get(%q<db>/%q<topid>`CONTENTS))

&INC`GET`SUB u(hso)=@include u(hso)/INC`FINDMAIN;@include u(hso)/INC`FINDSUB;@nspemit %#=decompose(get(%q<db>/%q<topid>`SUB`%q<subid>`CONTENTS))

&INC`WIZHELP u(hso)=@nspemit %#=header(Wizard %q<comm> Commands)%r%b%q<comm>/addmain <SECTION>/<New Main File Name>=<Text>%r%b%q<comm>/editmain <Main File Name>=<Text>%r%b%q<comm>/chcat <Main File Name>=<new SECTION>%r%b%q<comm>/delmain <Main File Name> %(Deletes all sub-entries%)%r%b%q<comm>/viewcode <Main File Name> %(Returns Unparsed Text%)%r%r%b%q<comm>/addsub <Main File Name>/<Sub-Title to be Listed under Main File>=<Text>%r%b%q<comm>/editsub <Main File Name>/<Sub-Title Name>=<Text>%r%b%q<comm>/delsub <Main File Name>/<Sub-Title Name>%r%b%q<comm>/viewcode <Main File Name>/<Sub-Title Name> %(Returns Unparsed Text%)%R%RNote that using /addmain or /addsub on a helpfile or sub-helpfile that already exists will be the same as editing it, save that /addmain combines /chcat's effects if a different category's entered.%r%rThe Help System is actually split into three seperate components, allowing it to be used for different commands: such as news\, +help\, +shelp\, +faq\, and similar \(all using the same menu and syntax.\)%R%R1\) A command to invoke it. The command must use @include to call INC`MAIN on the Help System Object - currently [u(hso)]. It must use regular expression matching (or comparable input/output) using the following general syntax:%R[lit(&CMD`+HELP u(PGO)=$^(?s)\+help(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.+?))?$:@include u(hso)/INC`MAIN=%0,lcstr(%1),%2,%3,HELP,mudname() Help Files,HELP,+help;@@ %0 = %0, %1 = switch, %2 = filenames, %3 = entry, %4 = database name, %5 = header display name, %6 = Announce, %7 = Command)]%R[lit(@set PGO/CMD`+HELP=regexp)]%R%R2) The Help System Object itself contains all the code used to format\, present\, and modify the help code. INC`MAIN is called to do this. The DBREF of the database object must be stored in an attribute on the HSO with the name VAR`DBNAME\, such as VAR`HELP or VAR`FAQ.%R%R3\) The file database. This is nothing more than an object that the Help System Object points to. Preferably stored inside the HSO.%R[header()]