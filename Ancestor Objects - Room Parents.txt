@@ DEPENDENCIES: CORE

@@ ANCESTOR ROOM
@select/inline isdbref(u(cobj,ancestor_room))=0,{th u(attrib_set,u(cobj,mco),COBJ`ANCESTOR_ROOM,dig(Ancestor Room))}

&HEADER [u(cobj,ancestor_room)]=header(%0,,%1,,v(COLOR`BORDER),v(COLOR`HEADER_STAR),v(COLOR`HEADER_TEXT))
&SEPARATOR [u(cobj,ancestor_room)]=separator(%0,,%1,,v(COLOR`BORDER),v(COLOR`HEADER_STAR),v(COLOR`HEADER_TEXT))
&SUBHEADER [u(cobj,ancestor_room)]=subheader(%0,,%1,,v(COLOR`BORDER),v(COLOR`HEADER_STAR),v(COLOR`HEADER_TEXT))

&NAMEFORMAT [u(cobj,ancestor_room)]=[choosegame(endtag(a),)][u(HEADER,moniker(%!)[if(cor(controls(%#,%!),isadmin(%#)),%(%!%))],1)]

&CONFORMAT [u(cobj,ancestor_room)]=[u(CONFORMAT`EXTRA)][if(words(lvplayers(%!)),u(CONFORMAT`PLAYERS`[strfirstof(v(MODE`PLAYERS_MODE),game_config(ROOM,PLAYERS_MODE))]))][if(words(lvthings(%!)),u(CONFORMAT`THINGS`[strfirstof(v(MODE`THINGS_MODE),game_config(ROOM,THINGS_MODE))]))][switch(type(%!),THING,u(SUBHEADER))]

&CONFORMAT`PLAYERS`DEFAULT [u(cobj,ancestor_room)]=u(SEPARATOR,Players)%R[ansi(color(%#,ROOM,COLUMN_NAMES),align(19,Name))]%R[iter(sortname(lvplayers(%!)),align(19,mxpmenu(moniker(%i0),look [name(%i0)])),%b,%R)]

&CONFORMAT`THINGS`DEFAULT [u(cobj,ancestor_room)]=[u(SEPARATOR,Things)]%R[ansi(color(%#,ROOM,COLUMN_NAMES),align(40 28 8,Name,Owner,if(isadmin(%#),DBref,Enter)))][iter(sortname(lvthings(%!)),align(40 28 8,pueblize(name(%i0),look [name(%i0)]),pueblize(name(owner(%i0)),+finger [name(owner(%i0))]),switch(isadmin(%#)[hasflag(%i0,ENTER_OK)],11,pueblize(ansi(hg,%i0),enter %i0),1*,ansi(hr,%i0),01,pueblize(ansi(hg,enter_ok),enter %i0),ansi(hr,can't))),%b,%R)]

&CONFORMAT`EXTRA [u(cobj,ancestor_room)]=[if(cor(nattr(%!/VIEW`*),nattr(%!/MUSIC`*),nattr(%!/PLACE`*)),separator(Extra)%R[iter(filterbool(#lambda/nattr(%!/\%0`*),PLACE VIEW MUSIC),%T[u(FUN`EXTRA`%i0)],%b,%R)]%R)]
&FUN`EXTRA`VIEW [u(cobj,ancestor_room)]=This room has views! Type [pueblize(ansi(h,views),views)] to list!
&FUN`EXTRA`MUSIC [u(cobj,ancestor_room)]=[ansi(hc,This room has a soundtrack! Type)] [pueblize(ansi(h,soundtrack),soundtrack)] [ansi(hc,to list!)]
&FUN`EXTRA`PLACE [u(cobj,ancestor_room)]=This room has places! Type [pueblize(ansi(h,places),places)] to list!

&EXITFORMAT [u(cobj,ancestor_room)]=[if(words(lvexits(%!)),u(EXITFORMAT`[strfirstof(v(MODE`EXITS_MODE),game_config(ROOM,EXITS_MODE))]),u(SUBHEADER))]

&EXITFORMAT`DEFAULT [u(cobj,ancestor_room)]=[u(SEPARATOR,Exits)]%R[table(iter(sortorder(sortname(lvexits(%!))),ljust(if(strlen(alias(%i0)),<[ansi(color(%#,ROOM,EXITALIAS),pueblize(ucstr(alias(%i0)),name(%i0)))]>),6)[ansi(color(%#,ROOM,EXITNAME),pueblize(moniker(%i0),name(%i0)))] to [ansi(color(%#,ROOM,EXITDEST),left(name(loc(%i0)),sub(37,6,4,strlen(name(%i0)))))],%b,|),37,width(%#),|)]%R[u(SUBHEADER)]

&DEFAULT`ROOM`PLAYERS_MODE [u(cobj,config)]=DEFAULT
&DESC`ROOM`PLAYERS_MODE [u(cobj,config)]=Changes room format for PLAYERS.
&TYPE`ROOM`PLAYERS_MODE [u(cobj,config)]=WORD

&DEFAULT`ROOM`THINGS_MODE [u(cobj,config)]=DEFAULT
&DESC`ROOM`THINGS_MODE [u(cobj,config)]=Changes room format for THINGS.
&TYPE`ROOM`THINGS_MODE [u(cobj,config)]=WORD

&DEFAULT`ROOM`EXITS_MODE [u(cobj,config)]=DEFAULT
&DESC`ROOM`EXITS_MODE [u(cobj,config)]=Changes room format for EXITS.
&TYPE`ROOM`EXITS_MODE [u(cobj,config)]=WORD

@@ ANCESTOR EXIT

@select/inline isdbref(u(coi,ae))=1,{th u(attrib_set,u(cobj,mco),COBJ`ANCESTOR_EXIT,u(coi,ae))},0,{@select/inline isdbref(u(cobj,ancestor_exit))=0,{th u(attrib_set,u(cobj,mco),COBJ`ANCESTOR_EXIT,open(Ancestor Exit,#0,u(cobj,ancestor_room)))}}

&ODROP [u(cobj,ancestor_exit)]=heads over from [fullname(home(me))]
&OSUCCESS [u(cobj,ancestor_exit)]=heads over to [fullname(loc(me))]
&SUCCESS [u(cobj,ancestor_exit)]=You head over to [fullname(loc(me))]

@@ ANCESTOR PLAYER

@select/inline isbref(u(setr,ap,pmatch(*ancestor player)))=1,{th u(attrib_set,u(cobj,mco),COBJ`ANCESTOR_PLAYER,%q<ap>)},0,{@select/inline isdbref(u(cobj,ancestor_player))=0,{th u(attrib_set,u(cobj,mco),COBJ`ANCESTOR_PLAYER,pcreate(Ancestor Player,digest(md5,secs())))}}
@tel [u(cobj,ancestor_player)]=[u(cobj,ancestor_room)]

@pageformat [u(cobj,ancestor_player)]=ansi(color(%@,PAGE,PAGE),colornames(%!,%4,PAGES,lwho(%!),%#))
@outpageformat [u(cobj,ancestor_player)]=ansi(color(%@,PAGE,OUTPAGE),colornames(%!,%4,PAGES,lwho(%!),%#))
@adescribe [u(cobj,ancestor_player)]=@check [my_config(ALERTS,ADESC)];think GAME> %n just looked at you.
@idle [u(cobj,ancestor_player)]=if(gte(my_config(ALERTS,IDLE),idle(%!)),Currently idle\, please try again later!)

@chatformat [u(cobj,ancestor_player)]=if(cor(chanpriority(%1),strmatch(%#,%!)),if(strlen(u(setr,color,chancolor(%1))),<[ansi(%q<color>,stripansi(%1))]>[if(strlen(%4),%B%4%B,%B)][speech(%#,%2,%!,,CHANNELS,cwho(%1,on,1))],<%1>[if(strlen(%4),%B%4%B,%B)][speech(%#,switch(%0,@,|,%0)%2,%!,,CHANNELS,cwho(%1,on,1))]))

&DEFAULT`ALERTS`ADESC [u(cobj,pconf)]=0
&DESC`ALERTS`ADESC [u(cobj,pconf)]=Signal when looked at.
&TYPE`ALERTS`ADESC [u(cobj,pconf)]=BOOL

&DEFAULT`ALERTS`IDLE [u(cobj,pconf)]=1800
&DESC`ALERTS`IDLE [u(cobj,pconf)]=Minutes until pagers receive idle message.
&TYPE`ALERTS`IDLE [u(cobj,pconf)]=DURATION

&CDEFAULT`CHANNELS [u(cobj,pconf)]=@@ Empty attribute for Rhost.
&CDEFAULT`CHANNELS`QUOTES [u(cobj,pconf)]=n
&CDESC`CHANNELS`QUOTES [u(cobj,pconf)]=quotes -> " "
&CDEFAULT`CHANNELS`SPEECH [u(cobj,pconf)]=n
&CDESC`CHANNELS`SPEECH [u(cobj,pconf)]=quotes -> " "

@@ ANCESTOR THING
@select/inline isbref(u(coi,at))=1,{th u(attrib_set,u(cobj,mco),COBJ`ANCESTOR_THING,u(coi,at))},0,{@select/inline isdbref(u(coi,ae))=0,{th u(attrib_set,u(cobj,mco),COBJ`ANCESTOR_THING,create(Ancestor Thing <AT>))}}
@tel [u(cobj,ancestor_thing)]=[u(cobj,ancestor_room)]