@switch/inline isdbref(u(crm))=0,{@tel create(Creation Ruling Mandate <CRM>)=config(master_room)}
&crm u(coi)=locate(config(master_room),Creation Ruling Mandate <CRM>,TXxi)
@parent u(crm)=u(coi)
@set u(crm)=WIZARD !NO_COMMAND SAFE

@switch/inline isdbref(u(crm-db))=0,{@tel create(CRM Database <CRM-DB>)=u(crm)}
&crm-db u(coi)=locate(u(crm),CRM Database <CRM-DB>,TXxi)
@parent u(crm-db)=u(coi)
@set u(crm-db)=WIZARD !NO_COMMAND SAFE
@power u(crm-db)=many_attribs

&CMD`+CRM u(crm)=$^(?s)(?\:\+)?crm(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@include u(ccs)/INC`PARTIAL=%1,setunion(get(u(crm)/VAR`PLAYFLAGS),if(isadmin(%#),get(u(crm)/VAR`ADMINFLAGS)),|,|),|,CRM,switch,switch;@include u(crm)/INC`[strfirstof(%q<switch>,MAIN)]=%2,%3
@set u(crm)/CMD`+CRM=regexp

&VAR`PLAYFLAGS u(crm)=LOG|HIRE|FIRE|COMMIT|UNCOMMIT|PROMOTE|DEMOTE|ALL|STATS|ALLSTATS
&VAR`ADMINFLAGS u(crm)=RENAME|CHOWN|SET|DESC|INTIMACY|SPECIAL|CREATE|DELETE|PARENT|UNPARENT|PARTNER|UNPARTNER|LEND

&FUN`FINDORG u(crm)=first(filterbool(#lambda/strmatch(get(u(crm-db)/\%0),%0),sort(reglattr(u(crm-db)/^\\d+$),i)))

&INC`TARGET u(crm)=@assert strlen(before(%0,/))=@nspemit %#=announce(CRM) ERROR: No Organization targeted!;@switch/inline valnum(before(%0,/))=1,{@assert hasattr(u(crm-db)/[before(%0,/)])=@nspemit %#=announce(CRM) ERROR: An Organization by that ID does not exist.;th setq(id,before(%0,/))},0,{@include u(ccs)/INC`PARTIAL=before(%0,/),squish(iter(sort(reglattr(u(crm-db)/^\\d+$),i),get(u(crm-db)/%i0),%b,|),|),|,CRM,found,found;@assert valnum(setr(id,u(FUN`FINDORG,%q<found>)))=@nspemit %#=announce(CRM) ERROR: No Organization by that name could be found.};th setq(orgname,get(u(crm-db)/%q<id>))

&INC`CREATE u(crm)=@assert strlen(setr(orgname,before(%0,/)))=@nspemit %#=announce(CRM) ERROR: Name field empty!;@break valnum(u(FUN`FINDORG,%q<orgname>))=@nspemit %#=announce(CRM) ERROR: An organization by that name already exists!;@include u(ccs)/INC`CHECKPC=%1,1,CRM;&[setr(id,nextslot(u(crm-db),))] u(crm-db)=%q<orgname>;&%q<id>`LEADER u(crm-db)=%q<t1objid>;@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n created a new CRM Organization: %q<id> '%q<orgname>'};@nspemit %#=announce(CRM) You created a new organization: %q<id> '%q<orgname>' and gave it to %q<t1name>;@nspemit %q<t1>=announce(CRM) %n has created a new organization for you: %q<id> '%q<orgname>';@include u(crm)/INC`MAKELOG=%#,%q<id>,{The Organization was created.}

&INC`DELETE u(crm)=@include u(crm)/INC`TARGET;@include u(ccs)/INC`CHECKPC=%1,1,CRM;@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n deleted %q<id> '%q<orgname>'};@nspemit %#=announce(CRM) You deleted %q<id> '%q<orgname>';@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n deleted %q<id> '%q<orgname>';@set u(crm-db)=!SAFE;@wipe u(crm-db)/%q<id>;@wipe u(crm-db)/CTRANS`%q<id>`*;@wipe u(crm-db)/CTRANS`*`%q<id>;@set u(crm-db)=SAFE

&INC`RENAME u(crm)=@include u(crm)/INC`TARGET;@assert strlen(%1)=@nspemit %#=announce(CRM) ERROR: New name field empty!;@break valnum(u(FUN`FINDORG,%1))=@nspemit %#=announce(CRM) ERROR: An organization by that name already exists!;@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n renamed %q<id> '%q<orgname>' to '%1'};@nspemit/list setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n renamed %q<id> '%q<orgname>' to '%1';&%q<id> u(crm-db)=%1;@include u(crm)/INC`MAKELOG=%#,%q<id>,{The Organization was renamed to: %1}

&INC`CHOWN u(crm)=@include u(crm)/INC`TARGET;@include u(ccs)/INC`CHECKPC=%1,1,CRM;@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n renamed %q<id> '%q<orgname>' to: %1};@nspemit %#=announce(CRM) You chown'd %q<id> '%q<orgname>' to: %q<t1name>;@nspemit setunion(%# %q<t1>,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n chown'd %q<id> '%q<orgname>' to: %q<t1name>;@include u(crm)/INC`MAKELOG=%#,%q<id>,{The Organization was chown'd to: %q<t1name>};&%q<id>`LEADER u(crm-db)=%q<t1objid>

&INC`MAKELOG u(crm)=@assert isdbref(%0);@assert hasattrval(u(crm-db),%1);@assert strlen(%2);&[setr(log,%1`LOG`[nextslot(u(crm-db),%1`LOG)])] u(crm-db)=%2;&%q<log>`ON u(crm-db)=secs();&%q<log>`BY u(crm-db)=objid(%0)

&INC`LOG u(crm)=@include u(crm)/INC`TARGET;@nspemit %#=header(Logs for %q<id> '%q<orgname>');@dolist/inline sortkey(#lambda/last(\%0,`),lattr(u(crm-db)/%q<id>`LOG`*))={@nspemit %#=subheader(By [name(get(u(crm-db)/%i0`BY))] on [convsecs(get(u(crm-db)/%i0`ON))]);@nspemit %#=get(u(crm-db)/%i0)};@nspemit %#=header()

&INC`HIRE u(crm)=@include u(crm)/INC`TARGET;@include u(crm)/INC`CHECKPERM;@include u(ccs)/INC`CHECKPC=%1,1,CRM;@break match(get(u(crm-db)/%q<id>`EMPLOYEES),%q<t1objid>)=@nspemit %#=announce(CRM) ERROR: %q<t1name> is already an employee.;@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n hired a new %q<id> '%q<orgname>' Employee: %1};@nspemit %#=announce(CRM) You hired a new %q<id> '%q<orgname>' Employee: %q<t1name>;@nspemit setunion(%# %q<t1>,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n hired a new %q<id> '%q<orgname>' Employee: %q<t1name>;@include u(crm)/INC`MAKELOG=%#,%q<id>,{New Employee Hired: %q<t1name>};&%q<id>`EMPLOYEES u(crm-db)=filterbool(#lambda/isobjid(\%0),setunion(get(u(crm-db)/%q<id>`EMPLOYEES),%q<t1objid>))

&INC`FIRE u(crm)=@include u(crm)/INC`TARGET;@include u(crm)/INC`CHECKPERM;@include u(ccs)/INC`CHECKPC=%1,1,CRM;@assert match(get(u(crm-db)/%q<id>`EMPLOYEES),%q<t1objid>)=@nspemit %#=announce(CRM) ERROR: %q<t1name> is not an employee.;@assert if(match(get(u(crm-db)/%q<id>`MANAGERS),%q<t1objid>),or(isadmin(%#),strmatch(get(u(crm-db)/%q<id>`LEADER),%:)),1)=@nspemit %#=announce(CRM) ERROR: %q<t1name> is a Manager. Only the Leader or Staff may fire Managers.;@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n fired a %q<id> '%q<orgname>' Employee: %1};@nspemit %#=announce(CRM) You fired a %q<id> '%q<orgname>' Employee: %q<t1name>;@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n fired a %q<id> '%q<orgname>' Employee: %q<t1name>;@include u(crm)/INC`MAKELOG=%#,%q<id>,{Employee Fired: %q<t1name>};&%q<id>`EMPLOYEES u(crm-db)=filterbool(#lambda/isobjid(\%0),setdiff(get(u(crm-db)/%q<id>`EMPLOYEES),%q<t1objid>));&%q<id>`MANAGERS u(crm-db)=filterbool(#lambda/isobjid(\%0),setdiff(get(u(crm-db)/%q<id>`MANAGERS),%q<t1objid>))

&INC`PROMOTE u(crm)=@include u(crm)/INC`TARGET;@assert or(isadmin(%#),match(get(u(crm-db)/%q<id>`LEADER),%:))=@nspemit %#=announce(CRM) ERROR: Only the Leader or Staff may Promote members.;@include u(ccs)/INC`CHECKPC=%1,1,CRM;@break match(get(u(crm-db)/%q<id>`MANAGERS),%q<t1objid>)=@nspemit %#=announce(CRM) ERROR: %q<t1name> is already a Manager.;@switch/inline t(match(get(u(crm-db)/%q<id>`EMPLOYEES),%q<t1objid>))=0,{@include u(crm)/INC`HIRE};@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n appointed a new %q<id> '%q<orgname>' manager: %1};@nspemit %#=announce(CRM) You appointed a new %q<id> '%q<orgname>' manager: %q<t1name>;@nspemit setunion(%# %q<t1>,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n appointed a new %q<id> '%q<orgname>' manager: %q<t1name>;@include u(crm)/INC`MAKELOG=%#,%q<id>,{New Manager appointed: %q<t1name>};&%q<id>`MANAGERS u(crm-db)=filterbool(#lambda/isobjid(\%0),setunion(get(u(crm-db)/%q<id>`MANAGERS),%q<t1objid>))

&INC`DEMOTE u(crm)=@include u(crm)/INC`TARGET;@assert or(isadmin(%#),match(get(u(crm-db)/%q<id>`LEADER),%:))=@nspemit %#=announce(CRM) ERROR: Only the Leader or Staff may Demote members.;@include u(ccs)/INC`CHECKPC=%1,1,CRM;@assert match(get(u(crm-db)/%q<id>`MANAGERS),%q<t1objid>)=@nspemit %#=announce(CRM) ERROR: %q<t1name> is not a Manager.;@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n demoted a %q<id> '%q<orgname>' manager: %1};@nspemit %#=announce(CRM) You demoted a %q<id> '%q<orgname>' manager: %q<t1name>;@nspemit setunion(%# %q<t1>,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n demoted a %q<id> '%q<orgname>' manager: %q<t1name>;@include u(crm)/INC`MAKELOG=%#,%q<id>,{Manager Demoted: %q<t1name>};&%q<id>`MANAGERS u(crm-db)=filterbool(#lambda/isobjid(\%0),setdiff(get(u(crm-db)/%q<id>`MANAGERS),%q<t1objid>))

&VAR`SET`MAIN`STATS u(crm)=COMPETENCE|INFLUENCE|REACH|SIZE|WEALTH|CAPITAL|MOTIVATION|EXTRA
&VAR`SET`DESC`STATS u(crm)=COMPETENCE|INFLUENCE|REACH|SIZE|WEALTH

&INC`SET u(crm)=@include u(crm)/INC`TARGET;@assert strlen(before(%0,/))=@nspemit %#=announce(CRM) ERROR: Nothing entered to set.;@include u(ccs)/INC`PARTIAL=after(%0,/),v(VAR`SET`MAIN`STATS),|,CRM,choice,choice;@switch/inline strlen(%1)=0,{@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n cleared %q<id> '%q<orgname>''s %q<choice>};@nspemit %#=announce(CRM) You cleared %q<id> '%q<orgname>''s %q<choice>;@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n cleared %q<id> '%q<orgname>''s %q<choice>;@include u(crm)/INC`MAKELOG=%#,%q<id>,{Cleared %q<choice>.};&%q<id>`STAT`%q<choice> u(crm-db)},{@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n set %q<id> '%q<orgname>''s %q<choice> to: %1};@nspemit %#=announce(CRM) You set %q<id> '%q<orgname>''s %q<choice> to: %1;@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n set %q<id> '%q<orgname>''s %q<choice> to: %1;@include u(crm)/INC`MAKELOG=%#,%q<id>,{Set %q<choice> to: %1};&%q<id>`STAT`%q<choice> u(crm-db)=%1}

&INC`DESC u(crm)=@include u(crm)/INC`TARGET;@assert strlen(before(%0,/))=@nspemit %#=announce(CRM) ERROR: Nothing entered to set.;@include u(ccs)/INC`PARTIAL=after(%0,/),v(VAR`SET`DESC`STATS),|,CRM,choice,choice;@switch/inline strlen(%1)=0,{@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n cleared %q<id> '%q<orgname>''s %q<choice> DESC};@nspemit %#=announce(CRM) You cleared %q<id> '%q<orgname>''s %q<choice> DESC;@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n cleared %q<id> '%q<orgname>''s %q<choice> DESC;@include u(crm)/INC`MAKELOG=%#,%q<id>,{Cleared %q<choice> DESC.};&%q<id>`STAT`%q<choice>`DESC u(crm-db)},{@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n set %q<id> '%q<orgname>''s %q<choice> DESC to: %1};@nspemit %#=announce(CRM) You set %q<id> '%q<orgname>''s %q<choice> DESC to: %1;@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n set %q<id> '%q<orgname>''s %q<choice> DESC to: %1;@include u(crm)/INC`MAKELOG=%#,%q<id>,{Set %q<choice> DESC to: %1};&%q<id>`STAT`%q<choice>`DESC u(crm-db)=%1}

&INC`INTIMACY u(crm)=@include u(crm)/INC`TARGET;@assert valnum(setr(int,after(%0,/)))=@nspemit %#=announce(CRM) ERROR: Intimacies must be handled by their Slots!;@switch/inline strlen(%1)=0,{@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n cleared %q<id> '%q<orgname>''s %q<int> Intimacy};@nspemit %#=announce(CRM) You cleared %q<id> '%q<orgname>''s %q<int> Intimacy;@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n cleared %q<id> '%q<orgname>''s %q<int> Intimacy;@include u(crm)/INC`MAKELOG=%#,%q<id>,{Cleared %q<int> Intimacy.};&%q<id>`INTIMACY`%q<int> u(crm-db)},{@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n set %q<id> '%q<orgname>''s %q<int> Intimacy to: %1};@nspemit %#=announce(CRM) You set %q<id> '%q<orgname>''s %q<int> Intimacy to: %1;@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n set %q<id> '%q<orgname>''s %q<int> Intimacy to: %1;@include u(crm)/INC`MAKELOG=%#,%q<id>,{Set %q<int> Intimacy to: %1};&%q<id>`INTIMACY`%q<int> u(crm-db)=%1}

&INC`SPECIAL u(crm)=@include u(crm)/INC`TARGET;@assert valnum(setr(int,after(%0,/)))=@nspemit %#=announce(CRM) ERROR: Intimacies must be handled by their Slots!;@switch/inline strlen(%1)=0,{@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n cleared %q<id> '%q<orgname>''s %q<int> Special Asset};@nspemit %#=announce(CRM) You cleared %q<id> '%q<orgname>''s %q<int> Special Asset;@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n cleared %q<id> '%q<orgname>''s %q<int> Special Asset;@include u(crm)/INC`MAKELOG=%#,%q<id>,{Cleared %q<int> Special Asset.};&%q<id>`SPECIAL`%q<int> u(crm-db)},{@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n set %q<id> '%q<orgname>''s %q<int> Special Asset to: %1};@nspemit %#=announce(CRM) You set %q<id> '%q<orgname>''s %q<int> Special Asset to: %1;@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n set %q<id> '%q<orgname>''s %q<int> Special Asset to: %1;@include u(crm)/INC`MAKELOG=%#,%q<id>,{Set %q<int> Special Asset to: %1};&%q<id>`SPECIAL`%q<int> u(crm-db)=%1}

&INC`CHECKPERM u(crm)=@assert or(isadmin(%#),match(get(u(crm-db)/%q<id>`PROMOTE),%:),strmatch(get(u(crm-db)/%q<id>`LEADER),%:))=@nspemit %#=announce(CRM) ERROR: You don't have the authority to do that.

&INC`COMMIT u(crm)=@include u(crm)/INC`TARGET;@include u(crm)/INC`CHECKPERM;@assert valnum(setr(int,after(%0,/)))=@nspemit %#=announce(CRM) ERROR: Commitments must be whole positive numbers!;@assert or(gte(u(FUN`GET`CAPITAL`CURRENT,%q<id>),%q<int>),isadmin(%#))=@nspemit %#=announce(CRM) ERROR: That would commit more Capital than the organization has. Admin must do this.;@assert strlen(%1)=@nspemit %#=announce(CRM) ERROR: Commit reason field empty.;&[setr(attr,%q<id>`COMMIT`[setr(slot,nextslot(u(crm-db),%q<id>`COMMIT))])] u(crm-db)=%q<int>;&%q<attr>`DESC u(crm-db)=%1;@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n Committed %q<int> of %q<id> '%q<orgname>''s Capital to: %1};@nspemit %#=announce(CRM) You Committed %q<int> of %q<id> '%q<orgname>''s Capital to: %1;@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n Committed %q<int> of %q<id> '%q<orgname>''s Capital to: %1;@include u(crm)/INC`MAKELOG=%#,%q<id>,{Committed %q<int> Capital to: %1}

&INC`UNCOMMIT u(crm)=@include u(crm)/INC`TARGET;@include u(crm)/INC`CHECKPERM;@assert valnum(setr(int,%1))=@nspemit %#=announce(CRM) ERROR: Commitment slots must be whole positive numbers!;@assert hasattr(u(crm-db)/%q<id>`COMMIT`%q<int>)=@nspemit %#=announce(CRM) ERROR: Commitment Slot not found.;@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n released [get(u(crm-db)/%q<id>`COMMIT`%q<int>)] of %q<id> '%q<orgname>''s Capital from: [get(u(crm-db)/%q<id>`COMMIT`%q<int>`DESC)]};@nspemit %#=announce(CRM) You released [get(u(crm-db)/%q<id>`COMMIT`%q<int>)] of %q<id> '%q<orgname>''s Capital from: [get(u(crm-db)/%q<id>`COMMIT`%q<int>`DESC)];@nspemit setunion(%#,iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)))=announce(CRM) %n released [get(u(crm-db)/%q<id>`COMMIT`%q<int>)] of %q<id> '%q<orgname>''s Capital from: [get(u(crm-db)/%q<id>`COMMIT`%q<int>`DESC)];@include u(crm)/INC`MAKELOG=%#,%q<id>,{Released  [get(u(crm-db)/%q<id>`COMMIT`%q<int>)] Capital from: [get(u(crm-db)/%q<id>`COMMIT`%q<int>`DESC)]};@set u(crm-db)=!SAFE;@wipe u(crm-db)/%q<id>`COMMIT`%q<int>;@set u(crm-db)=SAFE

&INC`LEND u(crm)=@include u(crm)/INC`TARGET;@include u(crm)/INC`CHECKPERM;th setq(mid,%q<id>,morgname,%q<orgname>);@assert or(valnum(setr(int,%1)),eq(%q<int>,0),not(strlen(%q<int>)))=@nspemit %#=announce(CRM) ERROR: Lends must be positive numbers or 0 to clear!;@assert or(gte(u(FUN`GET`CAPITAL`CURRENT,%q<id>),%q<int>),isadmin(%#))=@nspemit %#=announce(CRM) ERROR: That would lend more Capital than the organization has. Admin must do this.;@include u(crm)/INC`TARGET=after(%0,/);@switch/inline t(%q<int>)=0,{@assert setr(trans,get(u(crm-db)/CTRANS`%q<mid>`%q<id>))=@nspemit %#=announce(CRM) ERROR: No Capital's being lent to %q<id> '%q<orgname>'. Nothing to clear.;@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n reclaimed %q<trans> of %q<mid> '%q<morgname>''s Capital from: %q<id> '%q<orgname>'};@nspemit %#=announce(CRM) You reclaimed %q<trans> of %q<mid> '%q<morgname>''s Capital from: %q<id> '%q<orgname>';@nspemit setunion(%#,setunion(iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)),iter(setunion(get(u(crm-db)/%q<mid>`LEADER),get(u(crm-db)/%q<mid>`EMPLOYEES)),num(%i0))))=announce(CRM) %n reclaimed %q<trans> of %q<mid> '%q<morgname>''s Capital from: %q<id> '%q<orgname>';@wipe u(crm-db)/CTRANS`%q<mid>`%q<id>;@include u(crm)/INC`MAKELOG=%#,%q<mid>,{Reclaimed %q<trans> Capital from: %q<id> '%q<orgname>'};@include u(crm)/INC`MAKELOG=%#,%q<id>,{Lost %q<trans> Capital from: %q<mid> '%q<morgname>'}},{th setq(trans,%q<int>);@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n lent %q<trans> of %q<mid> '%q<morgname>''s Capital to: %q<id> '%q<orgname>'};@nspemit %#=announce(CRM) You lent %q<trans> of %q<mid> '%q<morgname>''s Capital to: %q<id> '%q<orgname>';@nspemit setunion(%#,setunion(iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)),iter(setunion(get(u(crm-db)/%q<mid>`LEADER),get(u(crm-db)/%q<mid>`EMPLOYEES)),num(%i0))))=announce(CRM) %n lent %q<trans> of %q<mid> '%q<morgname>''s Capital to: %q<id> '%q<orgname>';&CTRANS`%q<mid>`%q<id> u(crm-db)=%q<int>;@include u(crm)/INC`MAKELOG=%#,%q<mid>,{Transferred %q<trans> Capital from: %q<id> '%q<orgname>'};@include u(crm)/INC`MAKELOG=%#,%q<id>,{Gained %q<trans> Capital from: %q<mid> '%q<morgname>'}}

&INC`PARENT u(crm)=@include u(crm)/INC`TARGET;@include u(crm)/INC`CHECKPERM;th setq(mid,%q<id>,morgname,%q<orgname>);@include u(crm)/INC`TARGET=%1;@break gt(get(u(crm-db)/%q<id>`PARENT),0)=@nspemit %#=announce(CRM) ERROR: That Organization is already a Subsidiary. Please unparent it first.;@break match(get(u(Crm-db)/%q<mid>`PARTNERS),%q<id>)=@nspemit %#=announce(CRM) ERROR: %q<id> '%q<orgname>' is a partner of %q<mid> '%q<morgname>'!;th setq(trans,%q<int>);@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n assigned %q<mid> '%q<morgname>' as a Subsidiary of: %q<id> '%q<orgname>'};@nspemit %#=announce(CRM) You assigned %q<mid> '%q<morgname>' as a Subsidiary of: %q<id> '%q<orgname>';@nspemit setunion(%#,setunion(iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)),iter(setunion(get(u(crm-db)/%q<mid>`LEADER),get(u(crm-db)/%q<mid>`EMPLOYEES)),num(%i0))))=announce(CRM) %n assigned %q<mid> '%q<morgname>' as a Subsidiary of: %q<id> '%q<orgname>';&%q<mid>`PARENT u(crm-db)=%q<id>;@include u(crm)/INC`MAKELOG=%#,%q<mid>,{Assigned as Subsidiary of: %q<id> '%q<orgname>'};@include u(crm)/INC`MAKELOG=%#,%q<id>,{Gained Subsidiary: %q<mid> '%q<morgname>'}

&INC`UNPARENT u(crm)=@include u(crm)/INC`TARGET;@include u(crm)/INC`CHECKPERM;th setq(mid,%q<id>,morgname,%q<orgname>);@assert gt(get(u(crm-db)/%q<id>`PARENT),0)=@nspemit %#=announce(CRM) ERROR: That Organization is not a Subsidiary.;@include u(crm)/INC`TARGET=get(u(crm-db)/%q<id>`PARENT);@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n separated %q<mid> '%q<morgname>''s from: %q<id> '%q<orgname>'};@nspemit %#=announce(CRM) You separated %q<mid> '%q<morgname>''s from: %q<id> '%q<orgname>';@nspemit setunion(%#,setunion(iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)),iter(setunion(get(u(crm-db)/%q<mid>`LEADER),get(u(crm-db)/%q<mid>`EMPLOYEES)),num(%i0))))=announce(CRM) %n separated %q<mid> '%q<morgname>''s from: %q<id> '%q<orgname>';@wipe u(crm-db)/%q<mid>`PARENT;@include u(crm)/INC`MAKELOG=%#,%q<mid>,{Seperated from: %q<id> '%q<orgname>'};@include u(crm)/INC`MAKELOG=%#,%q<id>,{Lost Holding: %q<mid> '%q<morgname>'}

&INC`PARTNER u(crm)=@include u(crm)/INC`TARGET;th setq(mid,%q<id>,morgname,%q<orgname>);@include u(crm)/INC`TARGET=%1;@break match(get(u(Crm-db)/%q<mid>`PARTNERS),%q<id>)=@nspemit %#=announce(CRM) ERROR: That Organization is already a partner of %q<mid> '%q<morgname>';@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n partnered %q<mid> '%q<morgname>''s to: %q<id> '%q<orgname>'};@nspemit %#=announce(CRM) You partnered %q<mid> '%q<morgname>''s to: %q<id> '%q<orgname>';@nspemit setunion(%#,setunion(iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)),iter(setunion(get(u(crm-db)/%q<mid>`LEADER),get(u(crm-db)/%q<mid>`EMPLOYEES)),num(%i0))))=announce(CRM) %n partnered %q<mid> '%q<morgname>''s to: %q<id> '%q<orgname>';&%q<mid>`PARTNERS u(crm-db)=filterbool(#lambda/hasattrval(u(crm-db),\%0),setunion(get(u(crm-db)/%q<mid>`PARTNERS),%q<id>));&%q<id>`PARTNERS u(crm-db)=filterbool(#lambda/hasattrval(u(crm-db),\%0),setunion(get(u(crm-db)/%q<id>`PARTNERS),%q<mid>));@include u(crm)/INC`MAKELOG=%#,%q<mid>,{Partnered to: %q<id> '%q<orgname>'};@include u(crm)/INC`MAKELOG=%#,%q<id>,{Partnered to: %q<mid> '%q<morgname>'}

&INC`UNPARTNER u(crm)=@include u(crm)/INC`TARGET;th setq(mid,%q<id>,morgname,%q<orgname>);@include u(crm)/INC`TARGET=%1;@assert match(get(u(Crm-db)/%q<mid>`PARTNERS),%q<id>)=@nspemit %#=announce(CRM) ERROR: That Organization is not a partner of %q<mid> '%q<morgname>';@nscemit/noisy u(cmo`staffrep)={ansi(h,CRM:) %n unpartnered %q<mid> '%q<morgname>''s from: %q<id> '%q<orgname>'};@nspemit %#=announce(CRM) You unpartnered %q<mid> '%q<morgname>''s from: %q<id> '%q<orgname>';@nspemit setunion(%#,setunion(iter(setunion(get(u(crm-db)/%q<id>`LEADER),get(u(crm-db)/%q<id>`EMPLOYEES)),num(%i0)),iter(setunion(get(u(crm-db)/%q<mid>`LEADER),get(u(crm-db)/%q<mid>`EMPLOYEES)),num(%i0))))=announce(CRM) %n unpartnered %q<mid> '%q<morgname>''s from: %q<id> '%q<orgname>';&%q<mid>`PARTNERS u(crm-db)=filterbool(#lambda/hasattrval(u(crm-db),\%0),setdiff(get(u(crm-db)/%q<mid>`PARTNERS),%q<id>));&%q<id>`PARTNERS u(crm-db)=filterbool(#lambda/hasattrval(u(crm-db),\%0),setdiff(get(u(crm-db)/%q<id>`PARTNERS),%q<mid>));@include u(crm)/INC`MAKELOG=%#,%q<mid>,{Unpartnered from: %q<id> '%q<orgname>'};@include u(crm)/INC`MAKELOG=%#,%q<id>,{Unpartnered from: %q<mid> '%q<morgname>'}


&FUN`BORDER u(crm)=align(1. 74 1.,u(FUN`COLOR,%0,|),%1,u(FUN`COLOR,%0,|)%R)

&FUN`COLOR u(crm)=ansi(m,%1)

&FUN`HEADER u(crm)=u(FUN`COLOR,%0,\})[center(u(FUN`COLOR,%0,/)[ansi(h,%1)][u(FUN`COLOR,%0,/)],76,u(FUN`COLOR,%0,-))][u(FUN`COLOR,%0,\{)]

&INC`MAIN u(crm)=@switch/inline gt(strlen(%0),0)=1,{@include u(crm)/INC`TARGET;@include u(crm)/INC`MAIN`SHOWSHEET=%q<id>},{@include u(crm)/INC`MAIN`LISTORGS}

&INC`MAIN`LISTORGS u(crm)=@nspemit %#=header(CRM Organizations)%R[align(4 17 17 7 17,ID,NAME,LEADER,MEMBERS,SUBSIDIARIES)];@dolist/inline sort(filterbool(#lambda/not(hasattrval(u(crm-db)/\%0`PARENT)),reglattr(u(crm-db)/^\\d+$)),i)={@nspemit %#=align(4 17 17 7 17,pueblize(rjust(%i0,3).,+crm %i0),pueblize(get(u(crm-db)/%i0),+crm %i0),pueblize(name(get(u(crm-db)/%i0`LEADER)),+oocfinger [name(get(u(crm-db)/%i0`LEADER))]),words(filterbool(#lambda/isobjid(\%0),get(u(crm-db)/%i0`EMPLOYEES))),itemize(iter(%q<subs>,pueblize(get(u(crm-db)/%i0),+crm %i0),%b,|),|,and,\,))};@nspemit %#=header(+crm/all for Subsidiaries)

&INC`ALL u(crm)=@nspemit %#=header(CRM Organizations + Subsidiaries)%R[align(4 17 17 7 17,ID,NAME,LEADER,MEMBERS,PARENT)];@dolist/inline sort(reglattr(u(crm-db)/^\\d+$),i)={@nspemit %#=align(4 17 17 7 17,pueblize(rjust(%i0,3).,+crm %i0),pueblize(get(u(crm-db)/%i0),+crm %i0),pueblize(name(get(u(crm-db)/%i0`LEADER)),+oocfinger [name(get(u(crm-db)/%i0`LEADER))]),words(filterbool(#lambda/isobjid(\%0),get(u(crm-db)/%i0`EMPLOYEES))),if(hasattrval(u(crm-db)/%i0`PARENT),pueblize(get(u(crm-db)/[get(u(crm-db)/%i0`PARENT)]),+crm [get(u(crm-db)/%i0`PARENT)])))};@nspemit %#=header(+crm/stats for Stats)

&INC`STATS u(crm)=@nspemit %#=header(CRM Organizations - Stats Mode)%R[align(4 17 17 4 4 4 4 4 4 4,ID,NAME,LEADER,COMP,INFL,REAC,SIZE,WEAL,CAPI,AVAI)];@dolist/inline sort(filterbool(#lambda/not(hasattrval(u(crm-db)/\%0`PARENT)),reglattr(u(crm-db)/^\\d+$)),i)={@nspemit %#=align(4 17 17 4 4 4 4 4 4 4,pueblize(rjust(%i0,3).,+crm %i0),pueblize(get(u(crm-db)/%i0),+crm %i0),pueblize(name(get(u(crm-db)/%i0`LEADER)),+oocfinger [name(get(u(crm-db)/%i0`LEADER))]),strfirstof(get(u(crm-db)/%i0`STAT`COMPETENCE),0),strfirstof(get(u(crm-db)/%i0`STAT`INFLUENCE),0),strfirstof(get(u(crm-db)/%i0`STAT`REACH),0),strfirstof(get(u(crm-db)/%i0`STAT`SIZE),0),strfirstof(get(u(crm-db)/%i0`STAT`WEALTH),0),strfirstof(u(FUN`GET`CAPITAL`MAX,%i0),0),strfirstof(u(FUN`GET`CAPITAL`AVAILABLE,%i0),0))};@nspemit %#=header(+crm/allstats for Subsidiaries)

&INC`ALLSTATS u(crm)=@nspemit %#=header(CRM Organizations - Stats Mode)%R[align(4 17 17 4 4 4 4 4 4,ID,NAME,LEADER,COMP,INFL,REAC,SIZE,WEAL,CAPI,AVAI)];@dolist/inline sort(reglattr(u(crm-db)/^\\d+$),i)={@nspemit %#=align(4 17 17 4 4 4 4 4 4,pueblize(rjust(%i0,3).,+crm %i0),pueblize(get(u(crm-db)/%i0),+crm %i0),pueblize(name(get(u(crm-db)/%i0`LEADER)),+oocfinger [name(get(u(crm-db)/%i0`LEADER))]),strfirstof(get(u(crm-db)/%i0`STAT`COMPETENCE),0),strfirstof(get(u(crm-db)/%i0`STAT`INFLUENCE),0),strfirstof(get(u(crm-db)/%i0`STAT`REACH),0),strfirstof(get(u(crm-db)/%i0`STAT`SIZE),0),strfirstof(get(u(crm-db)/%i0`STAT`WEALTH),0),strfirstof(u(FUN`GET`CAPITAL`MAX,%i0),0),strfirstof(u(FUN`GET`CAPITAL`AVAILABLE,%i0),0))};@nspemit %#=header(+crm/allstats for Subsidiaries)

&INC`MAIN`SHOWSHEET u(crm)=@nspemit %#=u(FUN`HEADER,%0,Policy);@nspemit %#=u(FUN`BORDER,%0,align(36 37,Name: [default(u(crm-db)/%0,Unset)]%RMotivation: [default(u(crm-db)/%0`STAT`MOTIVATION,Unset)],INTIMACIES%R[iter(sortkey(#lambda/last(\%0,`),lattr(u(crm-db)/%0`INTIMACY`*)),rjust(last(%i0,`),2). [default(u(crm-db)/%i0,Unset (???))],%b,%R)]));@switch/inline hasattrval(u(crm-db)/%0`STAT`EXTRA)=1,{@nspemit %#=u(FUN`HEADER,%0,Extra);@nspemit %#=u(FUN`BORDER,%0,get(u(crm-db)/%0`STAT`EXTRA))};@nspemit %#=u(FUN`HEADER,%0,Assets);@nspemit %#=u(FUN`BORDER,%0,ljust(STATS,16)DETAILS%R[iter(Competence Influence Reach Size Wealth,align(>13 1 56,%i0%B[rjust(default(u(crm-db)/%0`STAT`%i0,0),2,0)],-,get(u(crm-db)/%0`STAT`%i0`DESC)),%b,%R)]);@switch/inline t(nattr(u(crm-db)/%0`SPECIAL`*))=1,{@nspemit %#=u(FUN`BORDER,%0,SPECIAL ASSETS:%R[iter(sortkey(#lambda/last(\%0,`),lattr(u(crm-db)/%0`SPECIAL`*)),rjust(last(%i0,`),2). [default(u(crm-db)/%i0,Unset (???))],%b,%R)])};@nspemit %#=u(FUN`HEADER,%0,Resources);@nspemit %#=u(FUN`BORDER,%0,align(13 1 56,CAPITAL,,COMMITMENTS));@nspemit %#=u(FUN`BORDER,%0,align(>13 1 56,iter(Max Current Borrowed Lent Committed Available,%i0: [rjust(u(FUN`GET`CAPITAL`%i0,%0),2,0)],%b,%R),,iter(sortkey(#lambda/last(\%0,`),lattr(u(crm-db)/%0`COMMIT`*)),last(%i0,`): [get(u(crm-db)/%i0)] for: [get(u(crm-db)/%i0`DESC)],%b,%r)[if(u(FUN`GET`CAPITAL`BORROWED,%0),%RBORROWING:%R[iter(filterbool(#lambda/hasattrval(u(crm-db),elements(\%0,2,`)),lattr(u(crm-db)/CTRANS`*`%0)),get(u(crm-db)/%i0) from [pueblize(elements(%i0,2,`)-[get(u(crm-db)/[elements(%i0,2,`)])],+crm [elements(%i0,2,`)])],%b,%r)])][if(u(FUN`GET`CAPITAL`LENT,%0),%RLENDING:%R[iter(filterbool(#lambda/hasattrval(u(crm-db),elements(\%0,3,`)),lattr(u(crm-db)/CTRANS`%0`*)),get(u(crm-db)/%i0) to [pueblize(elements(%i0,3,`)-[get(u(crm-db)/[elements(%i0,3,`)])],+crm [elements(%i0,3,`)])],%b,%r)])]));@nspemit %#=u(FUN`HEADER,%0,Structure);@nspemit %#=u(FUN`BORDER,%0,align(33 40,MEMBERSHIP%RLeader: [name(get(u(crm-db)/%0`LEADER))]%RManagers: [itemize(iter(sort(filterbool(#lambda/isobjid(\%0),get(u(crm-db)/%0`MANAGERS)),namei),name(%i0),%b,|),|,and,\,)]%REmployees: [itemize(iter(setdiff(filterbool(#lambda/isobjid(\%0),get(u(crm-db)/%0`EMPLOYEES)),filterbool(#lambda/isobjid(\%0),get(u(crm-db)/%0`MANAGERS)),,,namei),name(%i0),%b,|),|,and,\,)],PARENT: [if(hasattrval(u(crm-db)/%0`PARENT),pueblize(get(u(crm-db)/%0`PARENT)-[get(u(crm-db)/[get(u(crm-db)/%0`PARENT)])],+crm [get(u(crm-db)/%0`PARENT)]))]%R%RPARTNERS%R[if(hasattrval(u(crm-db)/%0`PARTNERS),iter(filterbool(#lambda/hasattrval(u(crm-db),\%0),sort(get(u(crm-db)/%0`PARTNERS),n)),pueblize(rjust(%i0,3,0).,+crm %i0) [pueblize(get(u(crm-db)/%i0),+crm %i0)],%b,%r)%R%R)]));@switch/inline gt(words(filterbool(#lambda/strmatch(get(u(crm-db)/\%0`PARENT),%0),reglattr(u(crm-db)/^\\d+$))),0)=1,{@include u(crm)/INC`MAIN`SHOWSHEET`LISTSUBS};@nspemit %#=u(FUN`COLOR,%0,+)[u(FUN`COLOR,%0,repeat(-,76))][u(FUN`COLOR,%0,+)]

&INC`MAIN`SHOWSHEET`LISTSUBS u(crm)=@nspemit %#=u(FUN`HEADER,%0,Subsidiaries)%R[u(FUN`BORDER,%0,align(4 17 17 7 17,ID,NAME,LEADER,MEMBERS,SUBSIDIARIES))];@dolist/inline sort(filterbool(#lambda/strmatch(get(u(crm-db)/\%0`PARENT),%0),reglattr(u(crm-db)/^\\d+$)),i)={@nspemit %#=u(FUN`BORDER,%0,align(4 17 17 7 17,pueblize(rjust(%i0,3).,+crm %i0),pueblize(get(u(crm-db)/%i0),+crm %i0),pueblize(name(get(u(crm-db)/%i0`LEADER)),+oocfinger [name(get(u(crm-db)/%i0`LEADER))]),words(filterbool(#lambda/isobjid(\%0),get(u(crm-db)/%i0`EMPLOYEES))),itemize(iter(%q<subs>,pueblize(get(u(crm-db)/%i0),+crm %i0),%b,|),|,and,\,)))}

&FUN`GET`CAPITAL`MAX u(crm)=sub(add(lmath(add,iter(SIZE COMPETENCE INFLUENCE WEALTH REACH,get(u(crm-db)/%0`STAT`%i0))),u(FUN`GET`CAPITAL`BORROWED,%0)),u(FUN`GET`CAPITAL`LENT,%0))
&FUN`GET`CAPITAL`CURRENT u(crm)=strfirstof(bound(get(u(crm-db)/%0`STAT`CAPITAL),0,u(FUN`GET`CAPITAL`MAX,%0)),u(FUN`GET`CAPITAL`MAX,%0))
&FUN`GET`CAPITAL`COMMITTED u(crm)=lmath(add,iter(lattr(u(crm-db)/%0`COMMIT`*),get(u(crm-db)/%i0)))
&FUN`GET`CAPITAL`AVAILABLE u(crm)=sub(u(FUN`GET`CAPITAL`CURRENT,%0),u(FUN`GET`CAPITAL`COMMITTED,%0))
&FUN`GET`CAPITAL`BORROWED u(crm)=lmath(add,iter(filterbool(#lambda/hasattrval(u(crm-db),elements(\%0,2,`)),lattr(u(crm-db)/CTRANS`*`%0)),get(u(crm-db)/%i0)))
&FUN`GET`CAPITAL`LENT u(crm)=lmath(add,iter(filterbool(#lambda/hasattrval(u(crm-db),elements(\%0,3,`)),lattr(u(crm-db)/CTRANS`%0`*)),get(u(crm-db)/%i0)))


@@ CTRANS`<from>`<to> = <amt>

@@ ACT section
&VAR`ACT`PLAYFLAGS u(crm)=SET|FINISH

&INC`ACT`MAIN u(crm)=@include u(crm)/INC`ACT`ADD

&INC`ACT`ADD u(crm)=@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,CRMSET)=@nspemit %#=announce(CRM) ERROR: You lack permission to do that.;@assert strlen(elements(%0,1,|))=@nspemit %#=announce(CRM) ERROR: No player entered to be the leader.;@include u(ccs)/INC`CHECKPC=elements(%0,1,|),1,CRM;@assert strlen(elements(%0,2,|))=@nspemit %#=announce(CRM) ERROR: No Action Type entered!;@include u(ccs)/INC`PARTIAL=elements(%0,2,|),v(VAR`ACT`ACTIONS),|,CRM,action,action;@assert setr(cap,elements(%0,3,|))=@nspemit %#=announce(CRM) ERROR: Capital field empty.;@assert isint(%q<cap>)=@nspemit %#=announce(CRM) ERROR: Capital must be in whole numbers!;@assert setr(rcap,elements(%0,4,|))=@nspemit %#=announce(CRM) ERROR: Required Capital field empty.;@assert isint(%q<rcap>)=@nspemit %#=announce(CRM) ERROR: Required Capital must be in whole numbers!;@assert strlen(setr(dur,elements(%0,5,|)))=@nspemit %#=announce(CRM) ERROR: No Duration entered!;@assert or(strmatch(%q<dur>,X),u(FUN`EVALTIME,%q<dur>))=@nspemit %#=announce(CRM) ERROR: Duration must be in EVALTIME or X for Indefinite!;@assert strlen(setr(diff,elements(%0,6,|)))=@nspemit %#=announce(CRM) ERROR: Difficulty field empty.;@assert valnum(%q<diff>)=@nspemit %#=announce(CRM) ERROR: Difficulty must be a whole, positive number!;@assert strlen(setr(need,elements(%0,7,|)))=@nspemit %#=announce(CRM) ERROR: Successes Needed field empty.;@assert valnum(%q<diff>)=@nspemit %#=announce(CRM) ERROR: Successes Needed must be a whole, positive number!;@assert strlen(%1)=@nspemit %#=announce(CRM) ERROR: An explanation for the Leadership Action is required!;&[setr(attr,%q<gid1>`CRM`ACT`[nextslot(u(gdb),%q<gid1>`CRM`ACT)])] u(gdb)=u(FUN`EVALTIME,%q<dur>);&%q<attr>`ACTION u(gdb)=%q<action>;&%q<attr>`BY u(gdb)=%q<t1objid>;&%q<attr>`DESC u(gdb)=%1;&%q<attr>`CAPITAL u(gdb)=%q<cap>;&%q<attr>`REQCAPITAL u(gdb)=%q<rcap>;&%q<attr>`DIFFICULTY u(gdb)=%q<diff>;&%q<attr>`NEEDED u(gdb)=%q<need>;@nspemit %#=announce(CRM) You start [setr(mess,a new leadership Action for %q<orgname>'s CRM on behalf of %q<t1name>: %q<action> (%q<cap>) - [if(strmatch(%q<dur>,X),Indefinite,u(FUN`DISPTIME,u(FUN`EVALTIME,%q<dur>)))] - %1)];@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n started %q<mess>},OOC,1;@include u(crm)/INC`MAKELOG=%:,%q<id>,{CRM New leadership Action on behalf of %q<t1name>: %q<action> (%q<cap>) - [if(strmatch(%q<dur>,X),Indefinite,u(FUN`DISPTIME,u(FUN`EVALTIME,%q<dur>)))] - %1}

@@ +crmact <player>|<action>|<capital>|<required capital>|<duration>|<diff>|<needed>=<explanation>

&INC`ACT`SET u(crm)=@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,CRMSET)=@nspemit %#=announce(CRM) ERROR: You lack permission to do that.;@assert strlen(%0)=@nspemit %#=announce(CRM) ERROR: Leadership Action field empty.;@assert strlen(setr(slot,before(%0,/)))=@nspemit %#=announce(CRM) ERROR: Action Slot field empty.;@assert hasattr(u(gdb)/%q<gid1>`CRM`ACT`%q<slot>)=@nspemit %#=announce(CRM) ERROR: Project not found!;@include u(ccs)/INC`PARTIAL=after(%0,/),v(VAR`ACT`SET),|,CRM,field,field;@assert strlen(%1)=@nspemit %#=announce(CRM) ERROR: Entry empty.;@include u(crm)/INC`ACT`SET`CHECK`%q<field>;&%q<gid1>`CRM`ACT`%q<slot>[switch(%q<field>,DURATION,,`%q<field>)] u(gdb)=%q<entry>;@nspemit %#=announce(CRM) You set %q<orgname>'s CRM Project %q<slot> %q<field> to: %q<entry>;@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n set %q<orgname>'s CRM Project %q<slot> %q<field> to: %q<entry>},OOC,1;@include u(crm)/INC`MAKELOG=%:,%q<id>,{CRM set %q<orgname>'s CRM Project %q<slot> %q<field> to: %q<entry>}

&INC`ACT`SET`CHECK`DESC u(crm)=th setq(entry,%1)
&INC`ACT`SET`CHECK`GATHERED u(crm)=@assert isint(setr(entry,%1))=@nspemit %#=announce(CRM) ERROR: Gathered Successes Must be an integer!
&INC`ACT`SET`CHECK`CAPITAL u(crm)=@assert isint(setr(entry,%1))=@nspemit %#=announce(CRM) ERROR: Capital must be an integer!
&INC`ACT`SET`CHECK`REQCAPITAL u(crm)=@assert isint(setr(entry,%1))=@nspemit %#=announce(CRM) ERROR: Required Capital must be an integer!
&INC`ACT`SET`CHECK`ACTION u(crm)=@include u(ccs)/INC`PARTIAL=%1,v(VAR`ACT`ACTIONS),|,CRM,entry,entry
&INC`ACT`SET`CHECK`DIFFICULTY u(crm)=@assert valnum(setr(entry,%1))=@nspemit %#=announce(CRM) ERROR: Difficulty must be a whole, positive number!
&INC`ACT`SET`CHECK`BY u(crm)=@include u(ccs)/INC`CHECKPC=%1,1,CRM;th setq(entry,%q<t1objid>)
&INC`ACT`SET`CHECK`NEEDED u(crm)=@assert or(setr(entry,%1),eq(%1,0))=@nspemit %#=announce(CRM) ERROR: Needed Successes must be a whole, positive number!
&INC`ACT`SET`CHECK`DURATION u(crm)=@assert or(strmatch(%1,X),valnum(u(FUN`EVALTIME,%1)))=@nspemit %#=announce(CRM) ERROR: Duration must be in EVALTIME or X for Indefinite!;th setq(entry,if(strmatch(%1,X),X,u(FUN`EVALTIME,%1)));@wipe u(gdb)/%q<gid1>`CRM`ACT`%q<slot>`REPORTED

&INC`ACT`FINISH u(crm)=@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,CRMSET)=@nspemit %#=announce(CRM) ERROR: You lack permission to do that.;@assert strlen(%0)=@nspemit %#=announce(CRM) ERROR: Project Slot empty!;@assert hasattr(u(gdb)/%q<gid1>`CRM`ACT`%0)=@nspemit %#=announce(CRM) ERROR: No project in that slot.;@include u(ccs)/INC`VERIFY={ansi(hr,WARNING:) This will delete/finish the Project. This cannot be undone. ARe you sure? Enter the same command within ten seconds to continue!},CRM DELETE %0,CRM;@nspemit %#=announce(CRM) You finished %q<orgname>'s CRM Project %0 '[default(u(gdb)/%q<gid1>`CRM`ACT`%0`ACTION,Unset)]';@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n finished %q<orgname>'s CRM Project %0 '[default(u(gdb)/%q<gid1>`CRM`ACT`%0`ACTION,Unset)]'},OOC,1;@include u(crm)/INC`MAKELOG=%:,%q<id>,{CRM finished %q<orgname>'s CRM Project %0 '[default(u(gdb)/%q<gid1>`CRM`ACT`%0`ACTION,Unset)]'};@set u(gdb)=!SAFE;@wipe u(gdb)/%q<gid1>`CRM`ACT`%0;@set u(gdb)=SAFE

&FUN`EVALTIME u(crm)=lmath(add,iter(%0,switch(%i0,*s,before(%i0,s),*m,mul(before(%i0,m),u(mi)),*h,mul(before(%i0,h),u(ho)),*d,mul(before(%i0,d),u(da)),*w,mul(before(%i0,w),u(we)),*mo,mul(before(%i0,mo),u(mo)),*sea,mul(before(%i0,sea),u(se)),*y,mul(before(%i0,y),u(ye)),0)))

&FUN`DISPTIME u(crm)=if(strmatch(%0,X),Indefinite,trim(if(setr(mo,div(setr(newsec,%0),u(mo))),%q<mo>mo%B[setq(newsec,sub(%0,mul(u(mo),%q<mo>)))])[if(and(%q<newsec>,setr(we,div(%q<newsec>,u(we)))),%q<we>w%B[setq(newsec,sub(%q<newsec>,mul(u(we),%q<we>)))])][if(and(%q<newsec>,setr(da,div(%q<newsec>,u(da)))),%q<da>d%B[setq(newsec,sub(%q<newsec>,mul(u(da),%q<da>)))])][if(and(%q<newsec>,setr(ho,div(%q<newsec>,u(ho)))),%q<ho>h%B[setq(newsec,sub(%q<newsec>,mul(u(ho),%q<ho>)))])][if(and(%q<newsec>,setr(mi,div(%q<newsec>,u(mi)))),%q<mi>m%B[setq(newsec,sub(%q<newsec>,mul(u(mi),%q<mi>)))])][if(%q<newsec>,%q<newsec>s)]))

&YE u(crm)=mul(u(da),425)
&SE u(crm)=mul(u(mo),3)
&MO u(crm)=mul(u(we),4)
&WE u(crm)=mul(u(da),7)
&DA u(crm)=mul(u(ho),25)
&HO u(crm)=mul(u(mi),60)
&MI u(crm)=60

&VAR`ACT`SET u(crm)=DESC|BY|DIFFICULTY|GATHERED|NEEDED|DURATION|ACTION|CAPITAL|REQCAPITAL

&VAR`ACTIONS u(crm)=GROW ASSET|ATTACK ASSET|CANNIBALIZE ASSET|REALLOCATE ASSET|HALT PROJECT|ATTACK PROJECT|CONTEST PROJECT|REPLENISH CAPITAL|TRANSFER CAPITAL|SHIFT POLICY/STRUCTURE|PROTECT ORGANIZATION

&TRG`TICKDOWN u(crm)=@dolist/inline/nobreak regrepi(u(gdb),*`CRM`ACT`*,\\d+)={&%i0 u(gdb)=sub(get(u(gdb)/%i0),%0);@trigger u(crm)/TRG`CHECKFINISH=%i0}

&TRG`CHECKFINISH u(crm)=@assert lte(get(u(gdb)/%0),0);@break get(u(gdb)/%0`REPORTED);@include u(gso)/INC`CODE`VALGROUP=first(%0,`),1;@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %q<orgname>'s CRM Project [first(%0,`)] '[default(u(gdb)/%0`ACTION,Unset)]' has finished its Duration and been submitted for processing!},OOC,1;@include u(crm)/INC`MAKELOG=%:,%q<id>,{CRM finished %q<orgname>'s CRM Project [first(%0,`)] '[default(u(gdb)/%0`ACTION,Unset)]'};@assert isdbref(setr(bucket,locate(get(u(job)/vc),CRM,TXxi)))=@nscemit/noisy Staff Reports=CRM Bucket not found, cannot finish Group %q<gid1>'s pending project!;@trigger get(u(job)/va)/TRIG_CREATE=get(u(gdb)/%0`BY),%q<bucket>,strfirstof(getstat(u(rst)/PRIORITY,%q<category>),1),%q<galias1> - [first(%0,`)] '[default(u(gdb)/%0`ACTION,Unset)]',The Project is ready for admin review.,,,;&%0`REPORTED u(gdb)=1

@@ DIV section

&INC`DIV`MAIN u(crm)=@assert strlen(%0)=@nspemit %#=announce(CRM) No time entered to divide!;@assert valnum(setr(time,u(FUN`EVALTIME,%0)))=@nspemit %#=announce(CRM) ERROR: Entered time must be in DURATION format!;@assert strlen(%1)=@nspemit %#=announce(CRM) ERROR: No value entered to divide the duration by.;@assert valnum(%1)=@nspemit %#=announce(CRM) ERROR: Divisor must be a whole, positive number.;@nspemit %#=announce(CRM) [u(FUN`DISPTIME,u(FUN`EVALTIME,%0))] Divided by %1: [u(FUN`DISPTIME,div(u(FUN`EVALTIME,%0),%1))]