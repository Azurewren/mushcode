@@ DEPENDENCIES - Core

@switch/inline isdbref(u(gso))=0,{@tel create(Group System Object <GSO>)=config(master_room)}
&gso u(coi)=locate(config(master_room),Group System Object <GSO>,TXxi)
@parent u(gso)=u(coi)
@set u(gso)=WIZARD !NO_COMMAND

@switch/inline isdbref(u(gdb))=0,{@switch/inline isdbref(u(gso))=1,{@tel create(Group Database Object <GDB>)=u(gso)}}
&gdb u(coi)=locate(u(gso),Group Database Object <GDB>,TXxi)
@parent u(gdb)=u(coi)
@set u(gdb)=WIZARD SAFE
@power u(gdb)=many_attribs

&CMD`+GROUP u(gso)=$^(?s)(?\:\+)?g(roups|roup|create|rename|alias|set|div|undiv|gag|ungag|ictitle|ooctitle|invite|invites|uninvite|join|refuse|add|leave|kick|perm|rank|icon|icoff|oocon|oocoff|disband|ooc|radio|ic)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@include u(gso)/INC`CHOOSE=+g,%1,%2,%3,%4
@set u(gso)/CMD`+GROUP=regexp

&INC`CHOOSE u(gso)=@switch/regexp/inline 1=strmatch(%0,+g),{@assert or(not(strlen(%2)),match(setr(choices,setunion(get(u(gso)/VAR`PLAYFLAGS`G`%1),if(isadmin(%#),get(u(gso)/VAR`ADMINFLAGS`G`%1)),|,|)),ucstr(%2),|))=@nspemit %#=announce(GROUPS) ERROR: Invalid switch for %0%1! Your choices are: [itemize(%q<choices>,|,and,\,)];@include u(gso)/INC`CHOOSE`G`%1=%2,%3,%4,G},{@nspemit %#=announce(GROUPS) ERROR: Unknown code error. Please contact staff.}

&INC`CHOOSE`G`CREATE u(gso)=@include u(gso)/INC`CODE`CREATE=%1,%2,%3

&INC`CODE`CREATE u(gso)=@assert isadmin(%#)=@nspemit %#=announce(GROUPS) ERROR: Only Admin can make Groups.;@assert strlen(%0)=@nspemit %#=announce(GROUPS) ERROR: Alias field empty.;@assert regmatchi(%0,^(\[A-Z\]\{1,7\})$)=@nspemit %#=announce(GROUPS) ERROR: Aliases may only be seven or fewer alphabetic characters (A-Z) with no spaces or symbols.;@switch/inline gt(v(VAR`CODE`PERNMODE),0)=1,{@break strmatch(%0,DTU)=@nspemit %#=announce(GROUPS) ERROR: DTU is an unacceptable ALIAS.};@break gt(words(setr(exist,u(u(gso)/FUN`FINDGROUP,%0))),0)=@nspemit %#=announce(GROUPS) ERROR: A Group by that Alias already exists: [get(u(gdb)/%q<exist>)] - [get(u(gdb)/%q<exist>`NAME)];@assert strlen(%1)=@nspemit %#=announce(GROUPS) ERROR: Name field empty.;@include u(gso)/INC`CODE`DOCREATE=%0,%1;@nspemit %#=announce(GROUP) You have created the [ansi(hw,%q<galias1> - %q<gname1>)];@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>,{The group was created.}

&FUN`FINDGROUP u(gso)=first(filterbool(#lambda/isint(\%0),before(strfirstof(first(grepi(u(gdb),*`NAME,%0)),first(grepi(u(gdb),*,%0))),`)))

&VAR`DEFAULTS`SETPERM u(gso)=DESC~0|TYPE~0|MOTD~0|DIV~0|INV~0|KICK~0|ADD~0|IC~10|OOC~10|PROMOTE~0|GAG~0|SET~0|PERM~0|ICTITLE~0|ICTITLEOTHER~0|OOCTITLE~1|OOCTITLEOTHER~0|LOCK~0|BBADMIN~0

&VAR`CODE`PERNMODE u(gso)=0

&VAR`DEFAULTS`SETOP u(gso)=IC~1|OOC~1|SRANK~1|COLOR~h

&INC`CODE`DOCREATE u(gso)=@assert strlen(%0);@assert strlen(%1);&[setr(gid1,add(1,lmath(max,lattr(u(gdb)/*))))] u(gdb)=setr(galias1,%0);&%q<gid1>`NAME u(gdb)=setr(gname1,%1);th setstat(%#/D`GROUP,Group,%q<gid1>)

&INC`CODE`MAKELOG u(gso)=&[setr(log,%1`LOG`[add(1,lmath(max,iter(lattr(u(gdb)/%1`LOG`*),last(%i0,`))))])] u(gdb)=%2;&%q<log>`SUBMITTER u(gdb)=%0;&%q<log>`SUBMITTED u(gdb)=secs()

&INC`CODE`VALGROUP u(gso)=@assert strlen(%0)=@nspemit %#=announce(GROUPS) ERROR: No group entered to check.;@assert valnum(%1)=@nspemit %#=announce(GROUPS) ERROR: Code error, contact staff.;@switch/inline gt(setr(gid%1,firstof(u(u(gso)/FUN`FINDGROUP,%0),if(hasattr(u(gdb)/%0),%0,0))),0)=0,{@switch/inline gt(setr(gid%1,u(u(gso)/FUN`FINDGROUP,grab(iter(lattr(u(gdb)/*,|),get(u(gdb)/%i0),|,|),%0*,|))),0)=0,{@assert gt(setr(gid%1,u(u(gso)/FUN`FINDGROUP,grab(iter(lattr(u(gdb)/*`NAME,|),get(u(gdb)/%i0),|,|),%0*,|))),0)=@nspemit %#=announce(GROUPS) ERROR: Group or Sub-Group not found.}};th setq(gname%1,get(u(gdb)/%q<gid%1>`NAME),galias%1,get(u(gdb)/%q<gid%1>))

&INC`CHOOSE`G`RENAME u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`RENAME=%1,%2,%3
&INC`CODE`RENAME u(gso)=@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of %q<gname1>.;@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,RENAME)=@nspemit %#=announce(GROUPS) ERROR: You lack permission to do that.;@assert strlen(%0)=@nspemit %#=announce(GROUPS) ERROR: Name field empty.;@break words(grepi(u(gdb)/*`NAME,%0))=@nspemit %#=announce(GROUPS) ERROR: A Group already has that name.;&%q<gid1>`NAME u(gdb)=%0;@include u(gso)/INC`CODE`MAKELOG=%:,q<gid1>,{Group renamed to: %0};@include u(gso)/INC`CODE`CHAT={%n Renamed the Group to %0},OOC,1

&INC`CHOOSE`G`ALIAS u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`ALIAS=%1,%2,%3
&INC`CODE`ALIAS u(gso)=@assert isadmin(%#)=@nspemit %#=announce(GROUPS) ERROR: Only Admin may re-Alias Groups.;@assert strlen(%0)=@nspemit %#=announce(GROUPS) ERROR: ALIAS field empty.;@assert regmatchi(%0,^(\[A-Z\]\{1,5\})$)=@nspemit %#=announce(GROUPS) ERROR: Aliases may only be 7 or fewer alphabetic characters (A-Z) with no spaces or symbols.;@break words(grepi(u(gdb)/*,%0))=@nspemit %#=announce(GROUPS) ERROR: A Group already has that Alias.;&%q<gid1> u(gdb)=ucstr(%0);@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>,{Alias changed to: %0};@include u(gso)/INC`CODE`CHAT={%n changed the Group's Alias to [ucstr(ansi(hw,%0))]},OOC,1

&GFN`ISGROUPMEMBER u(gso)=switch(1,isadmin(%0),1,hasflag(%0,JAILED),0,if(valnum(%1),match(get(u(gdb)/%1`MEMBERS),%0),if(eq(0,%1),if(u(u(gso)/FUN`FINDGROUP,%1),isgroupmember(%0,u(u(gso)/FUN`FINDGROUP,%1)),0),0)))

&INC`CHOOSE`G`DISBAND u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`DISBAND=%1,%2,%3
&INC`CODE`DISBAND u(gso)=@assert isadmin(%#)=@nspemit %#=announce(GROUPS) ERROR: Only Staff may Disband Groups.;@include u(ccs)/INC`VERIFY={WARNING: This will completely disband %q<gname1> and all Divisions. ARe you sure you want to continue? Enter the same command again within 10 seconds to Verify!},FAC DELETE %q<gid1>;@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n has Disbanded the Group!},OOC,1;@dolist lsearch(all,eplayer,\[hasattr(##/D`GROUP`%q<gid1>)\])={@wipe %i0/D`GROUP`%q<gid1>};@set u(gdb)=!SAFE;@wipe u(gdb)/%q<gid1>;@set u(gdb)=SAFE;@switch/inline isdbref(u(kdb))=1,{@dolist/inline regrepi(u(kdb),LOCK`*`GROUP,\\b%q<gid1>\\b)={&%i0 u(kdb)=setdiff(%q<gid1>,get(u(kdb)/%i0))}}

&INC`CHOOSE`G`DIV u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`DIV=%1,%2,%3
&INC`CODE`DIV u(gso)=

&INC`CHOOSE`G`UNDIV u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`UNDIV=%1,%2,%3
&INC`CODE`UNDIV u(gso)=

&FUN`GRPPERM u(gso)=if(isadmin(%0),1,lte(u(u(gso)/FUN`GETRANK,%1,%0),u(u(gso)/FUN`GETPERM,%1,%2)))

&FUN`GETRANK u(gso)=switch(1,isadmin(%0),-1,strfirstof(getstat(u(gdb)/%0`RANK,%1),getstat(u(gso)/VAR`DEFAULTS`SETOP,SRANK)))

&FUN`DIVPERM u(gso)=

&INC`CHOOSE`G`GAG u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`GAG=%1,%2,%3
&INC`CODE`GAG u(gso)=@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of %q<gname1>.;@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,GAG)=@nspemit %#=announce(GROUPS) ERROR: You lack permission to do that.;@include u(ccs)/INC`CHECKPC=%0,1,GROUPS;@assert isgroupmember(%q<t1objid>,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: Must target a group member.;@assert lt(u(u(gso)/FUN`GETRANK,%q<gid1>,%:),u(u(gso)/FUN`GETRANK,%q<gid1>,%q<t1objid>))=@nspemit %#=announce(GROUPS) ERROR: Only subordinates may be gagged.;@break gt(getstat(u(gdb)/%q<gid1>`GAG,%q<t1objid>),-2)=@nspemit %#=announce(GROUPS)%B%q<t1name> is already gagged.;th setstat(u(gdb)/%q<gid1>`GAG,%q<1objid>,u(u(gso)/FUN`GETRANK,%q<gid1>,%:))

&INC`CHOOSE`G`UNGAG u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`UNGAG=%1,%2,%3
&INC`CODE`UNGAG u(gso)=@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of %q<gname1>.;@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,GAG)=@nspemit %#=announce(GROUPS) ERROR: You lack permission to do that.;@include u(ccs)/INC`CHECKPC=%0,1,GROUPS;@assert isgroupmember(%q<t1objid>,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: Must target a group member.;@assert lt(u(u(gso)/FUN`GETRANK,%q<gid1>,%:),u(u(gso)/FUN`GETRANK,%q<gid1>,%q<t1objid>))=@nspemit %#=announce(GROUPS) ERROR: Only subordinates may be ungagged.;@assert lte(u(u(gso)/FUN`GETRANK,%q<gid1>,%:),setr(gagger,getstat(u(gdb)/%q<gid1>`GAG,%q<t1objid>)))=@nspemit %#=announce(GROUPS) ERROR: That person was Gagged by Rank: %q<gagger>;th delstat(u(gdb)/%q<gid1>`GAG,%q<t1objid>)

&INC`CHOOSE`G`ROUP u(gso)=@switch/inline gt(strlen(%1),0)=1,{@include u(gso)/INC`CODE`SWITCH=%1,%2,%3,%4,%5,%6,%7,%8},0,{@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`WHO=%1,%2,%3}

&INC`CHOOSE`G`WHO u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`WHO=%1,%2,%3

&INC`CODE`SWITCH u(gso)=@include u(gso)/INC`CODE`VALGROUP=%0,1;@include u(gso)/INC`CODE`WHO=0,1;@switch/inline isgroupmember(%:,%q<gid1>)=1,{@nspemit %#=announce(GROUPS) You are now managing: [ansi(hw,%q<gname1>)];th setstat(%#/D`GROUP,Group,%q<gid1>)}

&INC`CODE`WHO u(gso)=@nspemit %#=header(MEMBERS: %q<gname1>);@switch/inline and(gt(strlen(setr(type,getstat(u(gdb)/%q<gid1>`TYPE))),0),hasattr(u(gso)/INC`CODE`WHO`%q<type>))=1,{@include u(gso)/INC`CODE`WHO`%q<type>},0,{@nspemit %#=ljust(NAME,30)SEX%B[ljust(RANK,5)][ljust(TITLE,20)]%BLAST ON%R[subheader()];@dolist/inline sortkey(#lambda/u(u(gso)/FUN`GETRANK,%q<gid1>,\%0),filterbool(#lambda/isobjid(\%0),get(u(gdb)/%q<gid1>`MEMBERS)))={@nspemit %#=ljust(pueblize(color(%#,name(%i0),GROUP`GWHONAME,n),+finger [name(%i0)]),30)[center(color(%#,left(get(%i0/SEX),1),GROUP`GWHOSEX,n),3)][ljust(rjust(color(%#,u(u(gso)/FUN`GETRANK,%q<gid1>,%i0),GROUP`GWHORANK,n),3),6)][ljust(left(color(%#,getstat(%i0/D`GROUP`%q<gid1>,ICTITLE),GROUP`GWHOICTITLE,n),20),24)][if(gte(conn(%i0),0),ansi(hg,ago(idle(%i0))),ansi(hx,elements(get(%i0/LAST),2 3)))]}};@nspemit %#=header()

&INC`CHOOSE`G`ROUPS u(gso)=@include u(gso)/INC`CODE`GROUPLIST

&FUN`GETOP u(gso)=strfirstof(getstat(u(gdb)/%0`OP,%1),getstat(u(gso)/VAR`DEFAULTS`SETOP,%1))

&INC`CODE`GROUPLIST u(gso)=@nspemit %#=header(List of Groups)%R[ljust(ansi(h,Alias),10)][ljust(ansi(h,Name),40)][ljust(ansi(h,Type),15)][ansi(h,Members)];th iter(filterbool(#lambda/isint(\%0),lattr(u(gdb)/*)),nspemit(%#,ljust(pueblize(ansi(setr(color,strfirstof(u(u(gso)/FUN`GETOP,%i0,COLOR),h)),get(u(gdb)/%i0)),+group [get(u(gdb)/%i0)]),10)[ljust(pueblize(ansi(%q<color>,get(u(gdb)/%i0`NAME)),+group [get(u(gdb)/%i0)]),40)][ljust(get(u(gdb)/%i0`TYPE),15)][words(filterbool(#lambda/hasflag(\%0,CONNECTED),setr(members,filterbool(#lambda/isobjid(\%0),get(u(gdb)/%i0`MEMBERS)))))]/[words(%q<members>)]));@nspemit %#=header()

&INC`CHOOSE`G`SET u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`SET=%1,%2,%3
&INC`CODE`SET u(gso)=@switch/inline gt(strlen(%0),0)=1,{@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,SET)=@nspemit %#=announce(GROUPS) ERROR: You lack permission to do that.;@assert strlen(%0)=@nspemit %#=announce(GROUPS) ERROR: Option field empty.;@assert or(match(setr(choices,itemize(get(u(gso)/VAR`DEFAULTS`SETOP),before(%i0,~),|,|)),setr(c,ucstr(%0)),|),isadmin(%#))=@nspemit %#=announce(GROUPS) ERROR: That is not a valid choice. Your options are: [itemize(%q<choices>,|,and,\,)];th setstat(u(gdb)/%q<gid1>`OP,%qc,%1);@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>,{Option %qc: %1};@nspemit %#=announce(GROUP) You have changed %q<gname1>'s %qc OPTION to: %1;@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n changed %qc OPTION to: %1},OOC,1},0,{@nspemit %#=header(%q<gname1> - SET);th setq(spaces,add(2,lmath(max,iter(setr(fields,setunion(setr(ops,iter(get(u(gso)/VAR`DEFAULTS`SETOP),before(%i0,~),|,|)),iter(get(u(gdb)/%q<gid1>`OP),before(%i0,~),|,|),|,i,|)),strlen(%i0),|,%b))));@nspemit %#=table(iter(%q<fields>,ljust(rjust(if(match(get(u(gso)/VAR`DEFAULTS`SETOP),%i0~*,|),ansi(h,%i0),ansi(hr,%i0)),%q<spaces>),%q<space>):%B[left(u(u(gso)/FUN`GETOP,%q<gid1>,%i0),10)],|,|),38,78,|);@nspemit %#=%R%R[ansi(h,AVAILABLE OPTIONS:)] [itemize(%q<ops>,|,and,\,)];@nspemit %#=header()}


&INC`CHOOSE`G`ICTITLE u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`ICTITLE=%1,%2,%3
&INC`CHOOSE`G`OOCTITLE u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`OOCTITLE=%1,%2,%3

&INC`CODE`ICTITLE u(gso)=@include u(gso)/INC`CODE`DOTITLE=%0,%1,IC
&INC`CODE`OOCTITLE u(gso)=@include u(gso)/INC`CODE`DOTITLE=%0,%1,OOC
&INC`CODE`DOTITLE u(gso)=@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of %q<gname1>.;@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,%2TITLE[if(and(strlen(%0),strlen(%1)),OTHER)])=@nspemit %#=announce(GROUPS) ERROR: You lack permission to do that.;@switch/inline and(strlen(%0),strlen(%1))=1,{@include u(ccs)/INC`CHECKPC=%0,1,GROUPS;@assert isgroupmember(%q<t1objid>,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: Must target a group member.;th setq(target,%q<t1objid>);@assert strlen(setr(title,%1))=@nspemit %#=announce(GROUPS) ERROR: What title will you bestow?},0,{th setq(target,%:);@assert strlen(setr(title,%0))=@nspemit %#=announce(GROUPS) ERROR: What will you title yourself?};@break gt(%q<title>,20)=@nspemit %#=announce(GROUPS) ERROR: Titles may not exceed 20 characters in length.;th setstat(%q<target>/D`GROUP`%q<gid1>,%2TITLE,%q<title>);@nspemit %#=announce(GROUPS) You have set [if(strmatch(%:,%q<target>),your,%q<t1name>'s)] %2TITLE in [ansi(hw,%q<gname1>)] to: %1;@switch/inline strmatch(%#,%q<t1>)=0,{@nspemit %q<t1>=announce(GROUPS) %n has set your %2TITLE in [ansi(hw,%q<gname1>)] to: %1};@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>,{if(strmatch(%:,%q<target>),%n,%q<t1name>)'s %2TITLE set to: %1}

&INC`CHOOSE`G`ICON u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`CHANON=%1,-
&INC`CHOOSE`G`OOCON u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`CHANON=%1,=

&INC`CODE`CHANON u(gso)=@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of that group.;@break gt(getstat(%#/D`GROUP`%q<gid1>,setr(type,if(strmatch(%1,=),OOC,IC))),0)=@nspemit %#=announce(GROUPS) ERROR: You are already on that group's %q<type> Channel.;th setstat(%#/D`GROUP`%q<gid1>,%q<type>,1);@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n has joined the channel.},if(strmatch(%1,=),OOC,IC),1;@nspemit %#=announce(GROUPS) You have joined the [if(strmatch(%1,=),OOC,IC)] channel of %q<gname1> 

&INC`CHOOSE`G`ICOFF u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`CHANOFF=%1,-
&INC`CHOOSE`G`OOCOFF u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`CHANOFF=%1,=
&INC`CODE`CHANOFF u(gso)=@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of that group.;@assert gt(getstat(%#/D`GROUP`%q<gid1>,setr(type,if(strmatch(%1,=),OOC,IC))),0)=@nspemit %#=announce(GROUPS) ERROR: You are not on that group's %q<type> Channel.;th setstat(%#/D`GROUP`%q<gid1>,%q<type>,0);@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n has left the channel.},%q<type>,1;@nspemit %#=announce(GROUPS) You have left the %q<type> channel of %q<gname1>

&FUN`GETPERM u(gso)=strfirstof(getstat(u(gdb)/%0`PERM,%1),getstat(u(gso)/VAR`DEFAULTS`SETPERM,%1))

&INC`CHOOSE`G`PERM u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`PERM=%1,%2,%3
&INC`CODE`PERM u(gso)=@switch/inline gt(strlen(%0),0)=1,{@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of that group.;@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,PERM)=@nspemit %#=announce(GROUPS) ERROR: You lack permission to do that.;@assert strlen(%0)=@nspemit %#=announce(GROUPS) ERROR: No PERM type entered.;@assert or(match(setr(choices,setunion(iter(get(u(gso)/VAR`DEFAULTS`SETPERM),before(%i0,~),|,|),iter(get(u(gdb)/%q<gid1>`PERM),before(%i0,~),|,|),|,|)),%0,|),isadmin(%#)) Your choices are: [itemize(%q<choices>,|,and,\,)];@assert or(lte(setr(rank,u(u(gso)/FUN`GETRANK,%q<gid1>,%:)),getstat(u(gdb)/%q<gid1>`PERMSET,%2)),isadmin(%#))=@nspemit %#=announce(GROUPS) ERROR: That was set by one of higher rank.;@assert strlen(%1)=@nspemit %#=announce(GROUPS) ERROR: No new rank value entered.;@assert isint(%1)=@nspemit %#=announce(GROUPS) ERROR: Ranks must be whole numbers.;@assert or(lte(%q<rank>,%1),isadmin(%#))=@nspemit %#=announce(GROUPS) ERROR: Cannot set the requirement higher than your own rank.;th setstat(u(gdb)/%q<gid1>`PERM,%0,%1);th setstat(u(gdb)/%q<gid1>`PERMBY,%0,bound(%q<rank>,0));@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>,{Changed %q<galias1> [ucstr(%0)] PERM to: %1};@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n changed [ucstr(%0)] PERM to: %1},OOC,1},0,{@nspemit %#=header(%q<gname1> - PERM);th setq(spaces,add(2,lmath(max,iter(setr(fields,setunion(setr(PERMs,iter(get(u(gso)/VAR`DEFAULTS`SETPERM),before(%i0,~),|,|)),iter(get(u(gdb)/%q<gid1>`PERM),before(%i0,~),|,|),|,|)),strlen(%i0),|))));@nspemit %#=table(iter(%q<fields>,ljust(rjust(if(match(iter(get(u(gso)/VAR`DEFAULTS`SETPERM),before(%i0,~),|,|),%i0,|),ansi(h,%i0),ansi(hr,%i0)),%q<spaces>),%q<space>):%B[u(u(gso)/FUN`GETPERM,%q<gid1>,%i0)],|,|),38,78,|);@nspemit %#=%R[ansi(h,AVAILABLE OPTIONS:)] [itemize(%q<PERMs>,|,and,\,)];@nspemit %#=header()}

&INC`CHOOSE`G`INVITE u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`INVITE=%1,%2,%3
&INC`CODE`INVITE u(gso)=@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of that group.;@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,INV)=@nspemit %#=announce(GROUPS) ERROR: You do not have permission to do that.;@switch/inline gt(strlen(%0),0)=1,{@include u(ccs)/INC`CHECKPC=%0,1,GROUPS;@break isgroupmember(%q<t1objid>,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: They are already a member of the Group.;@break match(get(u(gdb)/%q<gid1>`INVITES),%q<t1objid>)=@nspemit %#=announce(GROUPS) ERROR: %q<t1name> has already been invited to %q<gname1>.;&%q<gid1>`INVITES u(gdb)=setunion(get(u(gdb)/%q<gid1>`INVITES),%q<t1objid>);@nspemit %q<t1>=%n has invited you to join the %q<gname1>! To accept, type [pueblize(ansi(h,+gjoin %q<galias1>),+gjoin %q<galias1>)] or Refuse using [pueblize(ansi(h,+grefuse %q<galias1>),+grefuse %q<galias1>)].;@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>,{Invite sent to %q<t1name>.};@nspemit %#=announce(GROUPS) You have invited %q<t1name> to the %q<gname1>},0,{@include u(gso)/INC`MAIN`SHOWINVITES}

&INC`CHOOSE`G`UNINVITE u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`UNINVITE=%1,%2,%3
&INC`CODE`UNINVITE u(gso)=@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of that group.;@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,INV)=@nspemit %#=announce(GROUPS) ERROR: You do not have permission to do that.;@switch/inline gt(strlen(%0),0)=1,{@include u(ccs)/INC`CHECKPC=%0,1,GROUPS;@break isgroupmember(%q<t1objid>,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: They're already a member of the group.;@break match(get(u(gdb)/%q<gid1>`INVITES),%q<t1objid>)=@nspemit %#=announce(GROUPS) ERROR: %q<t1name> has not been invited to %q<gname1>.;&%q<gid1>`INVITES u(gdb)=setdiff(get(u(gdb)/%q<gid1>`INVITES),%q<t1objid>);@nspemit %q<t1>=announce(GROUPS) %n withdrew your invitation to join the %q<gname1>!;@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>,{Invite withdrawn from %q<t1name>.}},0,{@include u(gso)/INC`MAIN`SHOWINVITES}

&INC`MAIN`SHOWINVITES u(gso)=@nspemit %#=header(%q<gname1>'s Pending Invites);@nspemit %#=itemize(iter(setr(invites,filterbool(#lambda/isobjid(\%0),get(u(gdb)/%q<gid1>`INVITES))),name(%i0),%b,|),|,and,\,);@nspemit %#=header();&%q<gid1>`INVITES u(gdb)=%q<invites>

&INC`CHOOSE`G`ADD u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`ADD=%1,%2,%3
&INC`CODE`ADD u(gso)=@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of that group.;@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,ADD)=@nspemit %#=announce(GROUPS) ERROR: You do not have permission to do that.;@include u(ccs)/INC`CHECKPC=%0,1,GROUPS;@break match(get(u(gdb)/%q<gid1>`MEMBERS),%q<t1objid>)=@nspemit %#=announce(GROUPS) ERROR: They are already a member of the Group.;&%q<gid1>`MEMBERS u(gdb)=setunion(get(u(gdb)/%q<gid1>`MEMBERS),%q<t1objid>);@nspemit %q<t1>=announce(GROUPS) %n added you to the %q<gname1> Group!;th setstat(%q<t1>/D`GROUP,Group,%q<gid1>);th setstat(%q<t1>/D`GROUP`%q<gid1>,IC,1);th setstat(%q<t1>/D`GROUP`%q<gid1>,OOC,1);@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>,{Added %q<t1name>.};@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n added %q<t1name> to the Group!},OOC,1

&INC`CHOOSE`G`JOIN u(gso)=@switch/inline gt(strlen(%1),0)=1,{@include u(gso)/INC`CODE`VALGROUP=%1,1;@include u(gso)/INC`CODE`JOIN=%1,%2,%3},0,{@include u(gso)/INC`CODE`MYINVITES}
&INC`CODE`JOIN u(gso)=@break match(get(u(gdb)/%q<gid1>`MEMBERS),%:)=@nspemit %#=announce(GROUPS) ERROR: You are already a member of the Group.;@assert match(get(u(gdb)/%q<gid1>`INVITES),%:)=@nspemit %#=announce(GROUPS) ERROR: You have not been invited to join that Group.;&%q<gid1>`MEMBERS u(gdb)=setunion(get(u(gdb)/%q<gid1>`MEMBERS),%:);@nspemit %#=announce(GROUPS) You have joined the %q<gname1> Group!;th setstat(%#/D`GROUP,Group,%q<gid1>);th setstat(%#/D`GROUP`%q<gid1>,IC,1);th setstat(%#/D`GROUP`%q<gid1>,OOC,1);@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>,{%q<t1name> joined.};@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n joined the Group!},OOC,1


&INC`CHOOSE`G`REFUSE u(gso)=@switch/inline gt(strlen(%1),0)=1,{@include u(gso)/INC`CODE`VALGROUP=%1,1;@include u(gso)/INC`CODE`REFUSE=%1,%2,%3},0,{@include u(gso)/INC`CODE`MYINVITES}
&INC`CODE`REFUSE u(gso)=@break match(get(u(gdb)/%q<gid1>`MEMBERS),%:)=@nspemit %#=announce(GROUPS) ERROR: You are already a member of the Group.;@assert match(get(u(gdb)/%q<gid1>`INVITES),%:)=@nspemit %#=announce(GROUPS) ERROR: You have not been invited to join that Group.;&%q<gid1>`MEMBERS u(gdb)=setdiff(get(u(gdb)/%q<gid1>`MEMBERS),%:);@nspemit %#=announce(GROUPS) You have rejected joining the %q<gname1> Group!;@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>,{%q<t1name> rejected joining.};@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n rejected [poss(%#)] invitation!},OOC,1


&INC`CODE`MYINVITES u(gso)=@assert words(setr(groups,wildgrepi(u(gdb),*,*%:*)))=@nspemit %#=announce(GROUPS) You have no pending invites.;@nspemit %#=header(Your Group Invites);@nspemit %#=iter(%q<groups>,pueblize(get(u(gdb)/%i0) - [get(u(gdb)/%i0`NAME)],+gjoin [get(u(gdb)/%i0)]),,%R);@nspemit %#=header()

&INC`CHOOSE`G`LEAVE u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`LEAVE=%1,%2,%3
&INC`CODE`LEAVE u(gso)=@assert match(get(u(gdb)/%q<gid1>`MEMBERS),%:)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of that group.;@break eq(0,u(u(gso)/FUN`GETRANK,%:,%q<gid1>))=@nspemit %#=announce(JOBS) ERROR: Leaders may not leave their groups. Please contact staff.;&%q<gid1>`MEMBERS u(gdb)=setdiff(get(u(gdb)/%q<gid1>`MEMBERS),%:);@nspemit %#=announce(GROUPS) You left the %q<gname1> Group!;@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>{%q<t1name> left the group.};@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n left the Group},OOC,1

&INC`CHOOSE`G`KICK u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`KICK=%1,%2,%3
&INC`CODE`KICK u(gso)=@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of that group.;@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,KICK)=@nspemit %#=announce(GROUPS) ERROR: You do not have permission to do that.;@include u(ccs)/INC`CHECKPC=%0,1,GROUPS;@assert match(get(u(gdb)/%q<gid1>`MEMBERS),%q<t1objid>)=@nspemit %#=announce(GROUPS) ERROR: They are not a member of the Group.;@assert lte(u(u(gso)/FUN`GETRANK,%:,%q<gid1>),u(u(gso)/FUN`GETRANK,%q<t1objid>,%q<gid1>))=@nspemit %#=announce(GROUPS) ERROR: Cannot kick those of higher rank.;&%q<gid1>`MEMBERS u(gdb)=setdiff(get(u(gdb)/%q<gid1>`MEMBERS),%q<t1objid>);@nspemit %q<t1>=announce(GROUPS) %n removed you from the %q<gname1> Group!;@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>{%q<t1name> was kicked.};@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n removed %q<t1name> from the Group},OOC,1

&INC`CHOOSE`G`RANK u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`RANK=%1,%2,%3
&INC`CODE`RANK u(gso)=@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You are not a member of that group.;@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,RANK)=@nspemit %#=announce(GROUPS) ERROR: You do not have permission to do that.;@include u(ccs)/INC`CHECKPC=%0,1,GROUPS;@assert strlen(%1)=@nspemit %#=announce(GROUPS) ERROR: Rank field empty.;@assert and(gte(%1,0),isint(%1))=@nspemit %#=announce(GROUPS) ERROR: Ranks must be whole numbers.;@assert lt(u(u(gso)/FUN`GETRANK,%:,%q<gid1>),%1)=@nspemit %#=announce(GROUPS) ERROR: New Rank must be less than your own.;@assert or(lt(u(u(gso)/FUN`GETRANK,%:,%q<gid1>),u(u(gso)/FUN`GETRANK,%q<t1objid>,%q<gid1>)),isadmin(%#))=@nspemit %#=announce(GROUPS) ERROR: Cannot change the rank of superiors.;th setstat(u(gdb)/%q<gid1>`RANK,%q<t1objid>,%1);@nspemit %q<t1>=announce(GROUPS) %n has Changed your rank in the %q<gname1> Group to %1!;@include u(gso)/INC`CODE`MAKELOG=%:,%q<gid1>{Changed %q<t1name>'s Rank to %1};@include u(gso)/INC`CODE`CHAT={ansi(hw,ALERT:) %n set %q<t1name>'s Rank to %1},OOC,1

&INC`CHOOSE`G`RADIO u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`CHAT=%1[if(strlen(%2),=%2)],IC,0
&INC`CHOOSE`G`IC u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`CHAT=%1[if(strlen(%2),=%2)],IC,0

&INC`CHOOSE`G`OOC u(gso)=@include u(gso)/INC`CODE`VALGROUP=strfirstof(getstat(%#/D`GROUP,Group),0),1;@include u(gso)/INC`CODE`CHAT=%1[if(strlen(%2),=%2)],OOC,0

&INC`CODE`CHAT u(gso)=@assert strlen(%0)=@nspemit %#=What will you say?;@switch/inline gt(%2,0)=0,{@assert strfirstof(getstat(u(gdb)/%q<gid1>`OP,setr(chan,%1)),1)=@nspemit %#=announce(GROUPS) ERROR: That channel is not enabled.;@assert strfirstof(getstat(%#/D`GROUP,%q<chan>),1)=@nspemit %#=announce(GROUPS) ERROR: You have universally disabled Group %q<chan> Channels!;@assert u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,%q<chan>)=@nspemit %#=You lack permission to do that!;@break strlen(getstat(u(gdb)/%q<gid1>`GAG,%:))=@nspemit %#=announce(GROUPS) ERROR: You have been Gagged from the Group's channels.;@assert strfirstof(getstat(%#/D`GROUP`%q<gid1>,%q<chan>),1)=@nspemit %#=announce(GROUPS) ERROR: Cannot use a channel while it is disabled.};@assert words(setr(list,filterbool(#lambda/and(isgroupmember(objid(\%0),%q<gid1>),strfirstof(getstat(\%0/D`GROUP,%q<chan>),1),strfirstof(getstat(\%0/D`GROUP`%q<gid1>,%q<chan>),1)),setunion(lwho(),))));th setq(header,ansi(c,<)[ansi(strfirstof(u(u(gso)/FUN`GETOP,%q<gid1>,COLOR),h),ucstr(get(u(gdb)/%q<gid1>)))]-[if(gt(%2,0),ansi(hr,SYS),ansi(hx,%q<chan>))][ansi(c,>)]);@switch/inline gt(%2,0)=0,{th if(%2,,setq(title,getstat(%#/D`GROUP`%q<gid>,%q<chan>TITLE)));@nspemit/list %q<list>=%q<header>%B[if(strlen(%q<title>),%q<title>%B)][speak(%#,%0)]},1,{@nspemit/list %q<list>=%q<header>%B%0}

&CMD`CHAT u(gso)=$^(?s)(-|=)(\w+)(?\: +(.+))?$:@include u(gso)/INC`CODE`VALGROUP=%2,1;@assert isgroupmember(%:,%q<gid1>)=@nspemit %#=announce(GROUPS) ERROR: You do not belong to that group!;@assert strlen(%3)=@nspemit %#=What will you say?;@include u(gso)/INC`CODE`CHAT=%3,if(strmatch(=,%1),OOC,IC),0
@set u(gso)/CMD`CHAT=regexp

&PLAYER`CONNECT`GROUPCHECK u(gso)=@dolist iter(wildgrep(u(gdb)/*`INVITES,*%0*),before(%i0,`))={@nspemit %#=announce(GROUP) The [get(u(gdb)/%i0`NAME)] Have invited you to join their group! To accept, type [pueblize(ansi(h,+gjoin [get(u(gdb)/%i0)]),+gjoin %i0)]}

&STARTUP u(gso)=@trigger u(gso)/TRG`DOCLEANUP

&TRG`DOCLEANUP u(gso)=@dolist filterbool(#lambda/isnum(\%0),lattr(u(gdb)/*))={&%i0`MEMBERS u(gdb)=filterbool(#lambda/isobjid(\%0),get(u(gdb)/%i0`MEMBERS));&%i0`INVITES u(gdb)=filterbool(#lambda/isobjid(\%0),get(u(gdb)/%i0`INVITES));&%i0`RANK u(gdb)=filterbool(#lambda/isobjid(before(\%0,~)),get(u(gdb)/%i0`RANK))};@wait 7200=@trigger u(gso)/TRG`DOCLEANUP

th attrib_set(u(cco)/VAR`CATEGORIES,setunion(get(u(cco)/VAR`CATEGORIES),GROUP,|,|))
&VAR`CATEGORIES`GROUP u(cco)=GWHONAME|GWHOSEX|GWHORANK|GWHOICTITLE