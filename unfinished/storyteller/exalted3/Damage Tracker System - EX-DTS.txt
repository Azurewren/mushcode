@switch/inline isdbref(u(ex-dts))=0,{@tel create(Damage Tracker System <EX-DTS>)=config(master_room)}
&ex-dts u(coi)=locate(config(master_room),Damage Tracker System <EX-DTS>,TXxi)
@parent u(ex-dts)=u(coi)
@set u(ex-dts)=WIZARD SAFE !NO_COMMAND

&CMD`DAMAGE u(ex-dts)=$^(?\:\+)(damage|heal)(?\: +(.+?))?(?\: +(.*))?$:@include u(ex-dts)/INC`%1=%2,%3
@set u(ex-dts)/CMD`DAMAGE=regexp

&INC`DAMAGE u(ex-dts)=@assert strlen(%0)=@nspemit %#=msghead(HEALTH) What kind of damage will you take?;@include u(ex-dts)/INC`TYPE=%0;@assert strlen(%1)=@nspemit %#=msghead(HEALTH) How much damage will you take?;@assert valnum(%1)=@nspemit %#=msghead(HEALTH) Damage must be whole, positive numbers!;th iter(lnum(1,%1),u(FUN`INC`%q<find>,%#));@nsremit %l=msgheadroom(HEALTH) [ansi(h,%n)] takes %1 %q<find> Damage! [switch(%q<find>|[t(%q<bashcount>)]|[t(%q<lethcount>)]|[t(%q<aggcount>)],BASHING|1|0|0,,BASHING|*|1|0,%q<lethcount> Upgraded to Lethal!%B,BASHING|*|1|1,%q<lethcount> Upgraded to Lethal then %q<aggcount> to Aggravated!%B,LETHAL|0|1|0,,LETHAL|0|*|1,%q<aggcount> Upgraded to Aggravated!%B)][capstr(%p)] %q<find> Total is: [u(FUN`GET`BASHING,%#)]. Total Overall Damage is: [rjust(u(FUN`CURDAMAGE,%#),strlen(setr(maxhealth,u(FUN`MAX`HEALTH,%#))),0)]/%q<maxhealth>

&INC`HEAL u(ex-dts)=@assert strlen(%0)=@nspemit %#=msghead(HEALTH) What kind of damage will you heal?;@include u(ex-dts)/INC`TYPE=%0;@assert strlen(%1)=@nspemit %#=msghead(HEALTH) How much damage will you heal?;@assert valnum(%1)=@nspemit %#=msghead(HEALTH) Healing amount must be whole, positive numbers!;th setq(healed,min(setr(damage,u(FUN`GET`%q<find>,%#)),%1));@assert %q<healed>=@nspemit %#=msghead(HEALTH) You don't have any %q<find> Damage to Heal.;th setstat(%#/D`DAMAGE,%q<find>,bound(sub(%q<damage>,%q<healed>),0));@nsremit %l=msgheadroom(HEALTH) [ansi(h,%n)] heals %q<healed> %q<find> Damage. [capstr(%p)] %q<find> Total is: [u(FUN`GET`BASHING,%#)]. Total Overall Damage is: [rjust(u(FUN`CURDAMAGE,%#),strlen(setr(maxhealth,u(FUN`MAX`HEALTH,%#))),0)]/%q<maxhealth>

&INC`TYPE u(ex-dts)=@include u(ccs)/INC`PARTIAL=%0,v(VAR`TYPES),|,HEALTH,find,Damage Track

&FUN`INC`BASHING u(ex-dts)=switch(1,gt(u(FUN`GET`EMPTY,%0),0),setstat(%0/D`DAMAGE,Bashing,add(u(FUN`GET`BASHING,%0),1))[setq(bashcount,add(1,%q<bashcount>))],u(FUN`INC`LETHAL,%#))

&FUN`INC`LETHAL u(ex-dts)=switch(1,gt(or(u(FUN`GET`EMPTY,%0),u(FUN`GET`BASHING,%0)),0),setstat(%0/D`DAMAGE,Lethal,add(u(FUN`GET`Lethal,%0),1))[setq(lethcount,add(1,%q<lethcount>))],u(FUN`INC`AGGRAVATED,%#))

&FUN`INC`AGGRAVATED u(ex-dts)=setstat(%0/D`DAMAGE,Aggravated,add(u(FUN`GET`Aggravated,%0),1))[setq(aggcount,add(1,%q<aggcount>))]

&VAR`TYPES u(ex-dts)=AGGRAVATED|LETHAL|BASHING

&FUN`ADD`BASHING u(ex-dts)=

&FUN`HEALTHBOXES u(ex-dts)=elements(cat(iter(lnum(add(getstat(%0/D`DAMAGE,Aggravated),%3)),A),iter(lnum(add(getstat(%0/D`DAMAGE,Lethal),%2)),L),iter(lnum(add(getstat(%0/D`DAMAGE,Bashing),%1)),B),iter(lnum(30),E)),lnum(1,u(FUN`MAX`HEALTH,%0)))

&FUN`FORMATHEALTH u(ex-dts)=[iter(u(FUN`HEALTHBOXES,%0),ansi(switch(%i0,A,hr,L,+orange,B,hy,E,n),[elements(get(%0/D`HEALTH),inum(0))][switch(%i0,A,*,L,X,B,/,E,)]),%B)]

&FUN`CURDAMAGE u(ex-dts)=bound(add(getstat(%0/D`DAMAGE,Bashing),getstat(%0/D`DAMAGE,Lethal),getstat(%0/D`DAMAGE,Aggravated)),0,u(FUN`MAX`HEALTH,%0))

&FUN`GET`BASHING u(ex-dts)=words(filterbool(#lambda/strmatch(B,\%0),u(FUN`HEALTHBOXES,%0)))

&FUN`GET`LETHAL u(ex-dts)=words(filterbool(#lambda/strmatch(L,\%0),u(FUN`HEALTHBOXES,%0)))

&FUN`GET`AGGRAVATED u(ex-dts)=words(filterbool(#lambda/strmatch(A,\%0),u(FUN`HEALTHBOXES,%0)))

&FUN`GET`EMPTY u(ex-dts)=words(filterbool(#lambda/strmatch(E,\%0),u(FUN`HEALTHBOXES,%0)))

&FUN`MAX`HEALTH u(ex-dts)=words(get(%0/D`HEALTH))

