@select/inline isdbref(u(exp))=0,{@tel create(Extra XP Tracker <EXP>)=config(master_room)}
&exp u(coi)=locate(config(master_room),Extra XP Tracker <EXP>,TXxi)
@parent u(exp)=u(coi)
@set u(exp)=WIZARD !NO_COMMAND

&CMD`+EXP u(exp)=$^(?s)(?\:\+)?(EXTRA|S|G|W)?XP(?\:/(\S+))?(?\: +(.+?))?(?\:=(.+?))?(?\:/(.*))?$:@attach u(ccs)/INC`PARTIAL=%2,setunion(get(u(exp)/VAR`PLAYFLAGS),if(isadmin(%#),get(u(exp)/VAR`ADMINFLAGS)),|,|),|,u(FUN`ANNAME,%1),switch,switch;th u(setq,mode,%1);@attach u(exp)/INC`[strfirstof(%q<switch>,MAIN)]=%3,%4,%5
@set u(exp)/CMD`+EXP=regexp

&VAR`ADMINFLAGS u(exp)=DELGAINED|DELSPENT|TOTALS|AWARD|SPEND
&VAR`PLAYFLAGS u(exp)=GAINED|SPENT|EARN|USE

&RFN`MSGHEAD u(exp)=msghead(u(FUN`ANNNAME,strfirstof(%q<mode>,%0)))
&RFN`HEADER u(exp)=header(%0,,XP`BORDER,XP`BORDERDOT,XP`BORDERTEXT,1)
&RFN`SEPARATOR u(exp)=separator(%0,,XP`BORDER,XP`BORDERDOT,XP`BORDERTEXT,1)
&RFN`SUBHEADER u(exp)=subheader(%0,,XP`BORDER,XP`BORDERDOT,XP`BORDERTEXT,1)

&FUN`COUNT u(exp)=lmath(add,iter(u(lattr,%0/D`[u(FUN`XPATTR,%2)]`%1`*),get(%0/%i0)))
&FUN`XPATTR u(exp)=switch(%0,EXTRA,EXP,S,SXP,G,GXP,W,WXP,XP)
&FUN`TYPENAME u(exp)=switch(%0,Extra,Extra,S,Silver,G,Gold,W,White)
&FUN`TYPENAME2 u(exp)=localize(if(strlen(u(setr,typname,u(FUN`TYPENAME,%0))),%q<typname> XP,XP))
&FUN`ANNNAME u(exp)=XP

&DO`ANNOUNCE u(exp)=@attach u(ccs)/INC`CMSG=%1,%#,u(FUN`ANNNAME,%q<mode>),u(cmo`staffrep);@select/inline t(strmatch(%0,%#))=0,{@attach u(ccs)/INC`MSG=u(FUN`ANNNAME,%q<mode>),%0,%2;@attach u(ccs)/INC`MSG=u(FUN`ANNNAME,%q<mode>),%#,%3},1,{@attach u(ccs)/INC`MSG=u(FUN`ANNNAME,%q<mode>),%0,%2}
@@ %0 = list of players to message. %1 = message to admin. %2 = message to players. %3 = message to enactor.

&INC`EARN u(exp)=@attach u(exp)/INC`CRAFT=%#,%0,%1,AWARD,1
&INC`USE u(exp)=@attach u(exp)/INC`CRAFT=%#,%0,%1,SPEND,1
&INC`CRAFT u(exp)=@check match(S|G|W,%q<mode>,|)=@pemit %#=u(RFN`MSGHEAD) You can only [switch(%3,AWARD,earn,use)] Crafting XP.;@check strlen(%2)=@pemit %#=u(RFN`MSGHEAD) Need to specify a reason!;@attach u(exp)/INC`MARKXP

&INC`AWARD u(exp)=@attach u(exp)/INC`MARKXP=%0,%1,%2,AWARD
&INC`SPEND u(exp)=@attach u(exp)/INC`MARKXP=%0,%1,%2,SPEND
&INC`MARKXP u(exp)=th u(setq,xptype,u(FUN`TYPENAME2,%q<mode>),xpattr,u(FUN`XPATTR,%q<mode>));@check strlen(%0)=@pemit %#=u(RFN`MSGHEAD) ERROR: No targets entered!;@stop words(filterbool(#lambda/strmatch(\%0,#-*),u(setr,list,namelist(%0,#lambda/nspemit(%#,u(RFN`MSGHEAD) Target Not Found or Ambiguous: \%0)))))=@pemit %#=u(RFN`MSGHEAD) ERROR: One or more entered names did not resolve. Please check your entry and try again.;@check valnum(%1)=@pemit %#=u(RFN`MSGHEAD) ERROR: %q<xptype> amounts must be whole, positive numbers!;th u(setq,msg,switch(%3,AWARD,Gained,Lost) [ansi(h,%1)] %q<xptype> for: [strfirstof(%2,No given reason.)],recplist,itemize(iter(%q<list>,ansi(h,name(%i0)),%b,|),|,and,\,));@dolist/inline %q<list>=@attach u(exp)/INC`APPLY=%i0,%1,strfirstof(%2,No given reason.),%:,switch(%3,AWARD,G,S),%q<mode>;@attach u(exp)/DO`ANNOUNCE=%q<list>,{%q<recplist> %q<msg>},{You %q<msg>},{%q<recplist> %q<msg>}

&INC`APPLY u(exp)=&[u(setr,attr,D`[u(FUN`XPATTR,%5)]`%4`[nextslot(%0,D`[u(FUN`XPATTR,%5)]`%4)])] %0=%1;&%q<attr>`ON %0=secs();&%q<attr>`BY %0=%3;&%q<attr>`REASON %0=%2

&INC`DELGAINED u(exp)=@attach u(exp)/INC`DELETE=%0,G,%1
&INC`DELSPENT u(exp)=@attach u(exp)/INC`DELETE=%0,S,%1

&INC`DELETE u(exp)=th u(setq,xptype,u(FUN`TYPENAME2,%q<mode>),xpattr,u(FUN`XPATTR,%q<mode>));@attach u(ccs)/INC`CHECKPC=%0,1,u(FUN`ANNNAME,%q<mode>);@check valnum(%2)=@pemit %#=u(RFN`MSGHEAD) %q<xptype> entries must be addressed via whole and positive numbers!;@check hasattr(%q<t1>/D`%q<xpattr>`%1`%2)=@pemit %#=u(RFN`MSGHEAD) [ansi(h,%q<t1name>)] does not have that entry!;th u(setq,msg,%q<xptype> [switch(%1,G,GAINED,SPENT)] Entry %2 was [ansi(hr,DELETED)]. Amount Was: [get(%q<t1>/D`%q<xpattr>`%1`%2)]. Reason Was: [get(%q<t1>/D`%q<xpattr>`%1`%2`REASON)]);@attach u(exp)/DO`ANNOUNCE=%q<t1>,{ansi(h,%q<t1name>)'s %q<msg>},{Your %q<msg>},{ansi(h,%q<t1name>)'s %q<msg>};@wipe %q<t1>/D`%q<xpattr>`%1`%2

&INC`MAIN u(exp)=@select/inline and(strlen(%0),isadmin(%#))=1,{@attach u(ccs)/INC`CHECKPC=%0,1,u(FUN`ANNNAME,%q<mode>)},0,{@attach u(ccs)/INC`CHECKPC=%#,1,u(FUN`ANNNAME,%q<mode>)};@attach u(exp)/INC`LIST=%q<t1>

&INC`LIST u(exp)=@pemit %#=header(name(%0)'s [u(FUN`TYPENAME2,%q<mode>)])%R[ljust(ansi(h,rjust(Current:,10)),10)][rjust(sub(u(setr,gained,u(u(exp)/FUN`COUNT,%0,G,%q<mode>)),u(setr,spent,u(u(exp)/FUN`COUNT,%0,S,%q<mode>))),4)]%r[ljust(ansi(h,rjust(Total:,10)),10)][rjust(%q<gained>,4)]%r[ljust(ansi(h,rjust(Spent:,10)),10)][rjust(%q<spent>,4)];@pemit %#=header()

&INC`GAINED u(exp)=@select/inline and(strlen(%0),isadmin(%#))=0,{@attach u(ccs)/INC`CHECKPC=%#,1,u(FUN`ANNNAME,%q<mode>)},1,{@attach u(ccs)/INC`CHECKPC=%0,1,u(FUN`ANNNAME,%q<mode>)};@attach u(exp)/INC`LISTBY=%q<t1>,G
&INC`SPENT u(exp)=@select/inline and(strlen(%0),isadmin(%#))=0,{@attach u(ccs)/INC`CHECKPC=%#,1,u(FUN`ANNNAME,%q<mode>)},1,{@attach u(ccs)/INC`CHECKPC=%0,1,u(FUN`ANNNAME,%q<mode>)};@attach u(exp)/INC`LISTBY=%q<t1>,S

&INC`LISTBY u(exp)=@pemit %#=header(name(%0)'s [if(strmatch(%1,G),GAINED,SPENT)] [u(FUN`TYPENAME2,%q<mode>)]);@dolist/inline sortkey(#lambda/last(\%0,`),u(lattr,%0/D`[u(FUN`XPATTR,%q<mode>)]`%1`*))=@pemit %#=#[ljust(last(%i0,`),4)][ansi(h,default(%0/%i0,N/A))] for [ansi(h,default(%0/%i0`REASON,Unknown Reason))]%R%B%B%B%B%BHandled By%B[ansi(h,name(get(%0/%i0`BY)))] On [convsecs(get(%0/%i0`ON))];@pemit %#=header()

&INC`TOTALS u(exp)=@pemit %#=header(mudname() [u(FUN`TYPENAME2,%q<mode>)] Totals);@pemit %#=ansi(hc,Name[space(29)]Gained [u(FUN`TYPENAME,%q<mode>)] XP[space(3)]Splat);@dolist/inline sortkey(#lambda/u(u(exp)/FUN`COUNT,\%0,G,%q<mode>),lsearch(all,eplayer,\[and(u(u(exp)/FUN`COUNT,##,G,%q<mode>),not(isadmin(##)),approved(##))\]),n)=ljust(left(name(%i0)),33)[ljust(rjust(u(u(exp)/FUN`COUNT,%%i0,G,%q<mode>),6),12)][getsphere(%i0)];@pemit %#=header()

+help/addmain Roleplaying/+xp=[u(exp)]/HLP`+XP
&HLP`+XP u(exp)=[ansi(hc,Aliases:)] xp%R%R[ansi(hc,Commands)]%R[align(5 [sub(width(%#),6)],,{[ansi(h,+xp)] - Show how much XP you have.%R[ansi(h,+xp/gained)] - Show details on your gained XP.%R[ansi(h,+xp/spent)] - Show details on your XP spends.})]%R%R[ansi(hc,Alt Modes)]%R+xp can also be used as +extraxp, +sxp (silver xp), +gxp (gold xp), and +wxp (white xp) to address different kinds of XP. When used with any of the Crafting XP modes, the following switches become avaialable:%R%R[align(5 [sub(width(%#),6)],,{[ansi(h,+xp/earn <amount>=<reason>)] - Gain crafting XP.%R[ansi(h,+xp/use <amount>=<reason>)] - Use crafting XP.})]

+shelp/addmain Character/+xp=[u(exp)]/SHLP`+XP
&SHLP`+XP u(exp)=[ansi(hc,Viewing Commands)]%R[align(5 [sub(width(%#),6)],,{[ansi(h,+xp <name>)] - check a player's XP totals.%R[ansi(h,+xp/gained <name>)] - Check a player's gained XP details.%R[ansi(h,+xp/spent <name>)] - Check a player's XP spend details.})]%R%R[ansi(hc,Managing Commands)]%R[align(5 [sub(width(%#),6)],,{[ansi(h,+xp/delgained <name>=<#>)] - Remove a player's gained entry.%R[ansi(h,+xp/delspent <name>=<#>)] - Remove a player's spent entry.%R[ansi(h,+xp/award <list of player>=<amount>/<reason>)] - Awards XP to one or more players. Reason is optional.%R[ansi(h,+xp/spend <list of players>=<amount>/<reason>)] - Spend one or more players' XP. Reason is optional.%R%RNOTE: 'Current XP' is defined as 'gained - spent' while 'Total' is 'total gained ever.' To 'refund' XP, don't award it - delete the relevant spend records then make new ones.})]%R%RNOTE: R+xp can also be used as +extraxp, +sxp (silver xp), +gxp (gold xp), and +wxp (white xp) to address different kinds of +XP.
