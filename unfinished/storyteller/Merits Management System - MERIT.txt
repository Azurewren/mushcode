@@ DEPENDENCIES - CORE
th u(newcobj,STORYTELLER: Merits Management System <MERIT>,merit,,,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)

&SWITCHES`PLAYER [u(cobj,merit)]=ADD|RANK|GET|DESC|CONTEXT|DELETE
&SWITCHES`ADMIN [u(cobj,merit)]=
&SYSTEM`NAME [u(cobj,merit)]=u(strfirstof,%q<sysname>,MERITS)

&DO`ANNOUNCE [u(cobj,merit)]=@select/inline t(strlen(%1))=1,{@attach %!/INC`MSG`CHAN=%1};@select/inline strmatch(%#,%0)=0,{@attach %!/INC`MSG`NOTICE=%2,%0;@attach %!/INC`MSG=%3},1,{@attach %!/INC`MSG`NOTICE=%2,%0}
@@ %0 - player being modified. %1 - message for admin channel. %2 - message for player. %3 - message for admin.

&INC`TARGET [u(cobj,merit)]=@select/inline strmatch(%0,*/*)=1,{@attach %!/INC`CHECKPC=before(%0,/),1;th u(setq,target,%q<t1>,filename,after(%0,/))},0,{th u(setq,target,%#)[u(setq,filename,%0)]}

&INC`MERNAME [u(cobj,merit)]=@check strlen(u(setr,merit,trim(squish(before(%0,:)))))=@attach %!/INC`MSG=ERROR: [capstr(%q<type>)] field empty.;th u(setq,context,squish(trim(after(%0,:))));@stop u(charsearch,%q<context>,| ~)=@attach %!/INC`MSG=ERROR: Contexts may not contain a ~ or |.

&INC`EXISTING [u(cobj,merit)]=@check strlen(u(setr,attr,first(u(filter,FINDMERIT,u(lattr,%q<target>/%q<attr>`*),%b,%b,%q<target>,%q<merit>,%q<context>))))=@attach %!/INC`MSG=ERROR: Cannot find '%q<merit>[if(strlen(%q<context>),:%b%q<context>)]'.;th u(setq,merit,get(%q<target>/%q<attr>));th u(setq,context,get(%q<target>/%q<attr>`CONTEXT))

&FIL`FINDMERIT [u(cobj,merit)]=cand(cor(strmatch(get(%1/%0),%2),strmatch(get(%1/%0),%2*)),cor(strmatch(get(%1/%0`CONTEXT),%3),strmatch(get(%1/%0`CONTEXT),%3*)))

&FUN`MERNAME [u(cobj,merit)]=localize(u(capnames,get(%0/%1)[if(strlen(u(setr,context,get(%0/%1`CONTEXT))),:%b%q<context>)]))

&INC`BEGIN [u(cobj,merit)]=@attach %!/INC`TARGET;@select/inline strmatch(%#,%q<target>)=0,{@check u(isadmin,%#)=@attach %!/INC`MSG=Permission denied.};@stop cand(u(isapproved,%q<target>),not(u(isadmin,%#)))=@attach %!/INC`MSG=Permission denied.;@attach %!/INC`MERNAME=%q<filename>

&INC`BEGIN2 [u(cobj,merit)]=@attach %!/INC`TARGET;@select/inline strmatch(%#,%q<target>)=0,{@check u(isadmin,%#)=@attach %!/INC`MSG=Permission denied.};@stop cand(u(isapproved,%q<target>),not(u(isadmin,%#)))=@attach %!/INC`MSG=Permission denied.;@attach %!/INC`MERNAME=%q<filename>;@attach %!/INC`EXISTING=%q<filename>

&INC`ADD [u(cobj,merit)]=@attach %!/INC`BEGIN;@stop strlen(u(FUN`FINDMER,%q<target>,%2,%q<merit>,%q<context>))=@attach %!/INC`MSG=ERROR: Conflicting Merit. Contexts must be unique.;th u(setq,attr,%q<root>`[u(nextslot,%q<target>,%q<root>)]);@check cand(isint(%1),gte(%1,0))=@attach %!/INC`MSG=[capstr(%2)] must have a rank. Ranks must be 0 or greater.;@attach %!/DO`ADD=%q<attr>,%q<target>,%q<merit>,%q<context>,%1;th u(setq,msg,gained a new %q<type>: [u(FUN`MERNAME,%q<target>,%q<attr>)] (%1));@select/inline strmatch(%#,%q<target>)=0,{th u(setq,amsg,ansi(h,name(%q<target>)) %q<msg>)};@attach %!/DO`ANNOUNCE=%q<target>,{%q<amsg>},{You %q<msg>},{[ansi(h,name(%q<target>))] %q<msg>}

&DO`ADD [u(cobj,merit)]=&%0 %1=%2;&%0`CONTEXT %1=%3;&%0`RANK %1=%4;@attach %!/DO`UPD=%0,%1

&DO`UPD [u(cobj,merit)]=&%0`ON %1=secs();&%0`BY %1=%n;&%0`BYDB %1=u(objid,%#)

&INC`DELETE [u(cobj,merit)]=@attach %!/INC`BEGIN2;@attach %!/INC`VERIFY={[ansi(hr,WARNING:)]%BDeleting the [u(FUN`MERNAME,%q<target>,%q<attr>)] %q<type>. Are you sure? Enter the same command again within ten seconds to verify.},%q<type> DELETE %q<attr>,;th u(setq,msg,lost a %q<type>: [u(FUN`MERNAME,%q<target>,%q<attr>)] ([get(%q<target>/%q<attr>`RANK)]));@select/inline strmatch(%#,%q<target>)=0,{th u(setq,amsg,ansi(h,name(%q<target>)) %q<msg>)};@attach %!/DO`ANNOUNCE=%q<target>,{%q<amsg>},{You %q<msg>},{[ansi(h,name(%q<target>))] %q<msg>};@attach %!/WIPE=%q<target>,%q<attr>

&INC`RANK [u(cobj,merit)]=@attach %!/INC`BEGIN2;@check cand(isint(%1),gte(%1,0))=@attach %!/INC`MSG=[capstr(%2)] must have a rank. Ranks must be 0 or greater.;&%q<attr>`RANK %q<target>=%1;@attach %!/DO`UPD=%q<target>,%q<attr>;th u(setq,msg,had a %q<type> Rank Changed: [u(FUN`MERNAME,%q<target>,%q<attr>)] to [ansi(h,%1)]);@select/inline strmatch(%#,%q<target>)=0,{th u(setq,amsg,ansi(h,name(%q<target>)) %q<msg>)};@attach %!/DO`ANNOUNCE=%q<target>,{%q<amsg>},{You %q<msg>},{[ansi(h,name(%q<target>))] %q<msg>}

&INC`CONTEXT [u(cobj,merit)]=@attach %!/INC`BEGIN2;@check strlen(u(setr,newcon,squish(trim(%1))))=@attach %!/INC`MSG=ERROR: Context empty.;@stop strlen(u(FILTER,SAMECONTEXT,u(lattr,%q<target>/%q<root>`*),%b,%b,%q<target>,%q<merit>,%q<newcon>))=@attach %!/INC`MSG=ERROR: Conflicting Merit. Contexts must be unique.;&%q<attr>`CONTEXT %q<target>=%q<newcon>;@attach %!/DO`UPD=%q<target>,%q<attr>;th u(setq,msg,had a %q<type> Context Changed: [u(FUN`MERNAME,%q<target>,%q<attr>)] to %q<newcon>);@select/inline strmatch(%#,%q<target>)=0,{th u(setq,amsg,ansi(h,name(%q<target>)) %q<msg>)};@attach %!/DO`ANNOUNCE=%q<target>,{%q<amsg>},{You %q<msg>},{[ansi(h,name(%q<target>))] %q<msg>}

&FIL`SAMECONTEXT [u(cobj,merit)]=cand(strmatch(get(%1/%0),%2),strmatch(get(%1/%0`CONTEXT),%3))

&INC`DESC [u(cobj,merit)]=@attach %!/INC`BEGIN2;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Desc empty!;&%q<attr>`DESC %q<target>=%1;@attach %!/DO`UPD=%q<target>,%q<attr>;th u(setq,msg,had a %q<type> Desc Changed: [u(FUN`MERNAME,%q<target>,%q<attr>)] to %1);@select/inline strmatch(%#,%q<target>)=0,{th u(setq,amsg,ansi(h,name(%q<target>)) %q<msg>)};@attach %!/DO`ANNOUNCE=%q<target>,{%q<amsg>},{You %q<msg>},{[ansi(h,name(%q<target>))] %q<msg>}

&INC`GET [u(cobj,merit)]=@attach %!/INC`TARGET;@attach %!/INC`MERNAME;@attach %!/INC`EXISTING;@pemit %#=u(HEADER,name(%q<target>)'s [u(FUN`MERNAME,%q<target>,%q<attr>)] Desc);@pemit %#=decompile(get(%q<target>/%q<attr>`DESC));@pemit %#=u(SUBHEADER)

&INC`MAIN [u(cobj,merit)]=@attach %!/INC`TARGET;@select/inline t(strlen(%q<filename>))=1,{@attach %!/INC`EXISTING=%q<filename>;@attach %!/INC`DISPLAY},0,{@attach %!/INC`LIST}

&INC`LIST [u(cobj,merit)]=@pemit %#=u(HEADER,name(%q<target>)'s [u(capnames,%q<sysname>)]);@pemit %#=ansi(u(color,%#,COLOR,COLUMN_NAMES),align(30 30 8,Name,Desc,Rank));@pemit %#=u(SEPARATOR);@dolist/inline u(sortmer,u(lattr,%q<target>/%q<root>`*))={@pemit %#=align(30 30 8,pueblize(u(FUN`MERNAME,%q<target>,##),%q<comm> [name(%q<target>)]/[u(FUN`MERNAME,%q<target>,##)]),left(get(%q<target>/##`DESC),20),repeat(*,get(%q<target>/##`RANK)))};@pemit %#=u(SUBHEADER)

&SORTMER [u(cobj,merit)]=u(SORTMER`[v(game)],%0,if(strlen(%1),%1,%B),if(strlen(%2),%2,%B))
&SORTMER`PENNMUSH [u(cobj,merit)]=sortkey(#lambda/u(FUN`MERNAME,%q<target>,\%0),%0,i,%1,%2)
&SORTMER`RHOSTMUSH [u(cobj,merit)]=sortby(#lambda/[lit([comp(lcstr(u(FUN`MERNAME,%q<target>,%0)),lcstr(u(FUN`MERNAME,%q<target>,%1)))])],%0,%1,%2)

&INC`DISPLAY [u(cobj,merit)]=@attach %!/INC`EXISTING;@pemit %#=u(HEADER,name(%q<target>)'s %q<type>: [u(FUN`MERNAME,%q<target>,%q<attr>)]);@pemit %#=get(%q<target>/%q<attr>`DESC);@pemit %#=u(RFN`SEPARATOR);@pemit %#=ansi(u(color(%#,COLOR,COLUMN_NAMES)),align(20 20,Setby,Seton));@pemit %#=align(20 20,get(%q<target>/%q<attr>`BY),fancytime(get(%q<target>/%q<attr>`ON),%#));@pemit %#=u(SUBHEADER)

@@ CHARACTER - +INFO
+help/addmain Character/+merits=[u(ex-mer)]/HLP`+MERITS
&HLP`+MERITS [u(cobj,merit)]=The Merit system allows Players to mark down their character's Merits, Flaws, and other notes.%R%R[ansi(hc,Concepts)]%R[align(5 [sub(width(%#),6)],,{[ansi(h,Types)] - Only official Merits and Flaws may be entered. The system has a database of valid Merits/Flaws and will Partial match them.%R[ansi(h,context)] - Merits and flaws can have a CONTEXT, such as the name of an Artifact or the source of one's resources. When a Merit name is neded, the context is added in the following style: Artifact: Volcano Cutter. Contexts must be unique for each Merit type!%R[ansi(h,modes)] - This command can also be called as [ansi(h,+flaws)] to address Flaws and [ansi(h,+pacts)] for Sorcerous Pact-based merits like Dark Paramour.})]%R%R[ansi(hc,Managing Merits)]%RNote: Merits and Flaws may only be edited freely while in Chargen. Only admin may edit them otherwise.%R%R[align(5 [sub(width(%#),6)],,{[ansi(h,+merits)] - Lists your current Merits.%R[ansi(h,+merits <merit>)] - View details about a Merit.%R[ansi(h,+merits/add <merit>=<value>)] - Creates new Merit. Value must be a number.%R[ansi(h,+merits/rank <merit>=<value>)] - Change's a merit's value.%R[ansi(h,+merits/desc <merit>=<text>)] - Describes a merit with a text entry visible when it's viewed.%R[ansi(h,+merits/context <merit>=<new context>)] - Change a merit's context.%R[ansi(h,+merits/get <merit>)] - Retrieve an unformatted version of a Merit's /desc for easy editing.})]

+shelp/addmain Character/+merits=[u(ex-mer)]/SHLP`+MERITS
&SHLP`+MERITS [u(cobj,merit)]=Staff commands with +merit are identical to the player commands. To target specific players, use <player>/ to view a player with +merit, and <player>/<merit> to use any other commands. For example, +merits/add <person>/Resources: Tribute=3