th u(newcobj,STORYTELLER: Roll Management System <ROLL>,ROLL,,,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)

th u(newconf,CONFIG,ROLLER,TARGET_NUMBER,8,Target Number,POSINT)
th u(newconf,CONFIG,ROLLER,DOUBLE_NUMBER,,Double success numbers.,WORD)
th u(newconf,CONFIG,ROLLER,AGAIN_NUMBER,10,Default #-Again.,POSINT)
th u(newconf,CONFIG,ROLLER,REROLL_NUMBER,,Default Re-#.,POSINT)
th u(newconf,CONFIG,ROLLER,BOTCHES,0,Enable botches?,BOOL)
th u(newconf,CONFIG,ROLLER,CHANNEL,,Channel to report dice rolls?,LIST)

&CMD`+ROLL`PENNMUSH [u(cobj,roll)]=$^(?\:\+)?(st)?(d)?roll(?\:/(\S+))?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+ROLL`MAIN
@set [u(cobj,roll)]/CMD`+ROLL`PENNMUSH=regexp
&CMD`+ROLL`RHOSTMUSH [u(cobj,roll)]=$^(?\:\+)?(st)?(d)?roll(?\:/(\\S+))?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+ROLL`MAIN
@set [u(cobj,roll)]/CMD`+ROLL`RHOSTMUSH=regexp
&CMD`+ROLL`MAIN [u(cobj,roll)]=@stop strmatch(init,%4);@select/inline gt(words(%3,/),0)=1,{@check u(FUN`FLAGCHECK,%3)=@attach %!/INC`MSG=ERROR: [u(itemize,iter(%q<errcheck>,ansi(h,%i0),|,|),|,and,\,)]};@select/inline ucstr(%1)=ST,{@check u(isadmin,%#)=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%4)=@attach %!/INC`MSG=ERROR: Who will you roll for?;@attach %!/INC`CHECKPC=%4,1};@check strlen(u(setr,string,switch(%1,ST,%5,%4)))=@attach %!/INC`MSG=ERROR: You must enter a formula of stats and/or numbers to roll. Example: Dexterity + Melee - 3;@check strlen(u(setr,inflate,u(FUN`NORMALIZE,%q<string>)))=@attach %!/INC`MSG=ERROR: Could not format roll formula. Please contact a coder.;@check strlen(u(setr,findnames,u(FUN`FINDNAMES,%q<inflate>,%q<t1>)))=@attach %!/INC`MSG=ERROR: Could not perform name finding. Please contact a coder.;@check gt(u(setr,totaldice,ulocal(FUN`CALC,u(setr,calcdice,u(FUN`CALCDICE,%q<findnames>,%q<t1>)))),0)=@attach %!/INC`MSG=ERROR: You have no dice to roll! Check your spelling and ensure that penalties aren't reducing your roll to nothing.;@attach %!/INC`INIT=%1,%2;@attach %!/INC`%1ROLL
@set [u(cobj,roll)]/CMD`+ROLL`[switch(v(game),PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&SYSTEm`NAME [u(cobj,roll)]=DICE

&FUN`FLAGCHECK [u(cobj,roll)]=u(lmin,iter(ucstr(%0),regeditalli(%i0,^\(?P<switch>\\w+?\)\(?P<num>\\d+\)?$,if(hasattr(u(cobj,roll)/FUN`FLAGCHECK`$<switch>),u(FUN`FLAGCHECK`$<switch>,$<num>),u(setq,errcheck,setunion(%q<errcheck>,Unrecognized switch: %i0,|,|))0)),/))

&FUN`FLAGCHECK`MUL [u(cobj,roll)]=if(u(valnum,%0),u(setq,mul,%0)1,u(FUN`FLAGERROR,Multi-Rolls must use whole positive numbers.)0)
&FUN`FLAGCHECK`TN [u(cobj,roll)]=if(u(valnum,%0),u(setq,tn,%0)1,u(FUN`FLAGERROR,Target Numbers must use whole positive numbers.)0)
&FUN`FLAGCHECK`DIF [u(cobj,roll)]=if(u(valnum,%0),if(not(%q<def>),u(setq,dif,%0)1,u(FUN`FLAGERROR,Difficulty and Defense cannot be used together.)),u(FUN`FLAGERROR,Difficulty must use whole positive numbers.)0)
&FUN`FLAGCHECK`SUX [u(cobj,roll)]=if(u(valnum,%0),u(setq,sux,%0)1,u(FUN`FLAGERROR,Successes must use whole positive numbers.)0)
&FUN`FLAGCHECK`PEN [u(cobj,roll)]=if(u(valnum,%0),u(setq,pen,%0)1,u(FUN`FLAGERROR,Penalties must use whole positive numbers.)0)
&FUN`FLAGCHECK`AG [u(cobj,roll)]=if(u(valnum,%0),u(setq,ag,%0)1,u(FUN`FLAGERROR,#-Again must use whole positive numbers.)0)
&FUN`FLAGCHECK`DEF [u(cobj,roll)]=if(u(valnum,%0),if(not(%q<dif>),u(setq,def,%0)1,u(FUN`FLAGERROR,Difficulty and Defense cannot be used together.)),u(FUN`FLAGERROR,Defense Values must use whole positive numbers.)0)
&FUN`FLAGCHECK`RE [u(cobj,roll)]=if(u(valnum,%0),u(setq,re,setunion(%0,%q<re>))1,u(FUN`FLAGERROR,Re-Roll # must use whole positive numbers.)0)
&FUN`FLAGCHECK`DBL [u(cobj,roll)]=if(u(valnum,%0),u(setq,dbl,setunion(%0,%q<dbl>))1,u(FUN`FLAGERROR,Doubles must use whole positive numbers.)0)
&FUN`FLAGCHECK`PRIVATE [u(cobj,roll)]=u(setq,private,1)1
&FUN`FLAGCHECK`PUBLIC [u(cobj,roll)]=u(setq,public,1)1

&FUN`FLAGERROR [u(cobj,roll)]=u(setq,errcheck,setunion(%q<errcheck>,%0,|,|))

&INC`INIT [u(cobj,roll)]=th u(u(cobj,roll)/FUN`INIT);th switchall(%0,d,u(setq,dbl,setdiff(%q<dbl>,10)),st,u(setq,dicemode,ST))

&FUN`INIT [u(cobj,roll)]=null([if(%q<tn>,,u(setq,tn,u(game_config,ROLLER,TARGET_NUMBER)))][if(%q<mul>,,u(setq,mul,1))][if(%q<ag>,,u(setq,ag,u(game_config,ROLLER,AGAIN_NUMBER)))][if(%q<re>,,u(setq,re,u(game_config,ROLLER,REROLL_NUMBER)))][if(%q<dbl>,,u(setq,dbl,u(game_config,ROLLER,DOUBLE_NUMBER)))][u(setq,dicemap,u(FUN`DICEMAP,%q<tn>,%q<dbl>,u(game_config,ROLLER,BOTCHES)))])

&FUN`CALC [u(cobj,roll)]=u(ladd,regeditalli(%0,(%[-+%])%B(%\d+),$1$2))
&FUN`CALCDICE [u(cobj,roll)]=regeditalli(%0,v(REG`FORMATROLL),if(isnum($0),floor($0),u(u(cobj,roll)/FUN`STATNUM,$0,%1)))

&FUN`FANCYDICE [u(cobj,roll)]=iter(%0,ansi(switchall(1,eq(u(setr,res,elements(%q<dicemap>,%i0)),0.001),hx,eq(%q<res>,0),hr,eq(%q<res>,1),hg,eq(%q<res>,2),hy,gte(%i0,%q<ag>),u,t(match(%q<re>,%i0)),C),switch(%q<res>,2,<%i0>,0.001,-%i0-,%i0)))

&FUN`FINDNAMES [u(cobj,roll)]=regeditalli(%0,v(REG`FORMATROLL),localize(if(isnum($0),floor($0),switch(u(setr,statcheck,$0),*/*,u(FUN`FINDSPECNAME,u(FUN`FINDSTATNAME,before(%q<statcheck>,/),%1)/[after(%q<statcheck>,/)],%1),u(FUN`FINDSTATNAME,%q<statcheck>,%1)))))

&FUN`FINDSTATNAME [u(cobj,roll)]=u(strfirstof,if(match(v(ROLL`DYNAMICSTATS),%0,|),ucstr(%0)),u(FUN`FINDSTATNAME`SEARCH`EXACT,%0,u(strfirstof,%1,%#)),grab(v(ROLL`DYNAMICSTATS),%0*,|),u(FUN`FINDSTATNAME`SEARCH`WILD,%0,u(strfirstof,%1,%#)),%0)

&FUN`FINDSPECNAME [u(cobj,roll)]=u(strfirstof,if(match(get(u(strfirstof,%1,%#)/D`SPECIALTIES),%0,|),%0),grab(iter(get(u(strfirstof,%1,%#)/D`SPECIALTIES),before(%i0,~),|,|),%0*,|),%0)

&ROLL`DYNAMICSTATS [u(cobj,roll)]=SPEED|DEFENSE|INITIATIVE|WILLPOWER|BLOOD POTENCY|PRIMAL URGE|PSYCHE|WYRD|GNOSIS|PYROS|ENDOWMENT|MORALITY
&ROLL`DYNAMICSTATS`SPEED [u(cobj,roll)]=add(bound(u(getstat,%0,D`ATTRIBUTES,Strength,BONUS),1),bound(u(getstat,%0,D`ATTRIBUTES,Dexterity,BONUS),1),5)
&ROLL`DYNAMICSTATS`DEFENSE [u(cobj,roll)]=add(min(bound(u(getstat,%0,D`ATTRIBUTES,Dexterity,BONUS),1),bound(u(getstat,%0,D`ATTRIBUTES,Wits,BONUS),1)),u(getstat,%0,D`BONUS,DEFENSE))
&ROLL`DYNAMICSTATS`INITIATIVE [u(cobj,roll)]=add(bound(u(getstat,%0,D`ATTRIBUTES,Dexterity,BONUS),1),bound(u(getstat,%0,D`ATTRIBUTES,Composure,BONUS),1),u(getstat,%0,D`BONUS,INITIATIVE))
&ROLL`DYNAMICSTATS`WILLPOWER [u(cobj,roll)]=u(u(cobj,pool)/POOL`WILLPOWER`MAX,%0)
&ROLL`DYNAMICSTATS`BLOOD_POTENCY [u(cobj,roll)]=u(getstat,%0,D`INFO,Power)
&ROLL`DYNAMICSTATS`PRIMAL_URGE [u(cobj,roll)]=u(getstat,%0,D`INFO,Power)
&ROLL`DYNAMICSTATS`PSYCHE [u(cobj,roll)]=u(getstat,%0,D`INFO,Power)
&ROLL`DYNAMICSTATS`WYRD [u(cobj,roll)]=u(getstat,%0,D`INFO,Power)
&ROLL`DYNAMICSTATS`GNOSIS [u(cobj,roll)]=u(getstat,%0,D`INFO,Power)
&ROLL`DYNAMICSTATS`PYROS [u(cobj,roll)]=u(getstat,%0,D`INFO,Power)
&ROLL`DYNAMICSTATS`MORALITY [u(cobj,roll)]=u(getstat,%0,D`INFO,Morality)
&ROLL`DYNAMICSTATS`ENDOWMENT [u(cobj,roll)]=u(lmax,iter(u(filter,ISINTSTAT,get(%0/D`ENDOWMENTS),|,|),last(%i0,~),|))

&FIL`ISINTSTAT [u(Cobj,roll)]=isint(after(%0,~))

&FUN`FINDSTATNAME`SEARCH`EXACT [u(cobj,roll)]=null(iter(v(ROLL`CATEGORIES),if(match(iter(u(filter,ISINTSTAT,get(%1/D`%i0),|,|),first(%i0,~),|,|),%0,|),u(setr,found,%0)[ibreak(1)]),|,|))[ucstr(%q<found>)]

&FUN`FINDSTATNAME`SEARCH`WILD [u(cobj,roll)]=null(iter(v(ROLL`CATEGORIES),if(strlen(u(setr,found,grab(iter(u(filter,ISINTSTAT,get(%1/D`%i0),|,|),first(%i0,~),|,|),%0*,|))),%q<found>[ibreak(1)]),|,|))[ucstr(%q<found>)]

&ROLL`CATEGORIES [u(cobj,roll)]=ATTRIBUTES|SKILLS|ARCANA|DISCIPLINES|MANIFESTATIONS|RENOWN

&FUN`STATNUM [u(cobj,roll)]=localize(if(strmatch(%0,*/*),add(u(FUN`STATNUM,before(stripansi(%0),/),%1),u(strfirstof,last(grab(get(%#/D`SPECIALTIES),elements(stripansi(%0),1 2,/,/)*~*,|),~),0)),if(match(v(ROLL`DYNAMICSTATS),%0,|),add(u(ROLL`DYNAMICSTATS`[edit(stripansi(%0),%b,_)],u(strfirstof,%1,%#)),getbonus(u(strfirstof,%1,%#),stripansi(%0))),add(u(firstof,u(FUN`STATNUM`SEARCH,stripansi(%0),u(strfirstof,%1,%#)),0),getbonus(u(strfirstof,%1,%#),stripansi(%0))))))

&FUN`STATNUM`SEARCH [u(cobj,roll)]=null(iter(v(ROLL`CATEGORIES),if(strlen(u(setr,found,grab(get(%1/D`%i0),%0~*,|))),%q<found>[ibreak(1)]),|,|))[after(%q<found>,~)]

&FUN`FORMATROLL [u(cobj,roll)]=regeditalli(%0,v(REG`FORMATROLL),u(u(cobj,roll)/FUN`FORMATNUM,$0,u(strfirstof,%1,%#)),%b\\+%b,ansi(hg,%b+%b),%b\\-%b,ansi(hr,%b-%b))

&REG`FORMATROLL [u(cobj,roll)]=(\b\S+(?:\b\s\S+)*\b\)?)

&FUN`FORMATNUM [u(cobj,roll)]=localize(if(isnum(%0),floor(%0),if(u(setr,stat,u(u(cobj,roll)/FUN`STATNUM,%0,%1))[u(setq,bonus,getbonus(%1,before(%0,/)),spec,u(getstat,%1,D`SPECIALTIES,%0))],switch(%0,*/*,if(%q<spec>,ansi(h,ucstr(%0)),ansi(h,ucstr(before(%0,/))[ansi(hx,/[after(%0,/)])])),ansi(h,ucstr(%0)))[ansi(h,<)][ansi(h,sub(%q<stat>,%q<spec>,%q<bonus>))][if(%q<bonus>,ansi(hg,+%q<bonus>))][if(%q<spec>,ansi(hy,+%q<spec>))][ansi(h,>)],ansi(hx,%0<0>))))

&FUN`NORMALIZE [u(cobj,roll)]=squish(regeditall(%0,v(REG`NORMALIZE),%b$<sym>%b))

&REG`NORMALIZE [u(cobj,roll)]=(\s*)?(?P<sym>[\+|\-])(\s*)?

&FUN`ROLLDICE [u(cobj,roll)]=lmath(add,elements(%1,%0))

&FUN`DICEMAP [u(cobj,roll)]=lreplace(if(%2,0.001,0) [iter(lnum(sub(%0,2)),0)] [iter(lnum(sub(11,%0)),1)],%1,2)

&FUN`INSREG [u(cobj,roll)]=u(setq,%0,linsert(r(%0),-1,%1,|)
&FUN`GETREG [u(cobj,roll)]=elements(r(%0),%1,|,|)

&FUN`ROLL [u(cobj,roll)]=[u(FUN`INSREG,roll%1,%0)][u(FUN`INSREG,roll%1,sort(die(%0,10,1)))][u(FUN`INSREG,roll%1,u(FUN`ROLLDICE,u(FUN`GETREG,roll%1,2),%q<dicemap>))][u(FUN`INSREG,roll%1,u(FUN`FANCYDICE,u(FUN`GETREG,roll%1,2)))][u(FUN`REROLL,u(FUN`GETREG,roll%1,2),roll%1)][u(FUN`INSREG,roll%1,filterbool(#lambda/not(match(%q<re>,\%0)),sort(cat(u(FUN`GETREG,roll%1,2),iter(listq(roll%1-reroll*),u(FUN`GETREG,%i0,2))))))][u(FUN`AGAIN,u(FUN`GETREG,roll%1,2),roll%1)][u(FUN`INSREG,roll%1,add(u(FUN`GETREG,roll%1,3),r(roll%1-rerollsux),r(roll%1-agrollsux)))]

&FUN`REROLL [u(cobj,roll)]=if(words(setinter(%q<re>,%0)),u(setq,%1-rerolls,add(r(%1-rerolls),1))[u(FUN`INSREG,%1-reroll[r(%1-rerolls)],words(filterbool(#lambda/match(%q<re>,\%0),%0)))][u(FUN`INSREG,%1-reroll[r(%1-rerolls)],sort(die(u(FUN`GETREG,%1-reroll[r(%1-rerolls)],1),10,1)))][u(FUN`INSREG,%1-reroll[r(%1-rerolls)],u(FUN`ROLLDICE,u(FUN`GETREG,%1-reroll[r(%1-rerolls)],2),%q<dicemap>))][u(FUN`INSREG,%1-reroll[r(%1-rerolls)],u(FUN`FANCYDICE,u(FUN`GETREG,%1-reroll[r(%1-rerolls)],2)))][u(setq,%1-rerollsux,add(r(%1-rerollsux),u(FUN`GETREG,%1-reroll[r(%1-rerolls)],3)))][u(FUN`REROLL,u(FUN`GETREG,%1-reroll[r(%1-rerolls)],2),%1)])

&FUN`AGAIN [u(cobj,roll)]=if(u(setr,agcount,words(filterbool(#lambda/gte(\%0,%q<ag>),%0))),u(setq,%1-agrolls,add(r(%1-agrolls),1))[u(FUN`INSREG,%1-agroll[r(%1-agrolls)],%q<agcount>)][u(FUN`INSREG,%1-agroll[r(%1-agrolls)],sort(die(u(FUN`GETREG,%1-agroll[r(%1-agrolls)],1),10,1)))][u(FUN`INSREG,%1-agroll[r(%1-agrolls)],u(FUN`ROLLDICE,u(FUN`GETREG,%1-agroll[r(%1-agrolls)],2),%q<dicemap>))][u(FUN`INSREG,%1-agroll[r(%1-agrolls)],u(FUN`FANCYDICE,u(FUN`GETREG,%1-agroll[r(%1-agrolls)],2)))][u(setq,%1-agrollsux,add(r(%1-agrollsux),u(FUN`GETREG,%1-agroll[r(%1-agrolls)],3)))][u(FUN`AGAIN,u(FUN`GETREG,%1-agroll[r(%1-agrolls)],2),%1)])

&FUN`ROLLRESULT [u(cobj,roll)]=if(and(not(isint(%0)),lt(%0,1)),ansi(hx,a botch!),switch(%1,0,if(lt(floor(%0),1),ansi(hr,a failure!),if(gt(floor(%0),1),ansi(hg,floor(%0) successes!),ansi(hg,a success!))),1,if(lte(floor(%0),%2),if(floor(%0),floor(%0) success[if(gt(floor(%0),1),es)]\, but [ansi(hr,a miss.)],no successes! [ansi(hr,a miss!)]),ansi(hg,floor(%0) success[if(gt(floor(%0),1),es)]! [sub(floor(%0),%2)] success[if(gt(sub(floor(%0),%2),1),es)] over DV!)),2,if(lt(floor(%0),%2),if(floor(%0),floor(%0) successes\, but [ansi(hr,a failure.)],no successes! [ansi(hr,a failure!)]),ansi(hg,floor(%0) Success[if(gt(floor(%0),1),es)]!%B[sub(floor(%0),%2)] Threshold Success[if(gt(sub(floor(%0),%2),1),es)]))))

&FUN`RESFORMAT [u(cobj,roll)]=u(setq,formatted,u(FUN`FORMATROLL,%q<findnames>,%q<t1>))[null(iter(lnum(1,%q<mul>),u(FUN`ROLL,%q<totaldice>,%i0)))][switch(%q<dicemode>,ST,if(%q<public>,%n rolls with %q<t1name>'s Stats,You roll for %q<t1name>),job,%n Rolls,if(%q<private>,You Roll,%n rolls))]%b%q<formatted>[if(neq(%q<tn>,u(game_config,ROLLER,TARGET_NUMBER)),%bat TN%q<tn>)][if(%q<def>,\,%bVs DV%q<def>)][if(%q<dif>,\,%bat Difficulty %q<dif>)][if(neq(words(setinter(%q<dbl>,u(game_config,ROLLER,DOUBLE_NUMBER))),words(%q<dbl>)),\,%bWith Double [itemize(sort(%q<dbl>),%b,and,\,)])][if(neq(%q<ag>,u(game_config,ROLLER,AGAIN_NUMBER)),\,%bWith %q<ag>-Again)][if(words(%q<re>),\,%bRe-Rolling [itemize(%q<re>,%b,and,\,)])][if(gt(%q<mul>,1),\,%b%q<mul> times)]: %q<totaldice> Total dice!%R[u(trimlines,iter(lnum(1,%q<mul>),ansi(h,if(gt(%q<mul>,1),numth(%i0) Roll,Roll):)%b[u(FUN`GETREG,roll%i0,4)][if(u(setr,rerolls,r(roll%i0-rerolls)),%b[ansi(hx,|)] Re-Rolls:%b[iter(lnum(1,%q<rerolls>),u(FUN`GETREG,roll%i1-reroll%i0,4),%b,|)])][if(u(setr,agains,r(roll%i0-agrolls)),%R[u(trimlines,iter(lnum(1,%q<agains>),ansi(h,if(gt(%q<mul>,1),%t)%q<ag>-Again Roll %i0:)%b[u(FUN`GETREG,roll%i1-agroll%i0,4)],%b,%r))])]%R%TResulting in: [u(FUN`ROLLRESULT,add(%q<sux>,u(FUN`GETREG,roll%i0,6)),if(%q<def>,1,if(%q<dif>,2,0)),u(strfirstof,%q<def>,%q<dif>))],%b,%r))]

&INC`ROLL [u(cobj,roll)]=th u(setq,results,u(FUN`RESFORMAT));@select/inline t(%q<private>)=1,{@pemit %#=%q<results>},0,{@remit %l=%q<results>};@attach %!/INC`MSG`CHAN=if(%q<private>,\(PRIVATE\)%B)[if(%q<private>,edit(%q<results>,You Roll,%n Rolls),%q<results>)],u(game_config,ROLLER,CHANNEL)

&INC`STROLL [u(cobj,roll)]=th u(setq,results,u(FUN`RESFORMAT,,%q<t1>));@select/inline t(%q<public>)=0,{@pemit %#=%q<results>},1,{@nsremit %l=%q<results>};@attach %!/INC`MSG`CHAN=edit(%q<results>,You roll for,%n rolls for),u(game_config,ROLLER,CHANNEL)

&CMD`+ROLLINIT [u(cobj,roll)]=$roll init:@check words(u(setr,list,lvplayers(%l)))=@attach %!/INC`MSG=Nobody to roll init for!;th iter(%q<list>,u(setq,dex,u(firstof,u(getstat,%i0,D`ATTRIBUTES,DEXTERITY,BONUS),0),comp,u(firstof,u(getstat,%i0,D`ATTRIBUTES,COMPOSURE,BONUS),0),bonus,u(firstof,u(getstat,%i0,D`BONUS,initiative),0),roll,u(firstof,rand(1,10),0))[u(attrib_set,%i0,INITROLL,ansi(h,DEXTERITY\(%q<dex>\) + COMPOSURE\(%q<comp>\) + BONUS\(%q<bonus>\) + ROLL\(%q<roll>\) = )%B[ansi(hg,add(%q<dex>,%q<comp>,%q<bonus>,%q<roll>))])]);@attach %!/INC`MSG`ROOM=%n called for an Initiative Roll!;th iter(sortkey(#lambda/stripansi(last(get(\%0/INITROLL))),%q<list>,n),remit(%l,ljust(left(name(%i0):,add(1,config(player_name_len))),add(1,config(player_name_len)))%B[get(%i0/INITROLL)]))