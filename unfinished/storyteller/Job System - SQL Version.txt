th attrib_set(u(jobsys)/VAR`PLAYFLAGS,setunion(get(u(jobsys)/VAR`PLAYFLAGS),ROLL,|,|))

&INC`ROLL u(jobsys)=@assert setr(jid,u(SQL,GET`JOBID,%0))=@nspemit %#=u(RFN`MSGHEAD) ERROR: Job %0 not found.;@assert or(strmatch(u(SQL,GET`OWNEROBJID,%q<jid>),%:),match(u(SQL,GET`CLAIMOBJIDS,%q<jid>),%:),u(FUN`PERMCHECK,setr(cat,u(SQL,GET`JOBCAT,%q<jid>)),ADMIN,%#))=@nspemit %#=u(RFN`MSGHEAD) ERROR: Permission Denied.;@assert eq(u(SQL,GET`JOBSTATUS,%q<jid>),0)=@nspemit %#=u(RFN`MSGHEAD) The job is already finished.;@assert strlen(%1)=@nspemit %#=u(RFN`MSGHEAD) What will you roll?;@switch/inline t(strlen(after(%1,|)))=1,{@assert u(u(srs)/FUN`FLAGCHECK,after(%1,|))=@nspemit %#=u(RFN`MSGHEAD) ERROR: [itemize(iter(%q<errcheck>,ansi(h,%i0),|,|),|,and,\,)]};@include u(srs)/INC`INIT=,;@assert strlen(setr(inflate,u(u(srs)/FUN`NORMALIZE,setr(string,before(%1,|)))))=@nspemit %#=u(RFN`MSGHEAD) ERROR: Could not format roll formula. Please contact a coder.;@assert strlen(setr(findnames,u(u(srs)/FUN`FINDNAMES,%q<inflate>,%#)))=@nspemit %#=u(RFN`MSGHEAD) ERROR: Could not perform name finding. Please contact a coder.;@assert gt(setr(totaldice,ulocal(u(srs)/FUN`CALC,setr(calcdice,u(u(srs)/FUN`CALCDICE,%q<findnames>,%#)))),0)=@nspemit %#=u(RFN`MSGHEAD) ERROR: You have no dice to roll! Check your spelling and ensure that penalties aren't reducing your roll to nothing.;th setq(resformat,u(u(srs)/FUN`RESFORMAT));@include u(jobsys)/INC`DOSQL=ADD`COMMENT,%q<jid>,%q<pid>,0,%q<resformat>;@include u(jobsys)/INC`MSGJOB=%q<jid>,{[u(FUN`MASKNAME,%q<cat>)] sent a Roll in for [u(FUN`JOBNAME,%q<jid>,%q<cat>)].};@include u(jobsys)/INC`MAILJOB=%q<jid>,{[u(FUN`MASKNAME,%q<cat>)] sent a Roll in for [u(FUN`JOBNAME,%q<jid>,%q<cat>)].%R%RRoll:%R%q<resformat>};@include u(jobsys)/INC`UPDJOB=0,%q<jid>;@include u(jobsys)/INC`DOSQL=SET`JOBATTN,not(strmatch(u(SQL,GET`OWNEROBJID,%q<jid>),%:)),%q<jid>;@include u(jobsys)/INC`DOSQL=SET`CHECKDATE,%q<jid>,%q<pid>