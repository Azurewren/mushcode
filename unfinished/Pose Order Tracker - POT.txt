@@ This is a VERY BASIC pose tracker!

@switch/inline isdbref(u(pot))=0,{@tel create(Pose Order Tracker <POT>)=config(master_room)}
&pot u(coi)=locate(config(master_room),Pose Order Tracker <POT>,TXxi)
@parent u(pot)=u(coi)
@set u(pot)=WIZARD SAFE !NO_COMMAND

@switch/inline isdbref(u(potdb))=0,{@tel create(Pose Tracker Database <POTDB>)=u(pot)}
&potdb u(coi)=locate(u(pot),Pose Tracker Database <POTDB>,TXxi)
@parent u(potdb)=u(coi)
@set u(potdb)=WIZARD SAFE !NO_COMMAND
@power u(potdb)=many_attribs

&CMD`+SUMMARY u(pot)=$^\+summary(?\:/(\S+)?)?(?\: +(.*))?$:@attach %!/INC`PARTIAL=%1,SILENT,|,POT,switch,switch;@stop gt(strlen(%2),1024)=@pemit %#=ansi(hr,That summary is too long.);@switch/inline %q<switch>=SILENT,{@pemit %#=ansi(hx,>>> SILENT SUMMARY: [fullname(%#)] - %2)},{@pemit/list uldefault(%l/D`CUSTRECP,lcon(%l),%#)=ansi(h,>>> SUMMARY - [fullname(%#)] <<< - %2)};&D`LASTPOSE`SUMMARY %#=%2;@check cor(isic(%#),get(%l/POT));&[u(setr,potattr,u(setr,loc,uldefault(%l/D`CUSTLOC,%l,%#))`[nextslot(u(setr,potdb,u(potdb)),%q<loc>)])]`TYPE %q<potdb>=SUMMARY;&%q<potattr> %q<potdb>=%2;&%q<potattr>`BY %q<potdb>=%#;&%q<potattr>`WHEN %q<potdb>=secs();@switch/inline gt(nattr(%q<potdb>/%q<loc>`*),300)=1,{@dolist/inline elements(sortkey(#lambda/last(\%0,`),lattr(%q<potdb>/%q<loc>`*),n),lnum(1,sub(%q<count>,300)))=@wipe %q<potdb>/%i0}
@set u(pot)/CMD`+SUMMARY=regexp

&CMD`+POT u(pot)=$^(?\:\+)?pot(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.+))?$:@attach %!/INC`PARTIAL=%1,setunion(get(u(pot)/VAR`PLAYFLAGS),if(u(isadmin,%#),get(u(pot)/VAR`ADMINFLAGS)),|,|),|,POT,switch,switch;@attach u(pot)/INC`[u(strfirstof,%q<switch>,MAIN)]=%2,%3
@set u(pot)/CMD`+pot=regexp

&VAR`PLAYFLAGS u(pot)=LAST|MAX|LIST|BRIEF|MODE|SUMMARY|HEADER|FOOTER

&RFN`MSGHEAD u(pot)=msghead(v(VAR`MSGHEAD),%1)
&RFN`HEADER u(pot)=header(%0,,POT`BORDER,POT`BORDERDOT,POT`BORDERTEXT,,%1)
&RFN`SUBHEADER u(pot)=subheader(%0,,POT`BORDER,POT`BORDERDOT,POT`BORDERTEXT,,%1)
&RFN`SEPARATOR u(pot)=separator(%0,,POT`BORDER,POT`BORDERDOT,POT`BORDERTEXT,,%1)
&VAR`MSGHEAD u(pot)=POT

&INC`MAIN u(pot)=@switch/inline default(%#/D`POT`MODE,0)=0,{@attach u(pot)/INC`LIST},1,{@attach u(pot)/INC`BRIEF}

&INC`BRIEF u(pot)=@check words(u(setr,posers,sort(filterbool(#lambda/cand(hasflag(\%0,CONNECTED),strmatch(get(\%0/D`LASTPOSE`WHERE),%l)),uldefault(%l/D`CUSTRECP,lvplayers(%l),%#)),attr:D`LASTPOSE`WHEN)))=@attach %!/INC`MSG=No active RP in the room!;@pemit %#=u(HEADER,RP Activity for [name(%l)]);@pemit %#=ansi(firstcolor(%#,POT`COLNAME,DEFAULT`COLNAME),align(20 4 4 [sub(u(width,%#),31)],Name,Pose,Idle,Summary));@pemit %#=separator();@dolist/inline %q<posers>=@pemit %#=align(20 4 4 [sub(u(width,%#),31)],u(pueblize,name(%i0),+pot/last [name(%i0)]),ansi(ryg(round(mul(fdiv(bound(sub(secs(),get(%i0/D`LASTPOSE`WHEN)),0,3600),3600),100),0)),u(etime,sub(secs(),get(%i0/D`LASTPOSE`WHEN)),4)),ansi(ryg(round(mul(fdiv(bound(idle(%i0),0,3600),3600),100),0)),u(etime,idle(%i0),4)),get(%i0/D`LASTPOSE`SUMMARY));@pemit %#=u(HEADER)

&INC`LAST u(pot)=@attach %!/INC`CHECKPC=%0,1,v(VAR`MSGHEAD);@check strmatch(loc(%q<t1>),%l)=@attach %!/INC`MSG=%q<t1name> is not in the room!;@check cand(hasattrval(%q<t1>/D`LASTPOSE),lte(u(setr,ago,sub(secs(),get(%q<t1>/D`LASTPOSE`WHEN))),mul(60,60,2)))=@attach %!/INC`MSG=%q<t1name> hasn't posed recently.;@check strmatch(get(%q<t1>/D`LASTPOSE`WHERE),%l)=@attach %!/INC`MSG=%q<t1name> hasn't posed in this room.;@pemit %#=header(%q<t1name>'s Last Pose [u(etime,%q<ago>,3)] Ago);@pemit %#=u(u(pot)/FUN`FORMATPOSE,%#,%q<t1>,get(%q<t1>/D`LASTPOSE`TYPE),trim(get(%q<t1>/D`LASTPOSE),%R));@pemit %#=header()

&INC`MODE u(pot)=&D`POT`MODE %#=u(setr,mode,if(default(%#/D`POT`MODE,0),0,1));@attach %!/INC`MSG=+pot will now default to +pot/[if(%q<mode>,summary,list)]

&INC`LIST u(pot)=@switch/inline t(strlen(%0))=1,{@check valnum(%0)=@pemit %#=announce(POT) ERROR: Last number of poses must be a whole, positive number.};@check words(u(setr,poses,revwords(elements(revwords(sortkey(#lambda/last(\%0,`),lattr(u(potdb)/[uldefault(%l/D`CUSTLOC,%l,%#)]`*))),lnum(1,firstof(%0,get(%#/D`POT`MAX),15))))))=@pemit %#=No recent poses tracked in this location.;@pemit %#=header(Recent Poses);@dolist %q<poses>={@switch/inline get(u(potdb)/%i0`TYPE)=SUMMARY,{@pemit %#=ansi(h,>>> SUMMARY [trim(u(etime,sub(secs(),get(u(potdb)/%i0`WHEN)),3))] Ago - [fullname(get(u(potdb)/%i0`BY))] <<< - [get(u(potdb)/%i0)])},{@pemit %#=[ansi(firstcolor(%#,POT`BORDER,DEFAULT`BORDER),<)][colornames(name(u(setr,spk,get(u(potdb)/%i0`BY))),%#,lplayers(%l),IC)] posed [ansi(c,trim(u(etime,sub(secs(),get(u(potdb)/%i0`WHEN)),3)))] Ago[ansi(firstcolor(%#,POT`BORDER,DEFAULT`BORDER),>)];@pemit %#=u(u(pot)/FUN`FORMATPOSE,%#,get(u(potdb)/%i0`BY),get(u(potdb)/%i0`TYPE),get(u(potdb)/%i0))};@switch/inline eq(inum(0),words(%q<poses>))=1,{@pemit %#=header(End of Poses)}}

&INC`SUMMARY u(pot)=@switch/inline t(strlen(%0))=1,{@check valnum(%0)=@pemit %#=announce(POT) ERROR: Last number of poses must be a whole, positive number.};@check words(u(setr,poses,revwords(elements(revwords(sortkey(#lambda/last(\%0,`),filterbool(#lambda/strmatch(get(u(potdb)/\%0`TYPE),SUMMARY),lattr(u(potdb)/[uldefault(%l/D`CUSTLOC,%l,%#)]`*)))),lnum(1,firstof(%0,get(%#/D`POT`MAX),15))))))=@pemit %#=No recent poses tracked in this location.;@pemit %#=header(Recent Summaries);@pemit %#=ansi(firstcolor(%#,POT`COLNAME,DEFAULT`COLNAME),align(20 4 4 [sub(u(width,%#),31)],Name,Ago,Idle,Summary));@pemit %#=separator();@dolist %q<poses>={@pemit %#=align(20 4 4 [sub(u(width,%#),31)],u(pueblize,name(get(u(potdb)/%i0`BY)),+pot/last [name(get(u(potdb)/%i0`BY))]),ansi(ryg(round(mul(fdiv(bound(sub(secs(),get(u(potdb)/%i0`WHEN)),0,3600),3600),100),0)),u(etime,sub(secs(),get(u(potdb)/%i0`WHEN)),4)),ansi(ryg(round(mul(fdiv(bound(idle(%i0),0,3600),3600),100),0)),u(etime,idle(get(u(potdb)/%i0`BY)),4)),get(u(potdb)/%i0));@switch/inline eq(inum(0),words(%q<poses>))=1,{@pemit %#=header(End of Poses)}}

&INC`MAX u(pot)=@check valnum(%0)=@pemit %#=You must enter a whole number greater than 0 for your maximum poses!;&D`POT`MAX %#=%0;@pemit %#=announce(POT) You will now see only the last %0 poses in +pot.

&INC`HEADER u(pot)=@attach u(pot)/INC`CHHEAD=HEADER
&INC`FOOTER u(pot)=@attach u(pot)/INC`CHHEAD=FOOTER
&INC`CHHEAD u(pot)=th u(setq,change,if(t(get(%#/D`POT`%0)),0,1));@attach %!/INC`MSG=You will [if(%q<change>,now see,no longer see)] a %0 for all poses!;&D`POT`%0 %#=%q<change>

&TRG`SELFCLEAN u(pot)=@switch/inline gt(v(VAR`SELFCLEAN),0)=1,{@dolist/inline lattr(u(potdb)/*)=@trigger u(pot)/TRG`DOCLEAN=%i0};@wait mul(60,v(var`checkminutes))=@trigger u(pot)/TRG`SELFCLEAN

&TRG`DOCLEAN u(pot)=@dolist/inline filterbool(#lambda/gte(sub(secs(),get(u(potdb)/\%0`WHEN)),mul(60,60,v(VAR`TIMEOUTHOURS))),lattr(u(potdb)/%0`*))=@wipe u(potdb)/%i0

&VAR`SELFCLEAN u(pot)=1
&VAR`TIMEOUTHOURS u(pot)=2
&VAR`CHECKMINUTES u(pot)=30

&STARTUP u(pot)=@trigger u(pot)/TRG`SELFCLEAN;@stop cand(isdbref(u(scene)),not(hasflag(u(scene),HALT)));@dolist/inline @EMIT POSE SAY SEMIPOSE={@hook/override/inline %i0=u(pot),OVERRIDE`IC}

&OVERRIDE`IC u(pot)=$^(?s)(pose|semipose|say|@emit)(?\:/noeval)?(?\: +(.*))?$:@check strlen(%2)=@pemit %#=Huh?  (Type "help" for help.);@attach/nobreak me/include`lastpose`prepose;@attach/nobreak u(pot)/INC`ALTMAIN=%1,%2;@message/spoof uldefault(%l/D`CUSTRECP,lcon(%l),%#)=POSE FORMATTER FAIL!,u(pot)/FUN`FORMATPOSE,##,%#,switch(%1,pose,:,semipose,;,say,",@emit,|),%2;@attach me/include`lastpose`postpose;@@ @attach me/include`lastpose`catchpose=trimpenn(trimpenn(%qr,%t,r),%r),u(objid,%#)
@set u(pot)/OVERRIDE`IC=regexp

&FUN`FORMATPOSE u(pot)=edit(colornames(speak(%1,%2%3,says\,,%0/SAY_FN,%0/NONE_FN),firstof(%4,%0),lplayers(loc(%0)),IC),"","%b")

&FUN`FORMATPOSE u(pot)=colornames(regeditalli(speak(%1,%2[colornames(,firstof(%4,%0),lplayers(loc(%0)),IC)]),v(REG`FORMATPOSE),ansi(custcolor(%0,IC`QUOTES),")[ansi(custcolor(%0,IC`SPEECH),$1)][ansi(custcolor(%0,IC`QUOTES),")]),firstof(%4,%0),lplayers(loc(%0)),IC)

&REG`FORMATPOSE u(pot)=(?s)"([^ "][^"]*[^ "])"

&FUN`FORMATPOSE u(pot)=colornames(regeditalli(speak(%1,%2%3),v(REG`FORMATPOSE),ansi(custcolor(%0,IC`QUOTES),")[ansi(custcolor(%0,IC`SPEECH),$1)][ansi(custcolor(%0,IC`QUOTES),")]),firstof(%4,%0),lplayers(loc(%0)),IC)

&SAY_FN u(ap)=ansi(custcolor(%!,IC`QUOTES),")[ansi(custcolor(%!,IC`SPEECH),colornames(%0,%!,lplayers(loc(%!)),IC))][ansi(custcolor(%!,IC`QUOTES),")]

&SAY_FN u(at)=ansi(custcolor(%!,IC`QUOTES),")[ansi(custcolor(%!,IC`SPEECH),colornames(%0,%!,lplayers(loc(%!)),IC))][ansi(custcolor(%!,IC`QUOTES),")]

&INC`ALTMAIN u(pot)=@check cor(isic(%#),get(%l/POT));&[u(setr,potattr,u(setr,loc,uldefault(%l/D`CUSTLOC,%l,%#))`[nextslot(u(setr,potdb,u(potdb)),%q<loc>)])]`TYPE %q<potdb>=switch(%0,@EMIT,|,SAY,",SEMIPOSE,;,POSE,:);&D`LASTPOSE`TYPE %#=switch(%0,@EMIT,|,SAY,",SEMIPOSE,;,POSE,:);&%q<potattr> %q<potdb>=%1;&D`LASTPOSE %#=%1;&D`LASTPOSE`SUMMARY %#;&%q<potattr>`BY %q<potdb>=%#;&%q<potattr>`WHEN %q<potdb>=secs();&D`LASTPOSE`WHEN %#=secs();&D`LASTPOSE`WHERE %#=%l;@switch/inline gt(nattr(%q<potdb>/%q<loc>`*),300)=1,{@dolist/inline elements(sortkey(#lambda/last(\%0,`),lattr(%q<potdb>/%q<loc>`*),n),lnum(1,sub(%q<count>,300)))=@wipe %q<potdb>/%i0}

&D`CUSTLOC u(vroom)=%!_[default(me/LOC-%0,v(default-startingroom))]
&D`CUSTRECP u(vroom)=setinter(edit(wildgrep(me,LOC-*,default(me/LOC-%0,v(default-startingroom))),LOC-,),lcon(me))

&INCLUDE`LASTPOSE`PREPOSE u(pot)=@check isic(%#);@dolist/inline filterbool(#lambda/get(\%0/D`POT`HEADER),uldefault(%l/D`CUSTRECP,lcon(%l),%#))={@pemit %i0=u(HEADER,%n has Posed,%i0)}

&INCLUDE`LASTPOSE`POSTPOSE u(pot)=@check isic(%#);@dolist/inline filterbool(#lambda/get(\%0/D`POT`FOOTER),uldefault(%l/D`CUSTRECP,lcon(%l),%#))={@pemit %i0=u(SUBHEADER,End of %n's Pose,%i0)}

th attrib_set(u(cco-db)/VAR`CATEGORIES,setunion(get(u(cco-db)/VAR`CATEGORIES),IC,|,|))
&VAR`CATEGORIES`IC u(cco-db)=SPEECH|QUOTES
&COLOR`IC`SPEECH u(pco)=h
&COLOR`IC`QUOTES u(pco)=h


@@ POSE ORDER TRACKER - POT
+help/addmain Communications/+pot=[u(pot)]/HLP`+POT
&HLP`+POT u(pot)=+pot, or [ansi(h,Po)]se [ansi(h,T)]racker, is a system that stores poses within the room for easy retrieval for review. Sometimes, poses are lost in spam or scroll, or a player enters late and needs to see what's going on, or was disconnected when someone else posed, and that's what this system's here to aid with.%R%R[ansi(hc,Commands)]%R[align(5 [sub(u(width,%#),6)],,{[ansi(h,+pot)] - Show either +pot/list or +pot/brief, depending on /mode. (See below.)%R[ansi(h,+pot/list)] - show the last 15 (or set max) poses.%R[ansi(h,+pot/list <number>)] - Show a specified amount of poses.%R[ansi(h,+pot/max <number>)] - Set a new default number of poses to show.%R[ansi(h,+pot/brief)] - Show when people last posed and their last +summary made after that pose if they have one.%R[ansi(h,+pot/summary)] - Just like +pot/list, but only shows +summary's. Give a number argument to list a specific amount!%R[ansi(h,+pot/mode)] - Change the behavior of +pot. By default, +pot uses +pot/list display style. Change mode and it will use +pot/brief instead.%R[ansi(h,+pot/header)] - Make a separator header appear for you when someone poses. Use again to toggle off.%R[ansi(h,+pot/footer)] - Like header, but makes a footer appear instead/too.})]