@@ DEPENDENCIES: Core

th u(NEWCOBJ,Job System,jms,,,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)
th u(NEWCOBJ,Jobs Database <JOBDB>,jobdb,u(cobj,jms),,,WIZARD SAFE,INHERIT SIDEFX SAFE)
@describe [u(cobj,jobdb)]=???

@unlock/basic [u(cobj,jobdb)]
@lset [u(cobj,jobdb)]/basic=visual
@lset [u(cobj,jobdb)]/basic=!NO_INHERIT

@lock/enter [u(cobj,jobdb)]=ISADMIN2/1
@lset [u(cobj,jobdb)]/enter=visual
@lset [u(cobj,jobdb)]/enter=!NO_INHERIT

&CMD`+JOB`PENNMUSH [u(cobj,jms)]=$^(?s)(?\:\+)?(job|jobs|myjobs|myjob)(?\:/(\S+)?)?(?\: +(.*?))?(?\:=(.*))?$:@attach %!/CMD`+JOB`MAIN
@set [u(cobj,jms)]/CMD`+JOB`PENNMUSH=regexp
&CMD`+JOB`RHOSTMUSH [u(cobj,jms)]=$^(?s)(?\:\+)?(job|jobs|myjobs|myjob)(?\:/(\\S+)?)?(?\: +(.*?))?(?\:=(.*))?$:@attach %!/CMD`+JOB`MAIN
@set [u(cobj,jms)]/CMD`+JOB`RHOSTMUSH=regexp
&CMD`+JOB`MAIN [u(cobj,jms)]=@attach %!/INC`GETSWITCH=%2;th u(setq,mode,switch(%1,myjob*,MYJOBS,job*,JOBS));@attach %!/INC`PLAYERID=u(objid,%#);@attach %!/INC`[u(strfirstof,%q<switch>,MAIN)]=trim(%3),trim(%4)
@set [u(cobj,jms)]/CMD`+JOB`[switch(v(game),PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&SYSTEM`NAME [u(cobj,jms)]=JOBS
&SWITCHES`PLAYER [u(cobj,jms)]=REPLY|OLD|APPROVE|DENY|CANCEL|REVIVE|COMMENT|DUE|CLAIM|UNCLAIM|ATTN|SCAN|NEXT|PENDING
&SWITCHES`ADMIN [u(cobj,jms)]=NEWCATEGORY|DELCATEGORY|RENCATEGORY|LOCKCATEGORY|UNLOCKCATEGORY|CATEGORY|CONFIG|DESC

&CMD`+REQUEST`PENNMUSH [u(cobj,jms)]=$^(?s)\+request(?\:/(\S+))?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+REQUEST`MAIN
@set [u(cobj,jms)]/CMD`+REQUEST`PENNMUSH=regexp
&CMD`+REQUEST`RHOSTMUSH [u(cobj,jms)]=$^(?s)\+request(?\:/(\\S+))?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+REQUEST`MAIN
@set [u(cobj,jms)]/CMD`+REQUEST`RHOSTMUSH=regexp
&CMD`+REQUEST`MAIN [u(cobj,jms)]=@attach %!/INC`PARTIAL=%1,u(setr,valcats,iter(u(FUN`VALIDCATS,%#,POST),name(%i0),%b,|)),|,Category,Category;@attach %!/INC`REQUEST=trim(%2),trim(%3),%q<category>,u(objid,%#)
@set [u(cobj,jms)]/CMD`+REQUEST`[switch(v(game),PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&INC`REQUEST [u(cobj,jms)]=th u(setq,subm,u(strfirstof,u(objid,%3),u(objid,%#)));@check strlen(%0)=@attach %!/INC`MSG=Available Job categories: [u(itemize,%q<valcats>,|,and,\,)],%q<subm>;@check strlen(%1)=@attach %!/INC`MSG=The Request text field is empty! What are you asking staff?,%q<subm>;@attach %!/INC`PLAYERID=%q<subm>;@select/inline t(%2)=1,{@attach %!/INC`FINDCAT=%2};@attach %!/INC`DOSQL=NEW`REQUEST,%q<pid>,%q<cat>,%0,%1,add(secs(),u(FUN`CONF,%q<cat>,DUE));th u(setr,jid,u(mysql,get`newjob,%q<pid>));@attach %!/INC`AMSGJOB=%q<jid>,{[u(FUN`JOBNAME,%q<jid>,%q<cat>)] has been created[if(%q<cat>,%bunder '%q<catname>')] by [u(FUN`MASKNAME,%q<cat>)].};@attach %!/INC`DOSQL=SET`CHECKDATE,%q<jid>,%q<pid>

&INC`PLAYERID [u(cobj,jms)]=@check u(objid,%0)=@attach %!/INC`MSG=ERROR: Invalid Objid!;@select/inline gt(u(setr,pid%1,u(mysql,get`playerid,%0)),0)=0,{@attach %!/INC`DOSQL=NEW`PLAYERID,%0,name(%0);@attach %!/INC`PLAYERID=%0,%1}

&Q`GET`PLAYERID [u(cobj,jms)]=SELECT player_id FROM $PLAYERS$ WHERE objid=?
&Q`NEW`PLAYERID [u(cobj,jms)]=INSERT INTO $PLAYERS$ (objid,player_name) VALUES (?,?)
&Q`NEW`REQUEST [u(cobj,jms)]=INSERT INTO $JOBS$ (player_id,job_objid,job_title,job_text,due_date,job_status,submit_date,job_activity,job_pactivity) VALUES (?,?,?,?,FROM_UNIXTIME('?'),'0',UTC_TIMESTAMP(),UTC_TIMESTAMP(),UTC_TIMESTAMP())
&Q`GET`NEWJOB [u(cobj,jms)]=SELECT max(job_id) FROM $JOBS$ WHERE player_id=?
&Q`SET`CHECKDATE [u(cobj,jms)]=INSERT INTO $CHECK$ (job_id,player_id,check_date) VALUES (?,?,UTC_TIMESTAMP()) ON DUPLICATE KEY UPDATE check_date=UTC_TIMESTAMP()

&INC`LOCKCATEGORY [u(cobj,jms)]=@attach %!/INC`LOCK;@check strlen(%1)=@attach %!/INC`MSG=ERROR: No lock string entered. See [u(pueblize,+help +key)] for more information.;@attach u(cobj,lms)/INC`DOLOCK=%q<cat>,switch(%q<lock>,post,basic,admin,enter),%1
&INC`UNLOCKCATEGORY [u(cobj,jms)]=@attach %!/INC`LOCK;@unlock/user:%q<lock> %q<cat>;@attach %!/INC`MSG=You release the %q<lock> lock on %q<catname>;@attach %!/INC`MSG`CHAN=Released the %q<lock> Lock on Job Category %q<catname>

&INC`LOCK [u(cobj,jms)]=@check u(iswizard,%#)=@attach %!/INC`MSG=ERROR: Permission Denied. This command is Wizard-only.;@attach %!/INC`FINDCAT=before(%0,/);@check strlen(after(%0,/))=@attach %!/INC`MSG=ERROR: Lock Type field empty.;@attach %!/INC`PARTIAL=after(%0,/),POST|ADMIN,|,lock,lock

&INC`DESC [u(cobj,jms)]=@check u(iswizard,%#)=@attach %!/INC`MSG=ERROR: Permission Denied. This command is Wizard-only.;@attach %!/INC`FINDCAT=%0;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Description field empty.;@describe %q<cat>=%1;@attach %!/INC`MSG=Description for %q<catname> set!

&INC`CONFIG [u(cobj,jms)]=@check u(iswizard,%#)=@attach %!/INC`MSG=ERROR: Permission Denied. This command is Wizard-only.;@attach %!/INC`FINDCAT=before(%0,/);@check strlen(after(%0,/))=@attach %!/INC`MSG=ERROR: Config Type field empty.;@attach %!/INC`PARTIAL=after(%0,/),DUE|ANONYMOUS,|,type,type;@attach %!/INC`CONFIG`CHECK`%q<type>;&%q<type> %q<cat>=%q<entry>;@attach %!/INC`MSG=You change Category %q<catname>'s %q<type> setting to: [u(strfirstof,%q<display>,%1)];@attach %!/INC`MSG`CHAN=Changed job Category %q<catname>'s %q<type> setting to: [u(strfirstof,%q<display>,%1)]

&INC`CONFIG`CHECK`DUE [u(cobj,jms)]=@check gt(u(setr,entry,stringsecs(%1)),0)=@attach %!/INC`MSG=ERROR: '%1' was not accepted by stringsecs().;th u(setq,display,u(etime,%q<entry>))
&INC`CONFIG`CHECK`ANONYMOUS [u(cobj,jms)]=@check match(0 1 2 3,%1)=@attach %!/INC`MSG=ERROR: The Anonymous setting must be 0, 1, 2 or 3.;th u(setq,entry,%1)

&FUN`CONF [u(cobj,jms)]=if(u(isobjid,%0),switch(%1,DUE,firstof(get(%0/DUE),stringsecs(7d)),ANONYMOUS,u(strfirstof,get(%0/ANONYMOUS),0)),switch(%1,DUE,stringsecs(7d),ANONYMOUS,0))

&INC`MSGJOB [u(cobj,jms)]=@attach %!/INC`MSG=%1,u(FUN`MSGLIST,%0,%2)
&INC`AMSGJOB [u(cobj,jms)]=@attach %!/INC`MSG=%1,u(FUN`AMSGLIST,%0,%2)

&FUN`MSGLIST [u(cobj,jms)]=setunion(u(FUN`AMSGLIST,%0,%1),u(mySQL,get`ownerobjid,%0))
&FUN`AMSGLIST [u(cobj,jms)]=setunion(setunion(u(objid,%#),u(mysql,get`claimobjids,%0)),filterbool(#lambda/u(FUN`PERMCHECK,%1,ADMIN,\%0),lwhoid()))
&FUN`MAILLIST [u(cobj,jms)]=setunion(setunion(u(objid,%#),u(mysql,get`claimobjids,%0)),u(%!/SQL,get`ownerobjid,%0))

&INC`MAILJOB [u(cobj,jms)]=@mail u(FUN`MAILLIST,%0,%2)=Job %0/%1

&INC`PERMCHECKCAT [u(cobj,jms)]=@check u(FUN`PERMCHECK,%2,%1,%#)=@attach %!/INC`MSG=You do not have %1 Permission for [name(%2)].

@@ %0 - category being checked. %1 - mode. %2 - checker.
&FUN`PERMCHECK [u(cobj,jms)]=if(isdbref(%0),switch(%1,ADMIN,elock(%0/enter,%2),POST,elock(%0,%2)),switch(%1,ADMIN,u(isadmin,%2),POST,1))

&Q`GET`CLAIMOBJIDS [u(cobj,jms)]=SELECT objid FROM $PLAYERS$ NATURAL LEFT JOIN $CLAIM$ WHERE $CLAIM$.job_id=?
&Q`GET`OWNEROBJID [u(cobj,jms)]=SELECT objid FROM $PLAYERS$ NATURAL LEFT JOIN $JOBS$ WHERE $JOBS$.job_id=?

&INC`NEWCATEGORY [u(cobj,jms)]=@check u(iswizard,%#)=@attach %!/INC`MSG=Permission Denied: Wizard only.;@attach %!/INC`CATNAMECHECK=%0;@attach %!/INC`CATEXIST=%0;@tel u(setr,cat,create(%0))=u(cobj,jobdb);@set %q<cat>=switch(v(game),PennMUSH,WIZARD SAFE,RhostMUSH,INHERIT SAFE);@parent %q<cat>=u(cobj,jobdb);@attach %!/INC`MSG=Category '%0' created!;@attach %!/INC`MSG`CHAN={Created a new Category: %0}

&INC`CATNAMECHECK [u(cobj,jms)]=@check strlen(%0)=@attach %!/INC`MSG=You must enter the new category name!;@check cand(valid(name,%0),eq(words(%0),1),lte(strlen(%0),8))=@attach %!/INC`MSG='%0' is not a valid category name. Categories must be valid object names\, contain no spaces\, and be 8 characters or less.

&INC`CATEXIST [u(cobj,jms)]=@stop or(isdbref(u(namegrab,u(FUN`LISTCATS),%0)),strmatch(%0,None))=@attach %!/INC`MSG=A Category by that name already exists!

&INC`FINDCAT [u(cobj,jms)]=@check strlen(%0)=@attach %!/INC`MSG=No Category Name entered!;@select/inline %0=None,{},{@check words(u(setr,cats,u(FUN`LISTCATS)))=@attach %!/INC`MSG=There are no Categories.;@check isdbref(u(setr,cat,u(objid,u(namegrab,%q<cats>,%0))))=@attach %!/INC`MSG=Category '%0' not found.;th u(setq,catname,name(%q<cat>))}

&FUN`LISTCATS [u(cobj,jms)]=iter(u(sortname,children(u(cobj,jobdb))),u(objid,%i0))

&FUN`VALIDCATS [u(cobj,jms)]=u(Filter,PERMCHECK,u(FUN`LISTCATS),%b,%b,%1,%0)
&FIL`PERMCHECK [u(cobj,jms)]=u(FUN`PERMCHECK,%0,%1,%2)

&INC`RENCATEGORY [u(cobj,jms)]=@check u(iswizard,%#)=@attach %!/INC`MSG=Permission Denied: Wizard only.;@attach %!/INC`FINDCAT=%0;@attach %!/INC`CATNAMECHECK=%1;@attach %!/INC`CATEXIST=%1

&INC`DELCATEGORY [u(cobj,jms)]=@check u(iswizard,%#)=@attach %!/INC`MSG=Permission Denied: Wizard only.;@attach %!/INC`FINDCAT=%0;@attach %!/INC`VERIFY={[ansi(hr,WARNING:)] This will delete Job Category '%q<catname>'. All jobs in that category will become categoryless\, though not deleted. Are you sure you want to do this? Enter the same command again within ten seconds to verify!},DELETE %q<cat>;@attach %!/INC`MSG=Category '%0' Deleted!;@attach %!/INC`REPORT={[ansi(h,%n)] just deleted Job Category '%q<catname>'!};@attach %!/DELETE=%q<cat>

&INC`MAIN [u(cobj,jms)]=@select/inline 1=isint(%0),{@attach %!/INC`DISPLAYJOB=%0},t(strlen(%0)),{@attach %!/INC`DISPLAYCAT=%0,%1},{@select/inline %q<mode>=MYJOBS,{@attach %!/INC`MYJOBS`LIST},{@attach %!/INC`CATLIST}}

&INC`CATLIST [u(cobj,jms)]=@pemit %#=u(HEADER,mudname() Jobs);@pemit %#=align(8 34 4 4 4 4 4 4 4,Name,Description,Pen,App,Dny,Cnc,Over,Due,Anon);@dolist/inline u(FUN`LISTCATS)={@pemit %#=u(FUN`CATEGORYLINE,##)};@pemit %#=u(FUN`CATEGORYLINE);@pemit %#=u(SUBHEADER)

&FUN`CATEGORYLINE [u(cobj,jms)]=align(8 34 4 4 4 4 4 4 4,if(strlen(%0),u(pueblize,name(%0),+[lcstr(%q<mode>)] [name(%0)]),u(pueblize,None,+jobs None)),if(strlen(%0),get(%0/describe),For all uncategorized jobs.),u(mysql,GET`STATUSCOUNT,0,%0),u(mysql,GET`STATUSCOUNT,1,%0),u(mysql,GET`STATUSCOUNT,2,%0),u(mysql,GET`STATUSCOUNT,3,%0),u(mysql,GET`OVERDUE,%0),u(strfirstof,u(etime,u(FUN`CONF,%0,DUE)),0),u(FUN`CONF,%0,ANONYMOUS))

&Q`GET`STATUSCOUNT [u(cobj,jms)]=SELECT count(job_id) FROM $JOBS$ where job_status=? AND job_objid=?
&Q`GET`OVERDUE [u(cobj,jms)]=SELECT count(job_id) FROM $JOBS$ WHERE job_status=0 AND job_objid=? AND due_date<NOW()

&INC`OLD [u(cobj,jms)]=th u(setq,old,OLD);@attach %!/INC`MAIN

&INC`DISPLAYCAT [u(cobj,jms)]=@switch/inline %0=None,{@check u(isadmin,%#)=@attach %!/INC`MSG=Permission denied.},{@attach %!/INC`FINDCAT=%0;@attach %!/INC`PERMCHECKCAT=%#,ADMIN,%q<cat>};th u(setq,total,u(mysql,GET`JOBLISTCATCOUNT%q<old>,%q<cat>));@switch/inline u(valnum,%1)=1,{th u(setq,page,bound(%1,1,u(setr,max,ceil(fdiv(%q<total>,30)))))},{th u(setq,page,1,max,ceil(fdiv(%q<total>,30)))};@pemit %#=u(HEADER,mudname() - [u(strfirstof,%q<catname>,Uncategorized)] Jobs);@pemit %#=align(2 >4 15 15 5 16 5 6,*,ID,Submitter,Title,Due,Claimed,Upd,Attn);@pemit %#=u(SEPARATOR);@dolist/inline revwords(u(mysql,GET`JOBLISTCAT%q<old>,%q<cat>,mul(30,sub(%q<page>,1))))={@pemit %#=u(FUN`LISTJOBSTAFF,##)};@pemit %#=u(SUBHEADER,if(gt(%q<page>,1),ansi(hg,u(pueblize,<,+job[if(strlen(%q<old>),/old)] [u(strfirstof,%q<catname>,None)]=[sub(%q<page>,1)])),ansi(hx,<))%BPage %q<page> of [bound(%q<max>,1)]%B[if(lt(%q<page>,%q<max>),ansi(hg,u(pueblize,>,+job[if(strlen(%q<old>),/old)] [u(strfirstof,%q<catname>,None)]=[add(%q<page>,1)])),ansi(hx,>))])

&INC`SCAN [u(cobj,jms)]=@check u(setr,cats,trim(u(FUN`VALIDCATS,%#,ADMIN)[if(u(FUN`PERMCHECK,None,Admin,%#),%b1)]))=@attach %!/INC`MSG=Permission denied.;@dolist/inline u(setr,maincount,u(filter,UNREADCAT,%q<cats>,%B,%B,%q<pid>))={th u(setq,had,1);@pemit %#=u(HEADER,mudname() - New [if(u(isobjid,switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),name(switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),Uncategorized)] Jobs);@pemit %#=align(2 >4 15 15 5 16 5 6,*,ID,Submitter,Title,Due,Claimed,Upd,Attn);@pemit %#=u(SEPARATOR);@dolist/inline u(mysql,GET`NEWJOBSCAT,%q<pid>,if(isint(switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),,switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),%q<pid>)={@pemit %#=u(FUN`LISTJOBSTAFF,switch(v(game),PennMUSH,%i0,RhostMUSH,%d0))};@select/inline #@=words(%q<maincount>),{@pemit %#=u(SUBHEADER,Showing 20 Per Category)}};@select/inline not(%q<had>)=1,{@attach %!/INC`MSG=There are no new jobs in the system!}

&FIL`UNREADCAT [u(cobj,jms)]=t(u(mysql,GET`NEWJOBSCATCOUNT,%1,if(isint(%0),,%0),%1))

&Q`GET`NEWJOBSCAT [u(cobj,jms)]=SELECT jobs.job_id FROM $JOBS$ as jobs LEFT JOIN $CHECK$ as readtime ON jobs.job_id=readtime.job_id AND readtime.player_id=? WHERE jobs.job_objid=? AND (readtime.check_date<=jobs.job_activity OR readtime.player_id IS NULL) order by jobs.job_id ASC LIMIT 20
&Q`GET`NEWJOBSCATCOUNT [u(cobj,jms)]=SELECT count(jobs.job_id) FROM $JOBS$ as jobs LEFT JOIN $CHECK$ as readtime ON jobs.job_id=readtime.job_id AND readtime.player_id=? WHERE jobs.job_objid=? AND (readtime.check_date<=jobs.job_activity OR readtime.player_id IS NULL) order by jobs.job_id

&INC`NEXT [u(cobj,jms)]=@check u(setr,cats,trim(u(FUN`VALIDCATS,%#,ADMIN)[if(u(FUN`PERMCHECK,None,Admin,%#),%b1)]))=@attach %!/INC`MSG=Permission denied.;@dolist/inline u(setr,maincount,u(filter,NEXTJOBS,%q<cats>,%B,%B,%q<pid>))={th u(setq,had,1);@pemit %#=u(HEADER,mudname() - New [if(u(isobjid,switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),name(switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),Uncategorized)] Jobs);@pemit %#=align(2 >4 15 15 5 16 5 6,*,ID,Submitter,Title,Due,Claimed,Upd,Attn);@pemit %#=u(SEPARATOR);@dolist/inline u(mysql,GET`NEXTJOBSCAT,%q<pid>,if(isint(switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),,switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),%q<pid>)={@attach %!/INC`DISPLAYJOB=switch(v(game),PennMUSH,%i0,RhostMUSH,%d0);@stop 1};@attach %!/INC`MSG=There are no unread jobs in the system!

&FIL`NEXTJOBS [u(cobj,jms)]=t(u(mysql,GET`NEXTJOBSCATCOUNT,%1,if(isint(%0),,%0),%1))

&Q`GET`NEXTJOBSCAT [u(cobj,jms)]=SELECT jobs.job_id FROM $JOBS$ as jobs LEFT JOIN $CHECK$ as readtime ON jobs.job_id=readtime.job_id AND readtime.player_id=? WHERE jobs.job_objid=? AND (readtime.check_date<=jobs.job_activity OR readtime.player_id IS NULL) AND NOT (jobs.job_status>0 AND jobs.close_date <= UTC_TIMESTAMP() - INTERVAL 14 DAY) order by jobs.job_id ASC LIMIT 1
&Q`GET`NEXTJOBSCATCOUNT [u(cobj,jms)]=SELECT count(jobs.job_id) FROM $JOBS$ as jobs LEFT JOIN $CHECK$ as readtime ON jobs.job_id=readtime.job_id AND readtime.player_id=? WHERE jobs.job_objid=? AND (readtime.check_date<=jobs.job_activity OR readtime.player_id IS NULL) AND NOT (jobs.job_status>0 AND jobs.close_date <= UTC_TIMESTAMP() - INTERVAL 14 DAY) order by jobs.job_id

&INC`PENDING [u(cobj,jms)]=@check u(setr,cats,trim(u(FUN`VALIDCATS,%#,ADMIN)[if(u(FUN`PERMCHECK,None,Admin,%#),%b1)]))=@attach %!/INC`MSG=Permission denied.;@dolist/inline u(setr,maincount,u(filter,PENDINGCOUNT,%q<cats>,%b,%B,%q<pid>))={th u(setq,had,1);@pemit %#=u(HEADER,mudname() - New [if(u(isobjid,switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),name(switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),Uncategorized)] Jobs);@pemit %#=align(2 >4 15 15 5 16 5 6,*,ID,Submitter,Title,Due,Claimed,Upd,Attn);@pemit %#=u(SEPARATOR);@dolist/inline u(mysql,GET`PENJOBSCAT,%q<pid>,if(isint(switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),,switch(v(game),PennMUSH,%i0,RhostMUSH,%d0)),%q<pid>)={@pemit %#=u(FUN`LISTJOBSTAFF,switch(v(game),PennMUSH,%i0,RhostMUSH,%d0))};@select/inline #@=1,{@pemit %#=u(SUBHEADER,Showing 20 Per Category)}};@select/inline not(%q<had>)=1,{@attach %!/INC`MSG=There are no new jobs in the system!}

&FIL`PENDINGCOUNT [u(cobj,jms)]=t(u(mysql,GET`PENJOBSCATCOUNT,%q<pid>,if(isint(\%0),,\%0),%q<pid>))

&Q`GET`PENJOBSCAT [u(cobj,jms)]=SELECT jobs.job_id FROM $JOBS$ as jobs LEFT JOIN $CHECK$ as readtime ON jobs.job_id=readtime.job_id AND readtime.player_id=? WHERE jobs.job_objid=? AND jobs.job_status=0 order by jobs.job_id ASC LIMIT 20
&Q`GET`PENJOBSCATCOUNT [u(cobj,jms)]=SELECT count(jobs.job_id) FROM $JOBS$ as jobs LEFT JOIN $CHECK$ as readtime ON jobs.job_id=readtime.job_id AND readtime.player_id=? WHERE jobs.job_objid=? AND jobs.job_status=0 order by jobs.job_id

&INC`MYJOBS`LIST [u(cobj,jms)]=th set(valcats,u(FUN`VALIDCATS,%#,ADMIN));th u(setq,total,u(mysql,GET`MYJOBLISTCOUNT%q<old>,%q<pid>,%q<pid>));@select/inline u(valnum,%1)=1,{th u(setq,page,bound(%1,1,u(setr,max,ceil(fdiv(%q<total>,30)))))},{th u(setq,page,1,max,ceil(fdiv(%q<total>,30)))};@pemit %#=u(HEADER,mudname() - Your Jobs);@pemit %#=align(2 >4 8 15 15 5 9 5 6,*,ID,Category,Submitter,Title,Due,Claimed,Upd,Attn);@pemit %#=u(SEPARATOR);@dolist/inline revwords(u(mysql,GET`MYJOBLIST%q<old>,%q<pid>,%q<pid>,mul(30,sub(%q<page>,1))))={@pemit %#=u(FUN`MYLIST,##)};@pemit %#=u(SUBHEADER,if(gt(%q<page>,1),ansi(hg,u(pueblize,<,+myjob[if(strlen(%q<old>),/old)] =[sub(%q<page>,1)])),ansi(hx,<))%BPage %q<page> of [bound(%q<max>,1)]%B[if(lt(%q<page>,%q<max>),ansi(hg,u(pueblize,>,+myjob[if(strlen(%q<old>),/old)] =[add(%q<page>,1)])),ansi(hx,>))])

&Q`GET`MYJOBLISTCOUNT [u(cobj,jms)]=SELECT count(DISTINCT $JOBS$.job_id) FROM $JOBS$ LEFT JOIN $CLAIM$ ON $JOBS$.job_id=$CLAIM$.job_id WHERE (job_status=0 OR close_date > NOW() - INTERVAL 1 WEEK) AND ($JOBS$.player_id=? OR $CLAIM$.player_id=?)
&Q`GET`MYJOBLISTCOUNTOLD [u(cobj,jms)]=SELECT count(DISTINCT $JOBS$.job_id) FROM $JOBS$ LEFT JOIN $CLAIM$ ON $JOBS$.job_id=$CLAIM$.job_id WHERE job_status>0 AND ($JOBS$.player_id=? OR $CLAIM$.player_id=?)
&Q`GET`MYJOBLIST [u(cobj,jms)]=SELECT DISTINCT $JOBS$.job_id FROM $JOBS$ LEFT JOIN $CLAIM$ ON $JOBS$.job_id=$CLAIM$.job_id WHERE (job_status=0 OR close_date > NOW() - INTERVAL 1 WEEK) AND ($JOBS$.player_id=? OR $CLAIM$.player_id=?) ORDER BY $JOBS$.job_id DESC LIMIT 30 OFFSET ?
&Q`GET`MYJOBLISTOLD [u(cobj,jms)]=SELECT DISTINCT $JOBS$.job_id FROM $JOBS$ LEFT JOIN $CLAIM$ ON $JOBS$.job_id=$CLAIM$.job_id WHERE job_status>0 AND ($JOBS$.player_id=? OR $CLAIM$.player_id=?) ORDER BY $JOBS$.job_id DESC LIMIT 30 OFFSET ?

&FUN`LISTJOBSTAFF [u(cobj,jms)]=align(2 >4 15 15 5 16 5 6,u(strfirstof,u(FUN`LIST`UNREAD,%0),%b)[u(FUN`LIST`STATUS,%0)],u(pueblize,%0,+job %0),u(FUN`LIST`OWNERNAME,%0),u(FUN`LIST`JOBTITLE,%0),u(FUN`LIST`JOBDUE,%0),u(strfirstof,u(FUN`LIST`CLAIMERS,%0),---),u(FUN`LIST`JOBACTIVITY,%0),u(FUN`LIST`JOBATTN,%0))
&FUN`MYLIST [u(cobj,jms)]=align(2 >4 8 15 15 5 9 5 6,u(strfirstof,u(FUN`LIST`UNREAD,%0),%b)[u(FUN`LIST`STATUS,%0)],u(pueblize,%0,+myjob %0),u(FUN`LIST`CATEGORY,%0),u(FUN`LIST`OWNERNAME,%0),u(FUN`LIST`JOBTITLE,%0),u(FUN`LIST`JOBDUE,%0),u(strfirstof,u(FUN`LIST`CLAIMERS2,%0),---),u(FUN`LIST`JOBACTIVITY,%0),u(FUN`LIST`JOBATTN,%0))

&FUN`LIST`UNREAD [u(cobj,jms)]=if(gt(max(u(mysql,GET`LASTACTIVITY,%0),if(u(isadmin,%#),u(mysql,GET`LASTPACTIVITY,%0))),u(mysql,GET`LASTCHECKDATE,%0,%q<pid>)),ansi(hr,*))

&Q`GET`LASTACTIVITY [u(cobj,jms)]=SELECT UNIX_TIMESTAMP(job_activity) FROM $JOBS$ WHERE job_id=?
&Q`GET`LASTPACTIVITY [u(cobj,jms)]=SELECT UNIX_TIMESTAMP(job_pactivity) FROM $JOBS$ WHERE job_id=?
&Q`GET`LASTCHECKDATE [u(cobj,jms)]=SELECT UNIX_TIMESTAMP(check_date) FROM $CHECK$ WHERE job_id=? AND player_id=?

&FUN`LIST`CATEGORY [u(cobj,jms)]=if(u(isobjid,u(setr,catobj,u(mysql,GET`JOBCAT,%0))),name(%q<catobj>),None)

&FUN`LIST`STATUS [u(cobj,jms)]=switch(u(mysql,GET`JOBSTATUS,%0),0,P,1,A,2,D,3,C)
&FUN`LIST`STATUS2 [u(cobj,jms)]=switch(u(mysql,GET`JOBSTATUS,%0),0,Pending,1,Approved,2,Denied,3,Canceled)
&Q`GET`JOBSTATUS [u(cobj,jms)]=SELECT job_status FROM $JOBS$ WHERE job_id=?

&FUN`LIST`CLAIMERS [u(cobj,jms)]=if(cand(gte(u(FUN`CONF,u(mysql,GET`JOBCAT,%0),ANONYMOUS),2),not(u(FUN`PERMCHECK,u(mysql,GET`JOBCAT,%0),ADMIN,%#))),Anonymous,u(itemize,u(mysql2,GET`CLAIMNAMES,%0),|,and,\,))
&FUN`LIST`CLAIMERS2 [u(cobj,jms)]=if(cand(gte(u(FUN`CONF,u(mysql,GET`JOBCAT,%0),ANONYMOUS),2),not(u(FUN`PERMCHECK,u(mysql,GET`JOBCAT,%0),ADMIN,%#))),Anonymous,iter(u(mysql2,GET`CLAIMNAMES,%0),%i0,|,%R))

&Q`GET`CLAIMNAMES [u(cobj,jms)]=SELECT player_name FROM $PLAYERS$ NATURAL LEFT JOIN $CLAIM$ WHERE $CLAIM$.job_id=?

&JOBDATE [u(cobj,jms)]=switch(v(game),PennMUSH,timefmt($m/$d,%0,u(gettz,%#)),timefmt($M/$D,%0,u(gettz,%#)))

&FUN`LIST`JOBACTIVITY [u(cobj,jms)]=u(jobdate,max(u(mysql,GET`LASTPACTIVITY,%0),if(u(isadmin,%#),u(mysql,GET`LASTACTIVITY,%0))))

&FUN`LIST`OWNERNAME [u(cobj,jms)]=if(strmatch(u(mysql,GET`OWNEROBJID,%0),u(objid,%#)),u(mysql,GET`OWNERNAME,%0),switch(u(FUN`CONF,u(mysql,GET`JOBCAT,%0),ANONYMOUS),0,u(mysql,GET`OWNERNAME,%0),1,Anonymous,3,Anonymous,u(mysql,GET`OWNERNAME,%0)))

&Q`GET`OWNEROBJID [u(cobj,jms)]=SELECT objid FROM $PLAYERS$ NATURAL JOIN $JOBS$ WHERE job_id=?
&Q`GET`OWNERNAME [u(cobj,jms)]=SELECT player_name FROM $PLAYERS$ NATURAL JOIN $JOBS$ WHERE job_id=?

&FUN`LIST`JOBTITLE [u(cobj,jms)]=u(mysql,GET`JOBTITLE,%0)
&Q`GET`JOBTITLE [u(cobj,jms)]=SELECT job_title FROM $JOBS$ WHERE job_id=?

&FUN`LIST`JOBDUE [u(cobj,jms)]=if(u(setr,due,u(mysql,GET`JOBDUEDATE,%0)),switch(%q<due>,<[secs()],ansi(if(u(mysql,GET`JOBSTATUS,%0),n,hr),u(jobdate,%q<due>)),u(jobdate,%q<due>)),---)
&FUN`LIST`JOBDUE2 [u(cobj,jms)]=if(u(setr,due,u(mysql,GET`JOBDUEDATE,%0)),switch(%q<due>,<[secs()],ansi(if(u(mysql,GET`JOBSTATUS,%0),n,hr),u(jobdate2,%q<due>)),u(jobdate2,%q<due>)),---)
&Q`GET`JOBDUEDATE [u(cobj,jms)]=SELECT UNIX_TIMESTAMP(due_date) FROM $JOBS$ WHERE job_id=?

&JOBDATE2 [u(cobj,jms)]=switch(v(game),PennMUSH,timefmt($x,%0,u(gettz,%#)),timefmt($M/$D/$Y,%0,u(gettz,%#)))

&FUN`LIST`JOBATTN [u(cobj,jms)]=if(u(mysql,GET`JOBATTN,%0),Player,Staff)
&Q`GET`JOBATTN [u(cobj,jms)]=SELECT job_attn FROM $JOBS$ WHERE job_id=?

&Q`GET`JOBLISTCAT [u(cobj,jms)]=SELECT job_id from $JOBS$ WHERE job_objid=? AND (job_status=0 OR close_date > NOW() - INTERVAL 1 WEEK) ORDER BY job_id DESC LIMIT 30 OFFSET ?
&Q`GET`JOBLISTCATCOUNT [u(cobj,jms)]=SELECT count(job_id) from $JOBS$ WHERE job_objid=? AND (job_status=0 OR close_date > NOW() - INTERVAL 1 WEEK)

&Q`GET`JOBLISTCATOLD [u(cobj,jms)]=SELECT job_id from $JOBS$ WHERE job_objid=? AND job_status>0 ORDER BY job_id ASC LIMIT 30 OFFSET ?
&Q`GET`JOBLISTCATCOUNTOLD [u(cobj,jms)]=SELECT count(job_id) from $JOBS$ WHERE job_objid=? AND job_status>0

&FUN`LIST`SUBMIT2 [u(cobj,jms)]=u(mysql,GET`JOBSUBMITDATE,%0)
&Q`GET`JOBSUBMITDATE [u(cobj,jms)]=SELECT UNIX_TIMESTAMP(submit_date) FROM $JOBS$ WHERE job_id=?

&FUN`LIST`TEXT [u(cobj,jms)]=u(mysql,GET`JOBTEXT,%0)
&Q`GET`JOBTEXT [u(cobj,jms)]=SELECT job_text FROM $JOBS$ WHERE job_id=?

&FUN`MASKNAME [u(cobj,jms)]=switch(u(FUN`CONF,%0,ANONYMOUS),0,%n,1,if(strmatch(u(objid,%#),u(mysql,GET`OWNEROBJID,%q<jid>)),Anonymous,%n),2,if(u(isadmin,%#),Anonymous,%n),3,Anonymous)

&INC`DISPLAYJOB [u(cobj,jms)]=@check u(setr,jid,u(mysql,GET`JOBID,%0))=@attach %!/INC`MSG=ERROR: Job %0 not found.;@check or(strmatch(u(setr,ownobj,u(mysql,GET`OWNEROBJID,%q<jid>)),u(objid,%#)),u(setr,catadmview,or(match(u(setr,claimobj,u(mysql,GET`CLAIMOBJIDS,%q<jid>)),u(objid,%#)),u(FUN`PERMCHECK,u(setr,cat,u(mysql,GET`JOBCAT,%q<jid>)),ADMIN,%#))))=@attach %!/INC`MSG=ERROR: Permission Denied.;@pemit %#=u(HEADER,mudname() Jobs - Job %q<jid>);@pemit %#=align(36 36,ljust(rjust(ansi(h,Category:),10),10) [u(FUN`LIST`CATEGORY,%q<jid>)],ljust(rjust(ansi(h,Due:),10),10) [u(strfirstof,u(FUN`LIST`JOBDUE2,%q<jid>),---)]);@pemit %#=align(36 36,ljust(rjust(ansi(h,Title:),10),10) [u(FUN`LIST`JOBTITLE,%q<jid>)],ljust(rjust(ansi(h,Status:),10),10) [u(FUN`LIST`STATUS2,%q<jid>)]);@pemit %#=u(SEPARATOR);@pemit %#=ansi(h,u(FUN`LIST`OWNERNAME,%q<jid>) Opened on [u(fancytime,u(FUN`LIST`SUBMIT2,%q<jid>),%#)] with:);@pemit %#=u(FUN`LIST`TEXT,%q<jid>);th u(setq,anon,u(FUN`CONF,%q<cat>,ANONYMOUS));@select/inline v(game)=PennMUSH,{th mapsql(FUN`COMMENTS,u(FUN`SQLFORMAT,GET`COMMENTS[if(cor(u(FUN`PERMCHECK,%q<cat>,ADMIN,%#),match(u(mysql,GET`CLAIMOBJIDS,%q<jid>),u(objid,%#))),ALL)],%q<jid>))},RhostMUSH,{th null(iter(u(mysql,GET`COMMENTS[if(cor(u(FUN`PERMCHECK,%q<cat>,ADMIN,%#),match(u(mysql,GET`CLAIMOBJIDS,%q<jid>),u(objid,%#))),ALL)]`ID,%q<jid>),u(setq,cdata,u(mysql2,GET`COMMDETAILS,%i0))[u(FUN`COMMENTS,,elements(%q<cdata>,1,^),elements(%q<cdata>,2,^),elements(%q<cdata>,3,^),u(mysql,GET`COMMTEXT,%i0),elements(%q<cdata>,4,^))]))};@pemit %#=u(HEADER);@attach %!/INC`DOSQL=SET`CHECKDATE,%q<jid>,%q<pid>

&Q`SET`CHECKDATE [u(cobj,jms)]=INSERT INTO $CHECK$ (job_id,player_id,check_date) VALUES (?,?,UTC_TIMESTAMP()) ON DUPLICATE KEY UPDATE check_date=UTC_TIMESTAMP()

&Q`GET`COMMENTS [u(cobj,jms)]=SELECT player_name,UNIX_TIMESTAMP(comment_date),comment_type,comment_text,objid FROM $COMMENTS$ NATURAL LEFT JOIN $PLAYERS$ WHERE job_id=? AND comment_type=0 ORDER BY comment_id
&Q`GET`COMMENTSALL [u(cobj,jms)]=SELECT player_name,UNIX_TIMESTAMP(comment_date),comment_type,comment_text,objid FROM $COMMENTS$ NATURAL LEFT JOIN $PLAYERS$ WHERE job_id=? ORDER BY comment_id
&Q`GET`COMMDETAILS [u(cobj,jms)]=SELECT player_name,UNIX_TIMESTAMP(comment_date),comment_type,objid FROM $COMMENTS$ NATURAL LEFT JOIN $PLAYERS$ WHERE comment_id=?
&Q`GET`COMMTEXT [u(cobj,jms)]=SELECT comment_text FROM $COMMENTS$ NATURAL LEFT JOIN $PLAYERS$ WHERE comment_id=?

&Q`GET`COMMENTS`ID [u(cobj,jms)]=SELECT comment_id FROM $COMMENTS$ NATURAL LEFT JOIN $PLAYERS$ WHERE job_id=? AND comment_type=0 ORDER BY comment_id
&Q`GET`COMMENTSALL`ID [u(cobj,jms)]=SELECT comment_id FROM $COMMENTS$ NATURAL LEFT JOIN $PLAYERS$ WHERE job_id=? ORDER BY comment_id

&FUN`COMMENTS [u(cobj,jms)]=u(setq,catadmcomm,cor(u(FUN`PERMCHECK,%q<cat>,ADMIN,%5),match(%q<claimobj>,%5)))[pemit(%#,u(SEPARATOR)%R[ansi(h,if(strmatch(%5,u(objid,%#)),%1,switch(%q<anon>,0,%1,1,if(strmatch(%5,%q<ownobj>),Anonymous,%1),2,if(cand(%q<catadmcomm>,not(%q<catadmview>)),Anonymous,%1),3,if(cor(strmatch(%5,%q<ownobj>),cand(%q<catadmcomm>,not(%q<catadmview>))),Anonymous,%1))))] [if(%3,ansi(hr,COMMENTED),ansi(h,Replied))] on [u(fancytime,%2,%#)] with:)][pemit(%#,%4)]

&INC`CLAIM [u(cobj,jms)]=@attach %!/INC`JOBCHECK=%0;@attach %!/INC`PERMCHECKCAT=%#,ADMIN,u(setr,cat,u(mysql,GET`JOBCAT,%q<jid>));@check eq(u(mysql,GET`JOBSTATUS,%q<jid>),0)=@attach %!/INC`MSG=The job is already finished.;@attach %!/INC`CHECKPC=u(strfirstof,%1,%#),1;@attach %!/INC`PLAYERID=%q<t1objid>,1;@stop match(u(mysql,GET`HANDLERIDS,%q<jid>),%q<pid1>)=@attach %!/INC`MSG=ERROR: %q<t1name> is already handling Job %q<jid>.;@attach %!/INC`DOSQL=ADD`CLAIM,%q<jid>,%q<pid1>,%q<pid>;@attach %!/INC`AMSGJOB=%q<jid>,{[u(FUN`JOBNAME,%q<jid>,%q<cat>)] has been assigned to: %q<t1name>, by [u(FUN`MASKNAME,%q<cat>)].},%q<cat>;@attach %!/INC`UPDJOB=1,%q<jid>;@attach %!/INC`DOSQL=SET`CHECKDATE,%q<jid>,%q<pid>

&INC`UNCLAIM [u(cobj,jms)]=@attach %!/INC`JOBCHECK=%0;@attach %!/INC`PERMCHECKCAT=%#,ADMIN,u(setr,cat,u(mysql,GET`JOBCAT,%q<jid>));@check eq(u(mysql,GET`JOBSTATUS,%q<jid>),0)=@attach %!/INC`MSG=The job is already finished.;@attach %!/INC`CHECKPC=u(strfirstof,%1,%#),1;@attach %!/INC`PLAYERID=%q<t1objid>,1;@check match(u(mysql,GET`HANDLERIDS,%q<jid>),%q<pid1>)=@attach %!/INC`MSG=ERROR: %q<t1name> is not handling Job %q<jid>.;@attach %!/INC`DOSQL=DEL`CLAIM,%q<jid>,%q<pid1>;@attach %!/INC`AMSGJOB=%q<jid>,{%q<t1name> is no longer handling [u(FUN`JOBNAME,%q<jid>,%q<cat>)], by [u(FUN`MASKNAME,%q<cat>)].},%q<cat>;@attach %!/INC`UPDJOB=1,%q<jid>;@attach %!/INC`DOSQL=SET`CHECKDATE,%q<jid>,%q<pid>

&INC`JOBCHECK [u(cobj,jms)]=@check u(valnum,%0)=@attach %!/INC`MSG=ERROR: Jobs must be addressed by IDs.;@check u(setr,jid,u(mysql,GET`JOBID,%0))=@attach %!/INC`MSG=ERROR: Job %0 not found.

&Q`ADD`CLAIM [u(cobj,jms)]=INSERT INTO $CLAIM$ (job_id,player_id,claim_by,claim_date) VALUES (?,?,?,UTC_TIMESTAMP()) ON DUPLICATE KEY UPDATE claim_date=UTC_TIMESTAMP()
&Q`DEL`CLAIM [u(cobj,jms)]=DELETE FROM $CLAIM$ WHERE job_id=? AND player_id=?
&Q`GET`HANDLERIDS [u(cobj,jms)]=SELECT DISTINCT player_id from $CLAIM$ WHERE job_id=?
&Q`GET`JOBID [u(cobj,jms)]=SELECT job_id FROM $JOBS$ WHERE job_id=?
&Q`GET`JOBCAT [u(cobj,jms)]=SELECT job_objid FROM $JOBS$ WHERE job_id=?

&INC`CATEGORY [u(cobj,jms)]=@attach %!/INC`JOBCHECK;@check u(isadmin,%#)=@attach %!/INC`MSG=Permission denied.;th u(setq,oldcat,u(mysql,GET`JOBCAT,%q<jid>));@stop u(FUN`CONF,%q<oldcat>,ANONYMOUS)=@attach %!/INC`MSG=ERROR: Anonymous Jobs cannot be relocated.;@attach %!/INC`FINDCAT=%1;@attach %!/INC`PERMCHECKCAT=%#,ADMIN,%q<cat>;@attach %!/INC`AMSGJOB=%q<jid>,{[u(FUN`JOBNAME,%q<jid>,%q<oldcat>)]'s Category was changed to [u(strfirstof,%q<catname>,Uncategorized)], by [u(FUN`MASKNAME,%q<cat>)]},%q<cat>;@attach %!/INC`DOSQL=SET`JOBCAT,%q<cat>,%q<jid>
&Q`SET`JOBCAT [u(cobj,jms)]=UPDATE $JOBS$ SET job_objid=? WHERE job_id=?

&INC`REPLY [u(cobj,jms)]=@check u(setr,jid,u(mysql,GET`JOBID,%0))=@attach %!/INC`MSG=ERROR: Job %0 not found.;@check or(strmatch(u(mysql,GET`OWNEROBJID,%q<jid>),u(objid,%#)),match(u(mysql,GET`CLAIMOBJIDS,%q<jid>),u(objid,%#)),u(FUN`PERMCHECK,u(setr,cat,u(mysql,GET`JOBCAT,%q<jid>)),ADMIN,%#))=@attach %!/INC`MSG=ERROR: Permission Denied.;@check eq(u(mysql,GET`JOBSTATUS,%q<jid>),0)=@attach %!/INC`MSG=The job is already finished.;@check strlen(%1)=@attach %!/INC`MSG=What will you say?;@attach %!/INC`DOSQL=ADD`COMMENT,%q<jid>,%q<pid>,0,%1;@attach %!/INC`MSGJOB=%q<jid>,{[u(FUN`MASKNAME,%q<cat>)] sent a reply in for [u(FUN`JOBNAME,%q<jid>,%q<cat>)].};@attach %!/INC`MAILJOB=%q<jid>,{[u(FUN`MASKNAME,%q<cat>)] sent a reply in for [u(FUN`JOBNAME,%q<jid>,%q<cat>)].%R%RMessage:%R%1};@attach %!/INC`UPDJOB=0,%q<jid>;@attach %!/INC`DOSQL=SET`JOBATTN,not(strmatch(u(mysql,GET`OWNEROBJID,%q<jid>),u(objid,%#))),%q<jid>;@attach %!/INC`DOSQL=SET`CHECKDATE,%q<jid>,%q<pid>

&INC`COMMENT [u(cobj,jms)]=@attach %!/INC`JOBCHECK=%0;@attach %!/INC`PERMCHECKCAT=%#,ADMIN,u(setr,cat,u(mysql,GET`JOBCAT,%q<jid>));@check eq(u(mysql,GET`JOBSTATUS,%q<jid>),0)=@attach %!/INC`MSG=The job is already finished.;@check strlen(%1)=@attach %!/INC`MSG=What will you say?;@attach %!/INC`DOSQL=ADD`COMMENT,%q<jid>,%q<pid>,1,%1;@attach %!/INC`AMSGJOB=%q<jid>,{[u(FUN`MASKNAME,%q<cat>)] added a STAFF COMMENT to [u(FUN`JOBNAME,%q<jid>,%q<cat>)].};@attach %!/INC`UPDJOB=1,%q<jid>;@attach %!/INC`DOSQL=SET`CHECKDATE,%q<jid>,%q<pid>

&INC`ATTN [u(cobj,jms)]=@attach %!/INC`JOBCHECK=%0;@attach %!/INC`PERMCHECKCAT=%#,ADMIN,u(setr,cat,u(mysql,GET`JOBCAT,%q<jid>));@check eq(u(mysql,GET`JOBSTATUS,%q<jid>),0)=@attach %!/INC`MSG=The job is already finished.;@attach %!/INC`DOSQL=SET`JOBATTN,u(setr,attn,not(u(mysql,GET`JOBATTN,%q<jid>))),%q<jid>;@attach %!/INC`AMSGJOB=%q<jid>,{[u(FUN`JOBNAME,%q<jid>,%q<cat>)] was switched to ATTN: [if(%q<attn>,Player,Staff)], by [u(FUN`MASKNAME,%q<cat>)]};@attach %!/INC`UPDJOB=1,%q<jid>

&FUN`JOBNAME [u(cobj,jms)]=u(pueblize,if(u(isobjid,%1),ucstr(name(%1)),Uncategorized) Job %0 '[u(FUN`LIST`JOBTITLE,%0)]',+job %0)

&INC`UPDJOB [u(cobj,jms)]=@attach %!/INC`DOSQL=SET`JOBACTIVITY%0,%q<jid>
&Q`SET`JOBACTIVITY0 [u(cobj,jms)]=UPDATE $JOBS$ SET job_pactivity=UTC_TIMESTAMP(),job_activity=UTC_TIMESTAMP() WHERE job_id=?
&Q`SET`JOBACTIVITY1 [u(cobj,jms)]=UPDATE $JOBS$ SET job_pactivity=UTC_TIMESTAMP() WHERE job_id=?

&Q`ADD`COMMENT [u(cobj,jms)]=INSERT INTO $COMMENTS$ (job_id,player_id,comment_type,comment_text,comment_date) VALUES (?,?,?,?,UTC_TIMESTAMP())

&INC`APPROVE [u(cobj,jms)]=@attach %!/INC`FINISH;@attach %!/INC`DOFINISH=%0,%1,Approved,1
&INC`DENY [u(cobj,jms)]=@attach %!/INC`FINISH;@attach %!/INC`DOFINISH=%0,%1,Denied,2
&INC`CANCEL [u(cobj,jms)]=@attach %!/INC`FINISH=%0,%1,Canceled,3;@attach %!/INC`DOFINISH=%0,%1,Canceled,3
&INC`REVIVE [u(cobj,jms)]=@attach %!/INC`FINISH=%0,%1,1;@attach %!/INC`DOFINISH=%0,%1,Revived,0

&INC`FINISH [u(cobj,jms)]=@check u(setr,jid,u(mysql,GET`JOBID,%0))=@attach %!/INC`MSG=ERROR: Job %0 not found.;@check or(match(u(mysql,GET`CLAIMOBJIDS,%q<jid>),u(objid,%#)),u(FUN`PERMCHECK,u(setr,cat,u(mysql,GET`JOBCAT,%q<jid>)),ADMIN,%#),if(eq(%3,3),strmatch(u(objid,%#),u(mysql,GET`OWNEROBJID,%q<jid>))))=@attach %!/INC`MSG=ERROR: Permission Denied.;@check cor(eq(u(mysql,GET`JOBSTATUS,%q<jid>),0),%2)=@attach %!/INC`MSG=That job is already finished.;@check strlen(%1)=@attach %!/INC`MSG=What will you say?

&INC`DOFINISH [u(cobj,jms)]=@attach %!/INC`DOSQL=SET`JOBSTATUS,%3,%q<jid>;@attach %!/INC`DOSQL=ADD`COMMENT,%q<jid>,%q<pid>,0,{The Job was %2.%R%R%1};@attach %!/INC`MSGJOB=%q<jid>,{[u(FUN`JOBNAME,%q<jid>,%q<cat>)] was %2 by [u(FUN`MASKNAME,%q<cat>)]!};@attach %!/INC`MAILJOB=%q<jid>,{[u(FUN`JOBNAME,%q<jid>,%q<cat>)] was %2 by [u(FUN`MASKNAME,%q<cat>)]!%R%RMessage:%R%1};@attach %!/INC`DOSQL=SET`JOBATTN,1,%q<jid>;@trigger/spoof %q<cat>/%2=%q<jid>;@attach %!/INC`DOSQL=SET`CHECKDATE,%q<jid>,%q<pid>

&Q`SET`JOBATTN [u(cobj,jms)]=UPDATE $JOBS$ SET job_attn=? WHERE job_id=?

&Q`SET`JOBSTATUS [u(cobj,jms)]=UPDATE $JOBS$ SET job_status=?,close_date=UTC_TIMESTAMP(),job_activity=UTC_TIMESTAMP(),job_pactivity=UTC_TIMESTAMP() WHERE job_id=?

&INC`DUE [u(cobj,jms)]=@check u(setr,jid,u(mysql,GET`JOBID,%0))=@attach %!/INC`MSG=ERROR: Job %0 not found.;@check u(FUN`PERMCHECK,u(setr,cat,u(mysql,GET`JOBCAT,%q<jid>)),ADMIN,%#)=@attach %!/INC`MSG=ERROR: Permission Denied.;@attach %!/INC`CHECKTIME=%1;@attach %!/INC`DOSQL=SET`JOBDUE,%q<time>,%q<jid>;@attach %!/INC`MSGJOB=%q<jid>,{[u(FUN`JOBNAME,%q<jid>,%q<cat>)] was rescheduled for [u(fancytime,%q<time>,UTC)] by [u(FUN`MASKNAME,%q<cat>)]!};@attach %!/INC`UPDJOB=1,%q<jid>;@attach %!/INC`DOSQL=SET`CHECKDATE,%q<jid>,%q<pid>

&Q`SET`JOBDUE [u(cobj,jms)]=UPDATE $JOBS$ SET due_date=FROM_UNIXTIME(?) WHERE job_id=?

&INC`CHECKTIME [u(cobj,jms)]=@check strlen(%0)=@attach %!/INC`MSG=You didn't enter a date!;@check gt(u(setr,time,convtime(%0,u(gettz,%#))),0)=@attach %!/INC`MSG=The entered date was not recognized. Did you typo? Dates should be in abbreviated 24-hour <month> <day> <hour>:<minute> format using YOUR timezone\, such as Jun 26 7:00 or Oct 31 13:00.;@select/inline t(%1)=0,{@check gt(%q<time>,secs())=@attach %!/INC`MSG=That would be in the past!}

&OBJECT`RENAME`CHARID [u(cobj,jms)]=@select/inline type(%0)=PLAYER,{@check u(setr,pid,u(mysql,get`playerid,%0));th u(mysql,rename`player,%1,%0)}

&Q`RENAME`PLAYER [u(cobj,jms)]=UPDATE $PLAYERS$ SET player_name=? WHERE objid=?


@@ INSTALL AND SQL CONFIG
&Q`INSTALL`PLAYERS [u(cobj,jms)]=CREATE TABLE IF NOT EXISTS $PLAYERS$ (player_id BIGINT(31) UNSIGNED NOT NULL AUTO_INCREMENT,objid VARCHAR(30) NOT NULL,player_name VARCHAR(60) NOT NULL DEFAULT 'Unset',PRIMARY KEY(player_id),UNIQUE KEY player_objid (objid)) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1

&Q`INSTALL`JOBS [u(cobj,jms)]=CREATE TABLE IF NOT EXISTS $JOBS$ (job_id BIGINT(31) UNSIGNED NOT NULL AUTO_INCREMENT,player_id BIGINT(31) UNSIGNED NOT NULL,job_objid VARCHAR(30),submit_date DATETIME,due_date DATETIME,close_date DATETIME,job_title varchar(40) NOT NULL,job_text text NOT NULL,job_status tinyint NOT NULL DEFAULT '0',job_attn BOOL NOT NULL DEFAULT FALSE,job_activity DATETIME,job_pactivity DATETIME,PRIMARY KEY(job_id),FOREIGN KEY(player_id) REFERENCES $PLAYERS$(player_id) ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1

&Q`INSTALL`CLAIM [u(cobj,jms)]=CREATE TABLE IF NOT EXISTS $CLAIM$ (claim_id BIGINT(31) UNSIGNED NOT NULL AUTO_INCREMENT,job_id BIGINT(31) UNSIGNED NOT NULL,player_id BIGINT(31) UNSIGNED NOT NULL,claim_date DATETIME,claim_by BIGINT(31) UNSIGNED NOT NULL,PRIMARY KEY(claim_id),FOREIGN KEY(job_id) REFERENCES $JOBS$(job_id) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY(player_id) REFERENCES $PLAYERS$(player_id) ON UPDATE CASCADE,FOREIGN KEY(claim_by) REFERENCES $PLAYERS$(player_id) ON UPDATE CASCADE,UNIQUE KEY player_claim (job_id,player_id)) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1

&Q`INSTALL`COMMENTS [u(cobj,jms)]=CREATE TABLE IF NOT EXISTS $COMMENTS$ (comment_id BIGINT(31) UNSIGNED NOT NULL AUTO_INCREMENT,job_id BIGINT(31) UNSIGNED NOT NULL,player_id BIGINT(31) UNSIGNED NOT NULL,comment_date DATETIME NOT NULL,comment_text text NOT NULL,comment_type TINYINT UNSIGNED NOT NULL DEFAULT '0',PRIMARY KEY(comment_id),FOREIGN KEY(job_id) REFERENCES $JOBS$(job_id) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY(player_id) REFERENCES $PLAYERS$(player_id) ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1

&Q`INSTALL`LOGS [u(cobj,jms)]=CREATE TABLE IF NOT EXISTS $LOGS$ (log_id BIGINT(31) UNSIGNED NOT NULL AUTO_INCREMENT,job_id BIGINT(31) UNSIGNED NOT NULL,player_id BIGINT(31) UNSIGNED NOT NULL,log_date DATETIME NOT NULL,log_text text NOT NULL,PRIMARY KEY(log_id),FOREIGN KEY(job_id) REFERENCES $JOBS$(job_id) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY(player_id) REFERENCES $PLAYERS$(player_id) ON UPDATE CASCADE) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1

&Q`INSTALL`CHECK [u(cobj,jms)]=CREATE TABLE IF NOT EXISTS $CHECK$ (check_id BIGINT(31) UNSIGNED NOT NULL AUTO_INCREMENT,job_id BIGINT(31) UNSIGNED NOT NULL,player_id BIGINT(31) UNSIGNED NOT NULL,check_date DATETIME,PRIMARY KEY(check_id),FOREIGN KEY(job_id) REFERENCES $JOBS$(job_id) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY(player_id) REFERENCES $PLAYERS$(player_id) ON UPDATE CASCADE,UNIQUE KEY player_check (player_id,job_id)) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1

&SQL`TABLES [u(cobj,jms)]=PLAYERS|JOBS|CLAIM|COMMENTS|LOGS|CHECK
&SQL`TABLE`PLAYERS [u(cobj,jms)]=jobsys_players
&SQL`TABLE`JOBS [u(cobj,jms)]=jobsys_jobs
&SQL`TABLE`CLAIM [u(cobj,jms)]=jobsys_claim
&SQL`TABLE`COMMENTS [u(cobj,jms)]=jobsys_comments
&SQL`TABLE`LOGS [u(cobj,jms)]=jobsys_logs
&SQL`TABLE`CHECK [u(cobj,jms)]=jobsys_check

@trigger [u(cobj,jms)]/TRG`INSTALL

&PLAYER`CONNECT`MYJOBS [u(cobj,jms)]=@check u(isadmin,%0);@wait 2=@force %0=+myjobs

+help/add +job=[u(cobj,jms)]/HLP`+JOB
+help/category +job=Communications
&HLP`+JOB [u(cobj,jms)]=+job is used to create 'trouble tickets,' requests to the Admin.%R[ansi(hc,Aliases:)] request%R%R[ansi(hc,Creating Jobs)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+request)] - Show all Job categories.%R[ansi(h,+request <title>=<text>)] - creates a new UNCATEGORIZED job.%R[ansi(h,+request/<category> <title>=<text>)] - Creates a new job in a specific category)]%R%R[ansi(hc,Tracking Jobs)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+myjobs)] - Display all pending jobs you've submitted or have been appointed to handle.%R[ansi(h,+myjobs/old)] - As above\, but shows only jobs that are finished.%R[ansi(h,+myjob <id>)] - Shows details about a job.%R[ansi(h,+myjob/reply <id>=<text>)] - Add a new message to your job.)]%R%R[ansi(hc,Handling Jobs)]%RThe following commands are for staff and priveleged players.%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+jobs)] - List all job categories and stats related to them.%R[ansi(h,+jobs <category>)] - List all pending jobs in a category.%R[ansi(h,+jobs/old <category>)] - Show all finished jobs in a category.%R\(use =<page> to show different pages\, such as +jobs/old xp=3 to view the third page.\)%R[ansi(h,+job <id>)] - Display a job's details.%R[ansi(h,+job/reply <id>=<text>)] - Reply to a job.%R[ansi(h,+job/comment <id>=<text>)] - Add notes to a job that only category handlers and staff can see.%R[ansi(h,+job/attn <id>)] - Change whether a job is marked as waiting for staff or the player.%R[ansi(h,+job/claim <id>)] - Claim a job. Many can claim the same job. Use [ansi(h,+job/claim <id>=<target>)] to add someone else.%R[ansi(h,+job/unclaim <id>)] - As /claim. Removes a handler.%R[ansi(h,+job/approve <id>=<text>)] - Closes a job and sends an approval message.%R[ansi(h,+job/deny <id>=<text>)] - As /approve.%R[ansi(h,+job/cancel <id>=<text>)] - As /approve.%R[ansi(h,+job/revive <id>=<text>)] - Restores a closed job to pending status.%R[ansi(h,+job/due <id>=<newdate>)] - Sets a new due date for a job. Can be a +1d or similar \(adds to current due date using value from a [ansi(h,stringsecs\(\))] function - check the helpfile for stringsecs\) or a specific date using [ansi(h,convtime\(\))]. As an example: +job/due x=+5d or +job/due x=[u(fancytime,secs(),%#)]%R[ansi(h,+job/scan)] - List all unread/changed or pending jobs.%R[ansi(h,+job/next)] - Like +bbnext\, read the next unread job you can see.%R[ansi(h,+job/pending)] - List all pending jobs in categories you manage.)]

+shelp/add +job=[u(cobj,jms)]/SHLP`+JOB
+shelp/category +job=Communications
&SHLP`+JOB [u(cobj,jms)]=[ansi(hc,Staff Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+job/category <id>=<category>)] - Moves a job to a new category.)]%R%R[ansi(hc,Wizard Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+job/newcategory <name>)] - Creates a new category.%R[ansi(h,+job/delcategory <name>)] - Deletes a category.%R[ansi(h,+job/rencategory <name>=<newname>)] - Renames a category.%R[ansi(h,+job/desc <name>=<description>)] - Set a category's description in +job%R[ansi(h,+job/lockcategory <name>/<lock>=<lockstring>)] - Lock a category. <lock> can be ADMIN or POST for who can administrate a category and who can +request to it. See +help +key for more information on <lockstrings>.%R[ansi(h,+job/unlockcategory <category>/<lock>)] - As above. Unlocks.%R[ansi(h,+job/config <category>/<option>=<value>)] - Sets a category's config. <option> can be Anon or Due.%R[ansi(h,DUE)] - Set to a value acceptable by stringsecs such as 5d or 50m. This is added to submit date to create the due date.%R[ansi(h,ANON)] - Modes 0-3. Mode 0 is fully transparent. Mode 1 hides submitter from staff. Mode 2 hides staff from submitter. Mode 3 is 1+2 combined.)]