@@ DEPENDENCIES: Core
@@ RECOMMENDED: Lock Management System - Without it, +bblock and +bbunlock will have only basic functionality.
@@ RECOMMENDED: Group Management System - Installing both together provides Groups with separate boards.

@switch/first/inline isdbref(u(bbs))=0,{@tel create(Bulletin Board System <BBS>)=config(master_room)}
&bbs u(coi)=locate(config(master_room),Bulletin Board System <BBS>,TXxi)
@parent u(bbs)=u(coi)
@set u(bbs)=WIZARD !NO_COMMAND

@switch/first/inline isdbref(u(bbs))=1,{@switch/first/inline isdbref(u(bbs-db))=0,{@tel create(BBS Database <BBS-DB>)=u(bbs)}}
&bbs-db u(coi)=locate(u(bbs),BBS Database <BBS-DB>,TXxi)
@parent u(bbs-db)=u(coi)
@set u(bbs-db)=WIZARD
@trigger u(ccs)/INC`MVTREE=u(bbs),BB,u(bbs-db),BB
@mvattr u(bbs)/GROUPS=u(bbs-db)/GROUPS
@dolist lthings(u(bbs))=@tel %i0=u(bbs-db)

&RFN`MSGHEAD u(bbs)=msghead(%0)
&RFN`HEADER u(bbs)=header(%0,,BBS`BORDER,BBS`BORDERDOT,BBS`BORDERTEXT)
&RFN`SUBHEADER u(bbs)=subheader(%0,,BBS`BORDER,BBS`BORDERDOT,BBS`BORDERTEXT)
&RFN`SEPARATOR u(bbs)=separator(%0,,BBS`BORDER,BBS`BORDERDOT,BBS`BORDERTEXT)

&CMD`BB u(bbs)=$^(?s)\+(bb|gb)(\S+)(?\: +(.+?))?(?\:/(.+?)?)?(?\:=(.*))?$:@attach u(bbs)/INC`INIT`%1;@attach u(ccs)/INC`PARTIAL=%2,setunion(setunion(v(VAR`BB`PLAYCOMMS),if(u(setr,isadmin,switch(%1,bb,isadmin(%#),gb,u(u(gso)/FUN`GRPPERM,%:,%q<gid1>,GBADMIN))),v(VAR`BB`ADMINCOMMS)),|,|),if(hasflag(%#,WIZARD),v(VAR`BB`WIZCOMMS)),|,|),|,u(setr,ann,ucstr(%1S)),command,command;@attach u(bbs)/INC`[strfirstof(%q<command>,WRITE)]=ucstr(%1),%3,%4,%5
@set u(bbs)/CMD`BB=regexp

&CMD`BBWRITE u(bbs)=$^(?s)\+(bb|gb)(?\: +(.*))?$:th u(setq,ann,ucstr(%1S));@attach u(bbs)/INC`INIT`%1;@attach u(bbs)/INC`WRITE=ucstr(%1),%2
@set u(bbs)/CMD`BBWRITE=regexp

&VAR`BB`PLAYCOMMS u(bbs)=READ|POST|REMOVE|MOVE|SCAN|NEXT|EDIT|WRITE|JOIN|LEAVE|LIST|PROOF|TOSS|CATCHUP|SEARCH|NEW|TIMEOUT|ALL|CHECK|COMMENT
&VAR`BB`ADMINCOMMS u(bbs)=NEWGROUP|CLEARGROUP|CONFIG|TIMEOUT|LOCK|UNLOCK|ORDER|RENAME
&VAR`BB`WIZCOMMS u(bbs)=IMPORT|CONVERT|TRANSFER

&INC`INIT`GB u(bbs)=@assert/inline isdbref(u(gso))=@pemit %#=msghead(GBS) ERROR: The Group System is not installed!;@attach u(gso)/INC`CODE`VALGROUP=switch(%2,rea*,strfirstof(%5,getstat(%#/D`GROUP,Group),0),sca*,strfirstof(%3,getstat(%#/D`GROUP,Group),0),strfirstof(getstat(%#/D`GROUP,Group),0)),1;th setstat(%#/D`GROUP,Group,%q<gid1>)

&FUN`VALIDGROUPS`BB u(bbs)=filterbool(#lambda/u(FUN`CAN%1`BB,%0,\%0,%2),u(FUN`LISTGROUPS`BB))
&FUN`BBADMIN`BB u(bbs)=cor(hasflag(%0,WIZARD),if(strmatch(lock(%1/Admin),*UNLOCKED*),0,elock(%1/Admin,%0)))
&FUN`CANREAD`BB u(bbs)=cand(cor(elock(%1/Read,%0),u(FUN`BBADMIN`BB,%0,%1)),cor(%2,not(u(FUN`GETOMIT,%0,%1))))
&FUN`CANWRITE`BB u(bbs)=cand(cor(elock(%1/Write,%0),u(FUN`BBADMIN`BB,%0,%1)),cor(%2,not(u(FUN`GETOMIT,%0,%1))))

&FUN`VALIDGROUPS`GB u(bbs)=filterbool(#lambda/u(FUN`CAN%1`GB,%0,\%0,%2,strfirstof(%3,%q<gid1>)),u(FUN`LISTGROUPS`GB,strfirstof(%3,%q<gid1>)))
&FUN`BBADMIN`GB u(bbs)=u(u(gso)/FUN`GRPPERM,objid(%0),%1,MODERATE,GROUP)
&FUN`CANREAD`GB u(bbs)=cand(cor(u(FUN`BBADMIN`GB,%0,%3),if(strlen(get(u(bbs-db)/BB`%1`GREAD)),lte(u(u(gso)/FUN`GETRANK,%3,objid(%0)),get(u(bbs-db)/BB`%1`GREAD)),1)),cor(%2,not(u(FUN`GETOMIT,%0,%1))))
&FUN`CANWRITE`GB u(bbs)=cand(cor(u(FUN`BBADMIN`GB,%0,%3),if(strlen(get(u(bbs-db)/BB`%1`GWRITE)),lte(u(u(gso)/FUN`GETRANK,%3,objid(%0)),get(u(bbs-db)/BB`%1`GWRITE)),1)),cor(%2,not(u(FUN`GETOMIT,%0,%1))))

&GFN`BBSPRIORITY u(bbs)=[u(setq,max,lmath(max,iter(u(setr,passed,iter(filterbool(#lambda/u(FUN`CANREAD`BB,\%0,%2,,),filterbool(#lambda/hasflag(\%0,CONNECTED),alts(if(isadmin(%#),%0,%#)))),%i0~[default(%i0/D`ALTS`PRIORITY,0)],%b,|)),after(%i0,~),|,%b)))][iter(filterbool(#lambda/eq(after(\%0,~),%q<max>),%q<passed>,|,|),before(%i0,~),|,%b)]


@@ setunion(iter(filterbool(#lambda/u(FUN`CANREAD`BB,\%0,%2,,),setunion(lwho(),)),strfirstof(filterbool(#lambda/u(FUN`CANREAD`BB,\%0,%2,,),priorityother(%i0)),objid(%i0))),)

&INC`CHECK u(bbs)=@switch/first/inline t(default(%#/D`BB`CHECK,1))=1,{@pemit %#=u(RFN`MSGHEAD,%q<ann>) You will no longer +bbscan on connect!;&D`BB`CHECK %#=0},0,{@pemit %#=u(RFN`MSGHEAD,%q<ann>) You will now +bbscan on connect!;&D`BB`CHECK %#=1}

&PLAYER`CONNECT`CHECK u(bbs)=@assert/inline t(default(%0/D`BB`CHECK,1));@force/inplace %0=+bbscan

&FUN`LISTGROUPS`BB u(bbs)=filterbool(#lambda/isdbref(\%0),get(u(bbs-db)/groups))
&FUN`LISTGROUPS`GB u(bbs)=filterbool(#lambda/isdbref(\%0),get(%q<gid1>/BOARDS))

&INC`CHECK`FINDBB u(bbs)=@assert/inline strlen(%1)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: You must enter a board to use!;@switch/first/inline %8=1,{th u(setq,bbnum,match(u(setr,listgroups,u(FUN`LISTGROUPS`%0)),u(setr,bb,namegrab(u(setr,valgroups,%q<listgroups>),if(valnum(%1),elements(%q<listgroups>,%1),%1)))))},{th u(setq,bbnum,match(u(setr,listgroups,u(FUN`LISTGROUPS`%0)),u(setr,bb,namegrab(u(setr,valgroups,u(FUN`VALIDGROUPS`%0,%#,%2,%3)),if(valnum(%1),elements(%q<listgroups>,%1),%1)))))};@assert/inline isdbref(%q<bb>)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: You are not a [ucstr(%2)] member of that board.

&INC`CHECK`FINDPOST u(bbs)=@assert/inline strlen(%1)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No post entered!;@assert/inline valnum(%1)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Posts must be addressed by their post #s!;@assert/inline strlen(u(setr,post,elements(u(FUN`LISTPOSTS,%2),u(setr,postnum,%1))))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Post not found.

&FUN`LISTPOSTS u(bbs)=sortkey(#lambda/baseconv(\%0,36,10),u(lattr,%0/*))

&FUN`MESSLIST u(bbs)=setunion(iter(%2,switch(1,valnum(%i0),%i0,regmatchi(%i0,^\\d+-\\d+$),u(setq,num1,abs(before(%i0,-)),num2,abs(after(%i0,-)))[u(setq,ord,sort(%q<num1> %q<num2>))][lnum(first(%q<ord>),last(%q<ord>))],strmatch(%i0,u),iter(setunion(setdiff(u(lattr,%1/*),u(FUN`GETREAD,%0,%1)),filterbool(#lambda/strmatch(u(FUN`MSGFLAG,%0,%1,\%0),C),u(lattr,%1/*))),match(u(FUN`LISTPOSTS,%1),%i0)),0),\,,%B),,%B,n)

&FUN`CONFIG u(bbs)=if(cand(strlen(%0),isdbref(%0)),u(FUN`CONFIG`BB`%1,%0),if(strlen(%0),u(FUN`CONFIG`GLOBAL`%0)))

&FUN`CONFIG`GLOBAL`AUTOTIMEOUT u(bbs)=default(u(bbs-db)/BB`AUTOTIMEOUT,0)
&FUN`CONFIG`GLOBAL`TIMEOUT u(bbs)=default(u(bbs-db)/BB`TIMEOUT,mul(60,60,24,30))
&FUN`CONFIG`GLOBAL`INTERVAL u(bbs)=default(u(bbs-db)/BB`INTERVAL,mul(60,60,24))
&FUN`CONFIG`BB`TIMEOUT u(bbs)=strfirstof(get(u(bbs-db)/BB`%0`TIMEOUT),u(FUN`CONFIG,timeout))
&FUN`CONFIG`BB`ANONYMOUS u(bbs)=t(strlen(get(u(bbs-db)/BB`%0`ANONYMOUS)))

&INC`POST u(bbs)=@attach u(ccs)/INC`JAILCHECK;@attach u(bbs)/INC`GUESTCHECK;@switch/first/inline strlen(%1)=0,{@assert/inline hasattr(%#/D`%0`NEW)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: You don't have a post in progress.;th u(setq,gid1,get(%#/D`%0`NEW`GID));@attach u(bbs)/INC`POST`MAKEMESS=%#,get(%#/D`%0`NEW`BBNUM),get(%#/D`%0`NEW`BB),left(get(%#/D`%0`NEW`TITLE),34),get(%#/D`%0`NEW`TEXT),get(%#/D`%0`NEW`TYPE);@wipe %#/D`%0`NEW},{@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE,,,,,,%4;@assert/inline strlen(%2)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Title field empty!;@break/inline cor(strmatch(%2,*%r*),strmatch(%2,*%t*))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Titles may not contain linebreaks or indents.;@switch/first/inline strlen(%3)=0,{@attach u(bbs)/INC`POST`BEGIN},{@attach u(bbs)/INC`POST`MAKEMESS=%#,%q<bbnum>,%q<bb>,left(%2,34),%3,%0}}

&INC`GUESTCHECK u(bbs)=@switch/first/inline t(v(VAR`GUESTLOCK))=1,{@break/inline haspower(%#,GUEST)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Permission denied. Guests may not make posts.}
&VAR`GUESTLOCK u(bbs)=1

&INC`POST`BEGIN u(bbs)=@break/inline hasattr(%#/D`BB`NEW)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: You already have a post in progress. use +[lcstr(%0)] <text> to add to it, +[lcstr(%0)]proof to view it, or +[lcstr(%0)]post to post it. Alternatively, +[lcstr(%0)]toss to trash it.;&D`%0`NEW`BBNUM %#=%q<bbnum>;&D`%0`NEW`BB %#=%q<bb>;&D`%0`NEW`TITLE %#=%2;&D`%0`NEW`TYPE %#=%0;&D`%0`NEW`GID %#=%q<gid1>;@pemit %#=You start your posting to Board #%q<bbnum> ([name(%q<bb>)])%RYou can now compose the body of the post by using '+[lcstr(%0)]write <text>'%Ror '+[lcstr(%0)] <text>'. When you are finished, type '+[lcstr(%0)]post' to send it. See '+help bbs' for help!

&INC`ALTWRITE u(bbs)=@attach u(bbs)/INC`WRITE=%0,%1

&INC`WRITE u(bbs)=@assert/inline hasattr(%#/D`%0`NEW)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: You don't have a post in progress.;@break/inline eq(strlen(get(%#/D`%0`NEW`TEXT)),u(setr,max,strlen(lnum(1,9999))))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Your post has already reached %q<max> characters - all that will fit. You may not add more text.;@assert/inline strlen(u(setr,entry,%1[if(strlen(%2),/%2)][if(strlen(%3),=%3)]))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Nothing entered to write. Use +[lcstr(%0)]proof to see what you've written!;&D`%0`NEW`TEXT %#=trim(cat(trim(get(%#/D`%0`NEW`TEXT)),trim(%q<entry>)));@pemit %#=u(RFN`MSGHEAD,%q<ann>) Text added to bbpost. Your post has reached [strlen(get(%#/D`%0`NEW`TEXT))] of [strlen(lnum(1,9999))] max characters!

&INC`TOSS u(bbs)=@assert/inline hasattr(%#/D`%0`NEW)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: You don't have a post in progress.;@wipe %#/D`%0`NEW;@pemit %#=u(RFN`MSGHEAD,%q<ann>) Post discarded.

&INC`PROOF u(bbs)=@assert/inline hasattr(%#/D`%0`NEW)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: You don't have a post in progress.;@pemit %#=u(RFN`HEADER,name(get(%#/D`%0`NEW`BB)) - [get(%#/D`%0`NEW`TITLE)]);@pemit %#=get(%#/D`%0`NEW`TEXT);@pemit %#=u(RFN`HEADER,Length: [strlen(get(%#/D`%0`NEW`TEXT))] Characters)

&INC`POST`MAKEMESS u(bbs)=th u(setq,next,baseconv(default(u(bbs-db)/BB`%2`NEXT,1),10,36));&BB`%2`NEXT u(bbs-db)=add(default(u(bbs-db)/BB`%2`NEXT,1),1);&%q<next> %2=%4;&%q<next>`BY %2=name(%0);&%q<next>`BYDB %2=objid(%0);&%q<next>`ON %2=secs();&%q<next>`HDR %2=%3;@switch/first/inline u(FUN`CONFIG,%2,TIMEOUT)=0,{&%q<next>`TIMEOUT %2=mul(60,60,24,30);&%q<next>`NOTIMEOUT %2=1},{&%q<next>`TIMEOUT %2=firstof(u(FUN`CONFIG,%2,TIMEOUT),0)};@switch/first/inline %5=BB,{@attach u(bbs)/INC`ALERT=%5,%1,%2,{(New [ucstr(%5)] Message ([pueblize(u(setr,messnum,%1/[words(u(lattr,%2/*))]),+[lcstr(%5)]read %q<messnum>)]) posted to '[name(%2)]' by [if(get(u(bbs-db)/BB`%2`ANONYMOUS),default(u(bbs-db)/BB`%2`ANONYMOUS,Anonymous),%n)]: %3)}},GB,{@attach u(bbs)/INC`ALERT=%5,%1,%2,{ansi(hc,<GROUP BB>) New message posted on '[pueblize(%q<gname1>,+group %q<gname1>)]' '[name(%2)]' Board ([pueblize(u(setr,messnum,%1/[words(u(lattr,%2/*))]),+[lcstr(%5)]read %q<messnum>=%q<gid1>)]) by [if(get(u(bbs-db)/BB`%2`ANONYMOUS),default(u(bbs-db)/BB`%2`ANONYMOUS,Anonymous),%n)]: %3}};th u(FUN`SETREAD,%#,%q<bb>,%q<next>);&D`BB`LASTPOST %#=%q<bb> %q<next>

&FUN`GETREAD u(bbs)=localize(switch(cand(u(setr,accid,accid(%0)),not(haspower(%0,GUEST))),>0,get(u(adb)/%q<accid>`BB`%1`READ),get(%0/D`BB`%1`READ)))
&FUN`SETREAD u(bbs)=localize(switch(cand(u(setr,accid,accid(%0)),not(haspower(%0,GUEST))),>0,attrib_set(u(adb)/%q<accid>`BB`%1`READ,setunion(setinter(u(FUN`GETREAD,%0,%1),u(FUN`LISTPOSTS,%1)),%2)),attrib_set(%0/D`BB`%1`READ,setunion(setinter(u(FUN`GETREAD,%0,%1),u(FUN`LISTPOSTS,%1)),%2))))

&INC`ALERT u(bbs)=@switch/first/inline %0=BB,{th u(setq,members,filterbool(#lambda/u(FUN`CANREAD`BB,\%0,%2,,),setunion(lwho(),)))},GB,{th u(setq,members,filterbool(#lambda/cand(isgroupmember(\%0,%q<gid1>),u(FUN`CANREAD`GB,\%0,%2,,%q<gid1>)),setunion(lwho(),)))};@pemit/list %q<members>=%3

&INC`ALERT u(bbs)=@switch/first/inline %0=BB,{th u(setq,members,setunion(iter(filterbool(#lambda/u(FUN`CANREAD`BB,\%0,%2,,),setunion(lwho(),)),strfirstof(filterbool(#lambda/u(FUN`CANREAD`BB,\%0,%2,,),priorityother(%i0)),objid(%i0))),))},GB,{th u(setq,members,filterbool(#lambda/cand(isgroupmember(\%0,%q<gid1>),u(FUN`CANREAD`GB,\%0,%2,,%q<gid1>)),setunion(lwho(),)))};@pemit/list %q<members>=%3
@@ %0 - Mode, GB or BB. %1 - Board number. %2 - Board DBREF. %3 - Message.

&INC`NEWGROUP u(bbs)=@assert/inline strlen(%1%2)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No name entered for the new board!;@assert/inline valid(name,%1%2)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: That is not a suitable name for a board.;@break/inline gte(strlen(%1%2),29)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Board names must be 29 characters long or less.;@break/inline isdbref(locate(switch(%0,BB,u(bbs-db),GB,%q<gid1>),trim(%1%2),TXxi))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: A board already has that name.;@tel u(setr,bb,create(trim(%1%2)))=switch(%0,BB,u(bbs-db),GB,%q<gid1>);@power %q<bb>=many_attribs;@switch/first/inline %0=BB,{&groups u(bbs-db)=trim(cat(get(u(bbs-db)/groups),%q<bb>))},GB,{&BOARDS %q<gid1>=trim(cat(get(%q<gid1>/BOARDS),%q<bb>))};@set %q<bb>=SAFE;@pemit %#=u(RFN`MSGHEAD,%q<ann>) Board '[trim(%1%2)]' created!;th u(setq,bbnum,match(u(FUN`LISTGROUPS`%0),%q<bb>))

&INC`CLEARGROUP u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@attach u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)] Deleting %q<ann> Board %q<bbnum> will also delete all messages. This cannot be undone! Please enter the same command again within 10 seconds to verify.},CLEARGROUP %0 %1,%q<ann>;@set %q<bb>=!SAFE;@nuke %q<bb>;@nuke %q<bb>;@wipe u(bbs-db)/BB`%q<bb>;@switch/first/inline %0=BB,{&groups u(bbs-db)=ldelete(get(u(bbs-db)/groups),%q<bbnum>)},GB,{&BOARDS %q<gid1>=ldelete(get(%q<gid1>/`BOARDS),%q<bbnum>)}

&INC`REMOVE u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@assert/inline strlen(%2)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No posts entered to remove.;th u(setq,listposts,u(FUN`LISTPOSTS,%q<bb>));@assert/inline words(u(setr,processed,filterbool(#lambda/if(strlen(u(setr,post,elements(%q<listposts>,\%0))),cor(%q<isadmin>,strmatch(get(%q<bb>/\%q<post>`BYDB),%:))),u(setr,orig,u(FUN`MESSLIST,%#,%q<bb>,before(%2,/))))))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No posts to remove.;@switch/first/inline gt(words(u(setr,cannot,setdiff(%q<processed>,%q<orig>,%b,n))),0)=1,{@pemit %#=u(RFN`MSGHEAD,%q<ann>) Could not remove posts: [itemize(%q<cannot>,%b,and,\,)]};@break/inline cand(gt(words(%q<processed>),1),strlen(after(%2,/)))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) Cannot remove comments from more than one post!;@switch/first/inline t(strlen(after(%2,/)))=1,{@attach u(bbs)/INC`REMOVE`COMMENT},{@dolist %q<processed>={@wipe %q<bb>/[elements(%q<listposts>,%i0)];@pemit %#=Message %i0 removed from group #%q<bbnum> ([name(%q<bb>)]).}}

&INC`REMOVE`COMMENT u(bbs)=@assert/inline valnum(after(%2,/))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Comments must be addressed by their comment number!;@assert/inline strlen(u(setr,comm,elements(sortkey(#lambda/last(\%0,`),u(lattr,%q<bb>/[elements(%q<listposts>,%q<processed>)]`COMM`*)),after(%2,/))))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Comment not found.;@assert/inline cor(%q<isadmin>,strmatch(get(%q<bb>/%q<comm>`BYDB),%:))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: You don't have permission to remove that comment.;@wipe %q<bb>/%q<comm>;@pemit %#=u(RFN`MSGHEAD,%q<ann>) Comment removed!

&INC`READ u(bbs)=@switch/first/inline strlen(%1%2)=0,{@attach u(bbs)/INC`READ`LISTGROUPS},{@switch/first/inline cand(strlen(%1),strlen(%2))=1,{@attach u(bbs)/INC`READ`CHECKPOST},{@switch/first/inline gt(strlen(%1),0)=1,{@attach u(bbs)/INC`READ`LISTMESS},{@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: How the hell did we get here?}}}

&FUN`NAME u(bbs)=switch(%0,BB,mudname() BBS%B[if(isdbref(%1),-%b[name(%1)],Boards)],GB,name(%2) GBS%B[if(isdbref(%1),-%b[name(%1)],Boards)])

&INC`ALL u(bbs)=@assert/inline words(u(setr,allunread,filterbool(#lambda/strlen(setdiff(u(lattr,\%0/*),u(FUN`GETREAD,%#,\%0))),u(FUN`VALIDGROUPS`%0,%#,READ))))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) There are no Unread messages on the %q<ann>!;@dolist %q<allunread>={@switch/first/inline %0=BB,{@force/inplace %#=+bbread %i0/u},GB,{@force/inplace %#=+gbread %i0/u}}

&INC`READ`LISTGROUPS u(bbs)=@switch/first/inline %0=BB,{th u(setq,allgroups,get(u(bbs-db)/groups),groups,u(FUN`VALIDGROUPS`BB,%#,READ))},GB,{th u(setq,allgroups,get(%q<gid1>/BOARDS),groups,u(FUN`VALIDGROUPS`GB,%#,READ))};@pemit %#=u(RFN`HEADER,u(fun`name,%0,%q<bb>,%q<gid1>));@pemit %#=[space(7)]Group Name[space(20)]Last Post[space(6)]# of messages;@pemit %#=u(RFN`SEPARATOR);@dolist %q<groups>={@pemit %#=rjust(pueblize(ansi(custcolor(%#,BBS`BOARDNUM),match(%q<allgroups>,%i0)),+[lcstr(%0)]read [match(%q<allgroups>,%i0)]),2)[center(ansi(custcolor(%#,BBS`BOARDSTATUS),u(FUN`SHOWLOCK,%0,%i0,%q<gid1>)),5)][ljust(pueblize(ansi(custcolor(%#,BBS`BOARDNAME),name(%i0)),+[lcstr(%0)]read [match(%q<allgroups>,%i0)]),30)][ljust(ansi(custcolor(%#,BBS`LASTPOST),if(u(setr,time,strfirstof(get(%i0/[u(setr,last,last(u(FUN`LISTPOSTS,%i0)))]`EDITED),get(%i0/%q<last>`ON))),timefmt($b $d $Y,%q<time>),None)),20)][rjust(ansi(custcolor(%#,BBS`NUMMESS),nattr(%i0/*)),3)]%b[ljust(ansi(custcolor(%#,BBS`NUMMESS),if(words(setdiff(u(lattr,%i0/*),u(FUN`GETREAD,%#,%i0))),U)),2)];@switch/first/inline eq(inum(0),words(%q<groups>))=1,{@pemit %#=u(RFN`SEPARATOR)%r'*' = restricted[space(5)]'-' = read only[space(5)]'\(-\)' = read only\, but you can write%r[u(RFN`SUBHEADER)]}};@switch/first/inline words(%q<groups>)=0,{@pemit %#=u(RFN`SEPARATOR,)%r'*' = restricted[space(5)]'-' = read only[space(5)]'\(-\)' = read only\, but you can write%r[u(RFN`SUBHEADER)]}

&FUN`SHOWLOCK u(bbs)=switch(switch(%0,BB,[if(strmatch(lock(%1/READ),*UNLOCKED*),1,0)]:[if(strmatch(lock(%1/WRITE),*UNLOCKED*),1,0)]:[u(FUN`CANWRITE`%0,%#,%1)],GB,[not(hasattr(u(bbs-db)/BB`%1`GREAD))]:[not(hasattr(u(bbs-db)/BB`%1`GWRITE))]:[u(FUN`CANWRITE`%0,%#,%1,,%2)]),1:1:1,,1:*:1,{(-)},1:*:0,-,*)

&INC`READ`LISTMESS u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,READ;@pemit %#=u(RFN`HEADER,u(fun`name,%0,%q<bb>,%q<gid1>));@pemit %#=space(8)Message[space(28)]Posted[space(8)]By;@pemit %#=u(RFN`SEPARATOR);@dolist u(setr,posts,u(FUN`LISTPOSTS,%q<bb>))={@pemit %#=ljust(pueblize(ansi(custcolor(%#,BBS`POSTNUM),%q<bbnum>/[match(%q<posts>,%i0)]),+[lcstr(%0)]read %q<bbnum>/[match(%q<posts>,%i0)]),6)[ljust(u(u(bbs)/FUN`MSGFLAG,%#,%q<bb>,%i0),2)][ljust(ansi(custcolor(%#,BBS`POSTTITLE),get(%q<bb>/%i0`HDR)),35)][ljust(ansi(custcolor(%#,BBS`POSTDATE),timefmt($b $d $Y,lmath(max,firstof(get(%q<bb>/%i0`EDITED),get(%q<bb>/%i0`ON))))),14)][left(ansi(custcolor(%#,BBS`POSTAUTHOR),if(get(u(bbs-db)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/%i0`BY))]),default(u(bbs-db)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/%i0`BY))),21)];@switch/first/inline eq(inum(0),words(%q<posts>))=1,{@pemit %#=u(RFN`HEADER,)}}

&FUN`MSGFLAG u(bbs)=if(match(u(FUN`GETREAD,%0,%1),%2),,U)

&INC`READ`CHECKPOST u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,READ;@assert/inline strlen(%2)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No posts entered to check.;th u(setq,listposts,u(FUN`LISTPOSTS,%q<bb>));@assert/inline words(u(setr,processed,filterbool(#lambda/strlen(elements(%q<listposts>,\%0)),u(FUN`MESSLIST,%#,%q<bb>,%2))))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Posts not found.;@dolist %q<processed>=@attach u(bbs)/INC`READ`SHOWPOST=%0,%i0,%q<bb>

&FUN`GETTIMEOUT u(bbs)=if(default(%0/%1`NOTIMEOUT,0),X,get(%0/%1`TIMEOUT))
@@ %0 - bbs, %1 - post

&INC`READ`SHOWPOST u(bbs)=@attach u(bbs)/INC`CHECK`FINDPOST=%0,%1,%2;@pemit %#=u(RFN`HEADER,u(fun`name,%0,%2,%q<gid1>));@pemit %#=ljust(Message: [ansi(custcolor(%#,BBS`POSTNUM),%q<bbnum>/%q<postnum>)] [ansi(custcolor(%#,BBS`POSTTIMEOUT),\([if(not(u(FUN`CONFIG,autotimeout)),No System Timeout,switch(u(setr,showtimeout,u(FUN`GETTIMEOUT,%q<bb>,%q<post>)),X,No Timeout,>0,timestring(%q<showtimeout>),Timed Out!))]\))],35)Posted[space(8)]Author%r[ljust(ansi(custcolor(%#,BBS`POSTTITLE),get(%2/%q<post>`HDR)),35)][ljust(ansi(custcolor(%#,BBS`POSTDATE),timefmt($b $d $Y,lmath(max,firstof(get(%2/%q<post>`EDITED),get(%2/%q<post>`ON))))),14)][left(ansi(custcolor(%#,BBS`POSTAUTHOR),if(get(u(bbs-db)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/%q<post>`BY))]),default(u(bbs-db)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/%q<post>`BY))),21)]%R[u(RFN`SEPARATOR)];@pemit %#=get(%q<bb>/%q<post>);@switch/first/inline t(nattr(%q<bb>/%q<post>`COMM`*))=1,{@attach u(bbs)/INC`READ`SHOWCOMMS},0,{@pemit %#=u(RFN`SUBHEADER)};th u(FUN`SETREAD,%#,%2,%q<post>)

&INC`READ`SHOWCOMMS u(bbs)=@dolist u(setr,allcomms,sortkey(#lambda/last(\%0,`),u(lattr,%q<bb>/%q<post>`COMM`*)))={@pemit %#=u(RFN`SEPARATOR,Comment [inum(0)] - Added [ansi(custcolor(%#,BBS`POSTDATE),timefmt($b $d $Y,get(%q<bb>/%i0`ON)))]);@pemit %#=ansi(h,get(%q<bb>/%i0`BY)) Commented:;@pemit %#=get(%q<bb>/%i0);@switch/first/inline eq(inum(0),words(%q<allcomms>))=1,{@pemit %#=u(RFN`SUBHEADER)}}

&INC`COMMENT u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@attach u(bbs)/INC`CHECK`FINDPOST=%0,%2,%q<bb>;@assert/inline strlen(%3)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Comment contents empty!;&[u(setr,attr,%q<post>`COMM`[nextslot(%q<bb>,%q<post>`COMM)])] %q<bb>=%3;&%q<attr>`BY %q<bb>=%n;&%q<attr>`BYDB %q<bb>=%:;&%q<attr>`ON %q<bb>=secs();&%q<post>`EDITED %q<bb>=secs();@switch/first/inline strmatch(get(u(job)/vb),%#)=0,{@attach u(bbs)/INC`ALERT=%0,%q<bbnum>,%q<bb>,{(New Comment added to [ucstr(%0)][if(strmatch(%0,GB),%b\([name(%q<gid1>)]\))] Message ([pueblize(u(setr,messnum,%q<bbnum>/%q<postnum>),+[lcstr(%0)]read %q<messnum>[if(strmatch(%0,GB),=%q<gid1>)])]) '[get(%q<bb>/%q<post>`HDR)]' on '[name(%q<bb>)]' by %n)}}

&INC`NEXT u(bbs)=th iter(u(FUN`VALIDGROUPS`%0,%#,READ),iter(u(setr,listposts,u(u(bbs)/FUN`LISTPOSTS,%i0)),if(match(U C,u(u(bbs)/FUN`MSGFLAG,%#,%i1,%i0)),u(setq,msg,%i0,bb,%i1)[ibreak(2)])));@assert/inline isdbref(%q<bb>)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) There are no unread postings on the %q<ann>.;th u(setq,bbnum,match(u(FUN`LISTGROUPS`%0),%q<bb>));@attach u(bbs)/INC`READ`SHOWPOST=%0,match(%q<listposts>,%q<msg>),%q<bb>

&INC`NEW u(bbs)=@attach u(bbs)/INC`NEXT

&INC`EDIT u(bbs)=@attach u(ccs)/INC`JAILCHECK;@switch/first/inline %1=TEXT,{@attach u(bbs)/INC`EDIT`POST},TITLE,{@attach u(bbs)/INC`EDIT`POST},{@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@attach u(bbs)/INC`CHECK`FINDPOST=%0,%2,%q<bb>;@assert/inline cor(%q<isadmin>,isadmin(%#),strmatch(get(%q<bb>/%q<post>`BYDB),%:))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: You cannot edit that post.;@assert/inline strlen(before(%3,/))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No text entered to check for.;&%q<post> %q<bb>=edit(get(%q<bb>/%q<post>),before(%3,/),after(%3,/));&%q<post>`EDITED %q<bb>=secs();@pemit %#=u(RFN`HEADER,)%RMessage %q<bbnum>/%q<postnum> ([name(%q<bb>)]/%q<postnum>) now reads:%R[u(RFN`SUBHEADER,)];@pemit %#=get(%q<bb>/%q<post>);@pemit %#=u(RFN`HEADER,)}

&INC`EDIT`POST u(bbs)=@assert/inline hasattr(%#/D`BB`NEW)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: You don't have a post in progress.;@assert/inline strlen(before(%3,/))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No text entered to check for.;&D`BB`NEW`%1 %#=edit(get(%#/D`BB`NEW`%1),before(%3,/),after(%3,/));@pemit %#=u(RFN`HEADER,)%RMessage now reads:%R[u(RFN`SUBHEADER,get(%#/D`BB`NEW`TITLE))];@pemit %#=get(%#/D`BB`NEW`TEXT);@pemit %#=u(RFN`HEADER,)

&INC`LEAVE u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,READ,1;@break/inline u(FUN`GETOMIT,%#,%q<bb>)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) You have already left that board.;th u(FUN`SETOMIT,%#,%q<bb>,1);@pemit %#=u(RFN`MSGHEAD,%q<ann>) You have removed yourself from the [name(%q<bb>)] board.
&INC`JOIN u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,READ,1;@assert/inline u(FUN`GETOMIT,%#,%q<bb>)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) You are already watching this board.;th u(FUN`SETOMIT,%#,%q<bb>,0);@pemit %#=u(RFN`MSGHEAD,%q<ann>) You have joined the [name(%q<bb>)] board.

@@ &FUN`GETOMIT u(bbs)=localize(switch(u(setr,accid,accid(%0)),>0,default(u(adb)/%q<accid>`BB`%1`OMIT,0),default(%0/D`BB`%1`OMIT,0)))
@@ &FUN`SETOMIT u(bbs)=localize(switch(u(setr,accid,accid(%0)),>0,attrib_set(u(adb)/%q<accid>`BB`%1`OMIT,%2),attrib_set(%0/D`BB`%1`OMIT,%2)))

&FUN`GETOMIT u(bbs)=default(%0/D`BB`%1`OMIT,0)
&FUN`SETOMIT u(bbs)=attrib_set(%0/D`BB`%1`OMIT,%2)

&INC`SCAN u(bbs)=@attach/nobreak u(bbs)/INC`SCAN`DOSCAN;@switch %0=BB,{@assert/inline words(getproperty(%#,groups));@attach u(bbs)/INC`SCAN`GROUPSCAN}

&INC`SCAN`DOSCAN u(bbs)=@assert/inline words(u(setr,groups,filterbool(#lambda/words(iter(u(lattr,\%0/*),u(u(bbs)/FUN`MSGFLAG,%#,\%0,\%i0))),u(FUN`VALIDGROUPS`%0,%#,READ))))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) There are no unread postings on the [switch(%0,GB,%q<gname1> GBS,BBS)].;th u(setq,listgroups,u(FUN`LISTGROUPS`%0));@dolist %q<groups>={@switch/first/inline inum(0)=1,{@pemit %#=u(RFN`HEADER,u(FUN`NAME,%0,,%q<gid1>) - Unread Postings)};th u(setq,posts,u(FUN`LISTPOSTS,%i0));@pemit %#=pueblize(name(%i0) (#[u(setr,bbnum,match(%q<listgroups>,%i0))]),+[lcstr(%0)]read %q<bbnum>[if(strmatch(%0,GB),=%q<gid1>)]): [u(setr,num,words(u(setr,unread,filterbool(#lambda/match(U C,u(u(bbs)/FUN`MSGFLAG,%#,%i0,\%0)),%q<posts>))))] unread ([itemize(iter(%q<unread>,pueblize(u(setr,postnum,match(%q<posts>,%i0)),+[lcstr(%0)]read %q<bbnum>/%q<postnum>[if(strmatch(%0,GB),=%q<gid1>)])),%b,and,\,)]);&D`BBTOTAL %#=add(%q<num>,get(%#/D`BBTOTAL));@switch/first/inline eq(words(%q<groups>),inum(0))=1,{@pemit %#=u(RFN`HEADER,Total Unread: [get(%#/D`BBTOTAL)]);@wipe %#/D`BBTOTAL}}

&INC`SCAN`GROUPSCAN u(bbs)=@assert/inline strfirstof(getstat(%#/D`GROUP,ALLGB),1);@assert/inline words(u(setr,allgroups,filterbool(#lambda/cand(isgroupmember(%:,\%0),strfirstof(getstat(%#/D`GROUP`\%0,GB),1)),u(u(gso)/FUN`LISTGROUPS))))=@pemit %#=msghead(GBS) There are no unread posts on the GBS.;@dolist %q<allgroups>={th u(setq,gid1,%i0,gname1,name(%i0));@assert/inline lmath(max,iter(u(FUN`VALIDGROUPS`GB,%#,READ),iter(u(setr,listposts,u(u(bbs)/FUN`LISTPOSTS,%i0)),if(match(U C,u(u(bbs)/FUN`MSGFLAG,%#,%i1,%i0)),1[ibreak(2)]))));@pemit %#=msghead(GBS) Group '[pueblize(%q<gname1>,+group %q<gid1>)]' has unread posts! Type [pueblize(+gbscan %q<gname1>,+gbscan %q<gid1>)] to see which!}

&INC`LIST u(bbs)=th u(setq,listgroups,u(FUN`LISTGROUPS`%0));@pemit %#=u(RFN`HEADER,u(FUN`NAME,%0,,%q<gid1>))%r[align(36 8 20 8,Available Bulletin Board Groups,Member?,Timeout,Capacity)]%r[u(RFN`SEPARATOR,)];@dolist u(setr,groups,u(FUN`VALIDGROUPS`%0,%#,READ,1))={@pemit %#=align(5 31 -7 20 12,%b[ansi(custcolor(%#,BBS`BOARDNUM),match(%q<listgroups>,%i0))],ansi(custcolor(%#,BBS`BOARDNAME),name(%i0)),switch(default(%#/D`BB`%i0`OMIT,0),0,Yes,No),if(u(FUN`CONFIG,%i0,timeout),timestring(u(FUN`CONFIG,%i0,timeout)),none),rjust(nattr(%i0/*),4,0)/[switch(strlen(default(u(bbs-db)/BB`%i0`NEXT,1)),1,1800?,2,1800?,3,1800?,4,1600?,5,1300?,6,1100?,7,1000?,8,900?,9,800?,10,700?,11,600?,12,500?,13,400?)]);@switch/first/inline eq(inum(0),words(%q<groups>))=1,{@pemit %#=u(RFN`SEPARATOR)%RTo join boards, type '+[lcstr(%0)]join <board number>'%RTo leave boards, type '+[lcstr(%0)]leave <board number>'%R[u(RFN`SUBHEADER)]}}

&INC`CATCHUP u(bbs)=@assert/inline strlen(%1)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No board entered to catchup.;@switch/first/inline %1=ALL,{@dolist/inline u(FUN`VALIDGROUPS`%0,%#,READ)={@attach u(bbs)/INC`DOCATCHUP=%i0};@pemit %#=u(RFN`MSGHEAD,%q<ann>) All postings on all %q<ann> boards marked as read.},ALLGROUP,{@dolist/inline getproperty(%#,GROUPS)={th u(setq,gid1,%i0);@attach u(bbs)/INC`CATCHUP=GB,ALL}},{@dolist/delimit , %1={@attach u(bbs)/INC`CHECK`FINDBB=%0,trim(%i0),READ;@attach u(bbs)/INC`DOCATCHUP=%q<bb>;@pemit %#=u(RFN`MSGHEAD,%q<ann>) All postings on board [name(%q<bb>)] marked as read.}}

&INC`DOCATCHUP u(bbs)=@switch/first/inline t(u(setr,accid,accid(%#)))=1,{&%q<accid>`BB`%0`READ u(adb)=u(lattr,%0/*)},0,{&D`BB`%0`READ %#=u(lattr,%0/*)};@dolist/inline u(lattr,%0/*`COMM`*)={th setstat(%0/[before(%i0,`)]`COMMREAD,%#,baseconv(secs(),10,64))}

&INC`MOVE u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@attach u(bbs)/INC`CHECK`FINDPOST=%0,%2,%q<bb>;@assert/inline cor(%q<isadmin>,isadmin(%#),strmatch(get(%q<bb>/%q<post>`BYDB),%:))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: You cannot move that post.;@assert/inline strlen(%3)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No destination board entered.;th u(setq,oldbb,%q<bb>);@attach u(bbs)/INC`CHECK`FINDBB=%0,%3,WRITE;@switch/first/inline %0=BB,{th u(setq,next,baseconv(default(u(bbs-db)/BB`%q<bb>`NEXT,1),10,36));&BB`%q<bb>`NEXT u(bbs-db)=add(default(u(bbs-db)/BB`%q<bb>`NEXT,1),1)},GB,{&BB`%q<bb>`NEXT u(bbs-db)=add(default(u(bbs-db)/BB`%q<bb>`NEXT,1),1)};@attach u(ccs)/INC`MVTREE=%q<oldbb>,%q<post>,%q<bb>,%q<next>;@pemit %#=Message '%q<postnum>' moved from Board '[name(%q<oldbb>)]' to Board '[name(%q<bb>)]'

&INC`CONFIG u(bbs)=@switch/first/inline cor(cand(strlen(%1),not(valnum(%1))),not(strlen(%1)))=1,{@attach u(bbs)/INC`CONFIG`GLOBAL},{@switch/first/inline cand(and(strlen(%1),valnum(%1)),not(valnum(%2)),not(strlen(after(%2,/))))=1,{@attach u(bbs)/INC`CONFIG`BOARD},{@attach u(bbs)/INC`CONFIG`POST}}

&INC`CONFIG`GLOBAL u(bbs)=@break/inline strmatch(%0,GB)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Global Options cannot be changed in Group mode.;@switch/first/inline strlen(%1)=0,{@attach u(bbs)/INC`CONFIG`GLOBAL`SHOW},{@attach u(ccs)/INC`PARTIAL=%1,timeout|autotimeout|interval,|,%q<ann>,parameter,parameter;@switch/first/inline strlen(%3)=0,{@pemit %#=u(RFN`MSGHEAD,%q<ann>) %q<parameter> for the %q<ann> cleared.;&BB`%q<parameter> u(bbs-db)},{@attach u(bbs)/INC`CONFIG`GLOBAL`%q<parameter>;@pemit %#=u(RFN`MSGHEAD,%q<ann>) %q<parameter> for the %q<ann> set to: %3.;&BB`%q<parameter> u(bbs-db)=strfirstof(%q<entry>,%3)}}

&INC`CONFIG`GLOBAL`SHOW u(bbs)=@pemit %#=u(RFN`HEADER,BBS - Global Settings);@pemit %#=AUTOTIMEOUT: [u(FUN`CONFIG,autotimeout)] - [if(u(FUN`CONFIG,autotimeout),On,Off)];@pemit %#=TIMEOUT: [u(FUN`CONFIG,timeout)] [if(u(FUN`CONFIG,timeout),- [timestring(u(FUN`CONFIG,timeout))],Off)];@pemit %#=INTERVAL: [u(FUN`CONFIG,interval)] [if(u(FUN`CONFIG,interval),- [timestring(u(FUN`CONFIG,interval))],Unset! Dangerous!)];@pemit %#=u(RFN`HEADER,)

&INC`CONFIG`GLOBAL`TIMEOUT u(bbs)=@assert/inline strlen(u(setr,entry,stringsecs(%3)))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`CONFIG`GLOBAL`INTERVAL u(bbs)=@assert/inline u(setr,entry,stringsecs(%3))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`CONFIG`GLOBAL`AUTOTIMEOUT u(bbs)=@assert/inline regmatchi(u(setr,entry,%3),^0|1$)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Entry must be binary truth - 0 (off) or 1 (on).

&INC`CONFIG`BOARD u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@switch/first/inline strlen(%2)=0,{@attach u(bbs)/INC`CONFIG`BOARD`SHOW},{@attach u(ccs)/INC`PARTIAL=%2,anonymous|timeout,|,%q<ann>,parameter,parameter;@switch/first/inline strlen(%3)=0,{@pemit %#=u(RFN`MSGHEAD,%q<ann>) %q<parameter> for Board [name(%q<bb>)] cleared.;&BB`%q<bb>`%q<parameter> u(bbs-db)},{@attach u(bbs)/INC`CONFIG`GLOBAL`%q<parameter>;@pemit %#=u(RFN`MSGHEAD,%q<ann>) %q<parameter> for Board [name(%q<bb>)] set to: %3.;&BB`%q<bb>`%q<parameter> u(bbs-db)=strfirstof(%q<entry>,%3)}}

&INC`CONFIG`BOARD`SHOW u(bbs)=@pemit %#=u(RFN`HEADER,%q<ann> - [name(%q<bb>)] Board Settings);@pemit %#=TIMEOUT: [strfirstof(u(FUN`CONFIG,%q<bb>,timeout),0)] [if(u(FUN`CONFIG,%q<bb>,timeout),- [timestring(u(FUN`CONFIG,%q<bb>,timeout))])] [if(strlen(get(u(bbs-db)/BB`%q<bb>`TIMEOUT)),- Using Board Setting,- Using Global Default)];@pemit %#=ANONYMOUS: [u(FUN`CONFIG,%q<bb>,anonymous)] [if(u(FUN`CONFIG,%q<bb>,anonymous),- [get(u(bbs-db)/BB`%q<bb>`ANONYMOUS)])];@pemit %#=u(RFN`HEADER,)

&INC`CONFIG`BOARD`TIMEOUT u(bbs)=@assert/inline strlen(u(setr,entry,stringsecs(%3)))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`CONFIG`BOARD`ANONYMOUS u(bbs)=@assert/inline strlen(%3)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Anonymous entry must be a string.

&INC`CONFIG`POST u(bbs)=@switch/first/inline strlen(after(%2,/))=0,{@attach u(bbs)/INC`CONFIG`GLOBAL`POST},{@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@attach u(bbs)/INC`CHECK`FINDPOST=%0,before(%2,/),%q<bb>;@attach u(ccs)/INC`PARTIAL=after(%2,/),timeout,|,%q<ann>,parameter,parameter;@switch/first/inline strlen(%3)=0,{@pemit %#=u(RFN`MSGHEAD,%q<ann>) %q<parameter> for the %q<ann> cleared.;&%q<post>`%q<parameter> %q<bb>;&%q<post>`EDITED %q<bb>=secs()},{@attach u(bbs)/INC`CONFIG`GLOBAL`%q<parameter>;@pemit %#=u(RFN`MSGHEAD,%q<ann>) %q<parameter> for Board [name(%q<bb>)]'s Post %q<postnum> set to: %3.;&%q<post>`%q<parameter> %q<bb>=strfirstof(%q<entry>,%3)};&%q<post>`EDITED %q<bb>=secs()}

&INC`CONFIG`POST`SHOW u(bbs)=@pemit %#=u(RFN`HEADER,%q<ann> - [name(%q<bb>)] - Message %q<postnum> Settings);@pemit %#=TIMEOUT: [strfistof(get(%q<bb>/%q<post>`TIMEOUT),0)] [if(get(%q<bb>/%q<post>`TIMEOUT),- [timestring(get(%q<bb>/%q<post>`TIMEOUT))])];@pemit %#=u(RFN`HEADER,)

&INC`CONFIG`POST`TIMEOUT u(bbs)=@assert/inline strlen(u(setr,entry,stringsecs(%3)))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Entry doesn't convert properly. Check [pueblize(help stringsecs,help stringsecs)] for proper format.

&INC`TIMEOUT u(bbs)=@switch/first/inline strlen(%1)=0,{@attach u(bbs)/INC`LIST},{@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@switch/first/inline t(strlen(%2))=1,{@assert/inline words(u(setr,processed,filterbool(#lambda/if(strlen(u(setr,post,elements(u(FUN`LISTPOSTS,%q<bb>),\%0))),cor(%q<isadmin>,strmatch(get(%q<bb>/\%q<post>`BYDB),%:))),u(setr,orig,u(FUN`MESSLIST,%#,%q<bb>,%2)))))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No posts to change timeouts.;@switch/first/inline gt(words(u(setr,cannot,setdiff(%q<processed>,%q<orig>,%b,n))),0)=1,{@pemit %#=u(RFN`MSGHEAD,%q<ann>) Could not change timeout for posts: [itemize(%q<cannot>,%b,and,\,)]};@assert/inline strlen(%3)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No new timeout entered!;@switch/first/inline %3=0,{@assert/inline %q<isadmin>=@pemit %#=u(RFN`MSGHEAD,%q<ann>) Only admin may set a timeout of 0.;th u(setq,entry,0)},{@attach u(bbs)/INC`CONFIG`POST`TIMEOUT};@switch/first/inline %q<isadmin>=0,{@break/inline gt(%q<entry>,u(FUN`CONFIG,%q<bb>,Timeout))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Cannot set a post's timeout greater than a board's timeout.};@dolist %q<processed>={@switch/first/inline %q<isadmin>=0,{@break/inline eq(get(%q<bb>/[elements(u(FUN`LISTPOSTS,%q<bb>),%i0)]),0)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Only admin may apply timeouts to static posts.};@switch/first/inline %q<entry>=0,{&[elements(u(FUN`LISTPOSTS,%q<bb>),%i0)]`TIMEOUT %q<bb>=u(FUN`CONFIG,%q<bb>,Timeout);&[elements(u(FUN`LISTPOSTS,%q<bb>),%i0)]`NOTIMEOUT %q<bb>=1},{&[elements(u(FUN`LISTPOSTS,%q<bb>),%i0)]`TIMEOUT %q<bb>=%q<entry>;&[elements(u(FUN`LISTPOSTS,%q<bb>),%i0)]`NOTIMEOUT %q<bb>=0};@pemit %#=u(RFN`MSGHEAD,%q<ann>) Timeout for %q<bbnum>/%i0 set to: [if(%q<entry>,timestring(%q<entry>),Static)]!}},{@pemit %#=u(RFN`HEADER,u(fun`name,%0,%q<bb>,%q<gid1>) - Timeouts)%r[space(8)]Message[space(28)]Timeout[space(9)]By;@dolist u(setr,posts,u(FUN`LISTPOSTS,%q<bb>))={@pemit %#=ljust(pueblize(%q<bbnum>/[match(%q<posts>,%i0)],+[lcstr(%0)]read %q<bbnum>/[match(%q<posts>,%i0)][switch(%0,GB,=%q<gid1>)]),6)[ljust(u(u(bbs)/FUN`MSGFLAG,%#,%q<bb>,%i0),2)][ljust(get(%q<bb>/%i0`HDR),35)][ljust(switch(u(setr,ptime,u(FUN`GETTIMEOUT,%q<bb>,%i0)),X,No Timeout,>0,timestring(%q<ptime>),Timed Out),16)][left(if(get(u(bbs-db)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/%i0`BY))]),default(u(bbs-db)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/%i0`BY)),21)];@switch/first/inline eq(inum(0),words(%q<posts>))=1,{@pemit %#=u(RFN`HEADER,Board Timeout: [switch(u(setr,btime,u(FUN`CONFIG,%q<bb>,timeout)),0,No Timeout,timestring(%q<btime>))])}}}}

&STARTUP u(bbs)=@trigger u(bbs)/TRG`TIMEOUT

&TRG`TIMEOUT u(bbs)=@switch/first/inline u(FUN`CONFIG,autotimeout)=1,{@dolist u(lattr,u(bbs-db)/BB`#*)={@wait inum(0)={@assert/inline isdbref(last(%i0,`))=@wipe u(bbs-db)/%i0;@trigger u(bbs)/TRG`TIMEOUT`BOARD=last(%i0,`)}}};@wait u(FUN`CONFIG,interval)=@trigger u(bbs)/TRG`TIMEOUT

&TRG`TIMEOUT`BOARD u(bbs)=@dolist u(lattr,%0/*)={@switch/first/inline u(setr,timeout,u(FUN`GETTIMEOUT,%0,%i0))=X,{},>0,{&%i0`TIMEOUT %0=sub(%q<timeout>,u(FUN`CONFIG,interval))},<=0,{@wipe %0/%i0}}

&INC`LOCK u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@attach u(ccs)/INC`PARTIAL=%2,read|write,|,%q<ann>,lock,lock;@switch/first/inline %0=BB,{@assert/inline cand(u(kls),u(kop))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Key System not installed, cannot continue.;@assert/inline strlen(%3)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No lock string entered. See [pueblize(+help +key)] for more information.;@attach u(kls)/INC`DOLOCK=%q<bb>,user:%q<lock>,%3,%q<ann>},GB,{@assert/inline valnum(%3)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: %q<lock> Lock must be a number!;@break/inline lte(%3,u(u(gso)/FUN`GETRANK,%q<gid1>,%:))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Cannot raise the %q<lock> Lock beyond your own rank.;@assert/inline hasattrp(%q<gid1>/RANK`[u(setr,entry,abs(%3))])=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Cannot find that rank.;&BB`%q<bb>`G%q<lock> u(bbs-db)=%q<entry>;@pemit %#=u(RFN`MSGHEAD,%q<ann>) You set the %q<lock> Lock on Group Board [name(%q<bb>)] to: Rank %q<entry> or higher.}

&INC`UNLOCK u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@attach u(ccs)/INC`PARTIAL=%2,read|write,|,%q<ann>,lock,lock;@switch/first/inline %0=BB,{@unlock/user:%q<lock> %q<bb>;@pemit %#=u(RFN`MSGHEAD,%q<ann>) You release the %q<lock> Lock on [name(%q<bb>)]},GB,{@assert/inline lte(get(u(bbs-db)/BB`%q<bb>`G%q<lock>),u(u(gso)/FUN`GETRANK,%q<gid1>,%:))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Cannot release a %q<lock> Lock that's beyond your own rank.;&BB`%q<bb>`G%q<lock> u(bbs-db);@pemit %#=u(RFN`MSGHEAD,%q<ann>) You release the %q<lock> Lock on [name(%q<bb>)]}

&INC`MYR`FINDBBP u(bbs)=@switch/first/inline isdbref(get(%#/BBPOCKET))=1,{@assert/inline cand(hasattr(get(%#/BBPOCKET)/groups),hasattr(get(%#/BBPOCKET)/version))=@pemit u(RGn`MSGHEAD,%q<ann>) ERROR: DBREF in BBPOCKET is not a Myrddin BBS BBpocket!;th u(setq,bbp,get(%#/BBPOCKET))},0,{@assert/inline words(u(setr,bbp,lsearch(all,ething,\[cand(strmatch(name(##),bbpocket),hasattr(##/version),hasattr(##/groups))\])))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: BBpocket not found.;@break/inline gt(words(%q<bbp>),1)=@pemit %#=u(RFN`MSHEAD,%q<ann>) ERROR: Search turned up multiple bbpockets: %q<bbp>}

&INC`MYR`TRANSFER u(bbs)=@dolist u(setr,list,sortkey(#lambda/baseconv(\%1,36,10),get(%1/MESS_LST)))={@switch/first/inline %0=BB,{th u(setq,next,baseconv(default(u(bbs-db)/BB`%2`NEXT,1),10,36));&BB`%2`NEXT u(bbs-db)=add(default(u(bbs-db)/BB`%2`NEXT,1),1)},GB,{};th u(setq,head,get(%1/HDR_%i0));&%q<next> %2=get(%1/BDY_%i0);&%q<next>`BY %2=elements(%q<head>,3,|);&%q<next>`BYDB %2=objid(elements(%q<head>,4,|));&%q<next>`ON %2=convtime(if(regmatchi(elements(%q<head>,2,|),^\\w+ \\d+ \\d+$),elements(%q<head>,2,|),elements(elements(%q<head>,2,|),2 3)%b[sub(timefmt($Y),1)]));&%q<next>`HDR %2=elements(%q<head>,1,|);&%q<next>`TIMEOUT %2=if(u(FUN`CONFIG,%2,TIMEOUT),u(FUN`CONFIG,%2,TIMEOUT),0)}

&INC`IMPORT u(bbs)=@attach u(bbs)/INC`MYR`FINDBBP;@assert/inline strlen(%1)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No Old Board number entered to convert from.;@assert/inline isdbref(u(setr,oldbb,elements(get(%q<bbp>/groups),%1)))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Old Board not found.;@attach u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)] This will attempt to import Old Myrddin Board %1: [name(%q<oldbb>)]. A new, unlocked board with the same name will be created and posts copied/converted. Please enter the same command again within ten seconds to verify.},%q<ann> IMPORT %1,%q<ann>;@attach u(bbs)/INC`NEWGROUP=%0,name(%q<oldbb>);@trigger u(bbs)/INC`MYR`TRANSFER=%0,%q<oldbb>,%q<bb>;@pemit %#=u(RFN`MSGHEAD,%q<ann>) Conversion of [words(%q<list>)] messages (hopefully) complete!

&INC`TRANSFER u(bbs)=@attach u(bbs)/INC`MYR`FINDBBP;@assert/inline strlen(%1)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No Old Board number entered to convert from.;@assert/inline isdbref(u(setr,oldbb,elements(get(%q<bbp>/groups),%1)))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Old Board not found.;@attach u(bbs)/INC`CHECK`FINDBB=%0,%3,WRITE;@attach u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)] This will attempt to transfer messages from Old Myrddin Board %1: [name(%q<oldbb>)] to New BB: [name(%q<bb>)]. Please enter the same command again within ten seconds to verify.},%q<ann> TRANSFER %q<oldbb> %q<bb>,%q<ann>;@trigger u(bbs)/INC`MYR`TRANSFER=%0,%q<oldbb>,%q<bb>;@pemit %#=u(RFN`MSGHEAD,%q<ann>) Conversion of [words(%q<list>)] messages (hopefully) complete!

&INC`CONVERT u(bbs)=@attach u(bbs)/INC`MYR`FINDBBP;@attach u(ccs)/INC`VERIFY={[ansi(hr,WARNING:)] This will attempt to COMPLETELY CONVERT the old Myrddin Board to the new BB, creating boards and copying posts in order. Please be VERY SURE you want to do this by entering the same command again within ten seconds.},%q<ann> CONVERT %q<bbp>;@pemit %#=u(RFn`MSGHEAD,%q<ann>) Okay! Beginning conversion. This will take approximately [u(setr,time,mul(2,words(get(%q<bbp>/groups))))] Seconds to complete.;@dolist filterbool(#lambda/isdbref(\%0),get(%q<bbp>/groups))={@wait mul(inum(0),2)={@attach u(bbs)/INC`NEWGROUP=%0,name(%i0);@pemit %#=u(RFN`MSGHEAD,%q<ann>) Converting Board [inum(0)]: [name(%i0)]...;@trigger u(bbs)/INC`MYR`TRANSFER=%0,%i0,%q<bb>}};@wait add(%q<time>,2)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) Conversion process complete.

&INC`ORDER u(bbs)=@assert/inline u(setr,num,words(u(setr,list,switch(%0,BB,get(u(bbs-db)/groups),GB,get(%q<gid1>/boards)))))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: No boards to re-order.;@assert/inline strlen(%1)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: New order field empty.;@assert/inline eq(%q<num>,words(%1))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: new order field should not contain more than %q<num> numbers.;@break/inline words(setdiff(lnum(1,%q<num>),%1))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Some numbers in that list don't match with the original.;@assert/inline strmatch(lnum(1,%q<num>),sort(%1))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: At least one number was duplicated in the new order field.;th u(setq,newlist,elements(%q<list>,%1));@switch/first/inline %0=BB,{&groups u(bbs-db)=%q<newlist>},GB,{&boards %q<gid1>=%q<newlist>};@pemit %#=u(RFN`MSGHEAD,%q<ann>) The board order was changed!

&INC`RENAME u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@assert/inline strlen(%3)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: New name field empty.;@assert/inline valid(name,%3)=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: Not a suitable object name. Please try something simpler - perhaps without fancy characters?;@break/inline isdbref(locate(switch(%0,BB,u(bbs-db),GB,%q<gid1>),trim(%3),TXxi))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) ERROR: A board already has that name.;@pemit %#=u(RFN`MSGHEAD,%q<ann>) You renamed Board [name(%q<bb>)] to: %3;@name %q<bb>=%3

&INC`SEARCH u(bbs)=@attach u(bbs)/INC`CHECK`FINDBB=%0,%1,WRITE;@attach u(ccs)/INC`CHECKPC=%3,1,%q<ann>;@assert/inline words(u(setr,posts,iter(grepi(%q<bb>,*`BYDB,%q<t1objid>),first(%i0,`))))=@pemit %#=u(RFN`MSGHEAD,%q<ann>) No posts by %q<t1name> on [name(%q<bb>)].;@pemit %#=u(RFN`HEADER,BBS - [name(%q<bb>)])%r[space(8)]Message[space(28)]Posted[space(8)]By;@dolist/inline %q<posts>={@pemit %#=ljust(pueblize(%q<bbnum>/[match(u(FUN`LISTPOSTS,%q<bb>),%i0)],+[lcstr(%0)]read %q<bbnum>/[match(u(FUN`LISTPOSTS,%q<bb>),%i0)]),6)[ljust(u(u(bbs)/FUN`MSGFLAG,%#,%q<bb>,%i0),2)][ljust(get(%q<bb>/%i0`HDR),35)][ljust(timefmt($b $d $Y,lmath(max,firstof(get(%q<bb>/%i0`EDITED),get(%q<bb>/%i0`ON)))),14)][left(if(get(u(bbs-db)/BB`%q<bb>`ANONYMOUS),if(%q<isadmin>,([ansi(hx,get(%q<bb>/%i0`BY))]),default(u(bbs-db)/BB`%q<bb>`ANONYMOUS,Anonymous)),get(%q<bb>/%i0`BY)),21)]};@pemit %#=u(RFN`HEADER,)

th attrib_set(u(cco-db)/VAR`CATEGORIES,setunion(get(u(cco-db)/VAR`CATEGORIES),BBS,|,|))
&VAR`CATEGORIES`BBS u(cco-db)=BOARDNUM|BOARDNAME|BOARDSTATUS|POSTNAME|POSTNUM|LASTPOST|NUMMESS|POSTAUTHOR|POSTDATE|POSTTITLE|POSTTIMEOUT|BORDER|BORDERDOT|BORDERTEXT